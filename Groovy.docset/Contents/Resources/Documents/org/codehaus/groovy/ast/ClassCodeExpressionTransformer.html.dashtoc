{"entries":[{"name":"Constructors","isHeader":true},{"name":"ClassCodeExpressionTransformer()","path":"ClassCodeExpressionTransformer()","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"transform(Expression)","path":"transform(org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"visitAnnotations(AnnotatedNode)","path":"visitAnnotations(org.codehaus.groovy.ast.AnnotatedNode)","entryType":"Method"},{"name":"visitAssertStatement(AssertStatement)","path":"visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)","entryType":"Method"},{"name":"visitCaseStatement(CaseStatement)","path":"visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement)","entryType":"Method"},{"name":"visitConstructorOrMethod(MethodNode, boolean)","path":"visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,%20boolean)","entryType":"Method"},{"name":"visitDoWhileLoop(DoWhileStatement)","path":"visitDoWhileLoop(org.codehaus.groovy.ast.stmt.DoWhileStatement)","entryType":"Method"},{"name":"visitExpressionStatement(ExpressionStatement)","path":"visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)","entryType":"Method"},{"name":"visitField(FieldNode)","path":"visitField(org.codehaus.groovy.ast.FieldNode)","entryType":"Method"},{"name":"visitForLoop(ForStatement)","path":"visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)","entryType":"Method"},{"name":"visitIfElse(IfStatement)","path":"visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)","entryType":"Method"},{"name":"visitProperty(PropertyNode)","path":"visitProperty(org.codehaus.groovy.ast.PropertyNode)","entryType":"Method"},{"name":"visitReturnStatement(ReturnStatement)","path":"visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)","entryType":"Method"},{"name":"visitSwitch(SwitchStatement)","path":"visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)","entryType":"Method"},{"name":"visitSynchronizedStatement(SynchronizedStatement)","path":"visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)","entryType":"Method"},{"name":"visitThrowStatement(ThrowStatement)","path":"visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)","entryType":"Method"},{"name":"visitWhileLoop(WhileStatement)","path":"visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)","entryType":"Method"}]}