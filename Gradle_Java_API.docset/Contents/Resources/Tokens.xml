<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0"><Token><TokenIdentifier><Name>absoluteProjectPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>absoluteProjectPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractArchiveTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractArchiveTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>AbstractArchiveTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractBuildCache</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/AbstractBuildCache.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractBuildCache()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/AbstractBuildCache.html</Path>
<Anchor>AbstractBuildCache--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractClasspathEntry</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractClasspathEntry(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>AbstractClasspathEntry-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractClasspathEntry(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>AbstractClasspathEntry-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>AbstractCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractCopyTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractCopyTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>AbstractCopyTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractDependencyReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractDependencyReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>AbstractDependencyReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractExecTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractExecTask(Class&lt;T&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>AbstractExecTask-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractLibrary</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractLibrary(Node, FileReferenceFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>AbstractLibrary-groovy.util.Node-org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractLibrary(FileReference)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>AbstractLibrary-org.gradle.plugins.ide.eclipse.model.FileReference-</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractLinkTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractLinkTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>AbstractLinkTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractNativeCompileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractNativeCompileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>AbstractNativeCompileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractNativePCHCompileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativePCHCompileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractNativePCHCompileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativePCHCompileTask.html</Path>
<Anchor>AbstractNativePCHCompileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractNativeSourceCompileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeSourceCompileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractNativeSourceCompileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeSourceCompileTask.html</Path>
<Anchor>AbstractNativeSourceCompileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractOptions.html</Path>
<Anchor>AbstractOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractPublishToMaven</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractPublishToMaven()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html</Path>
<Anchor>AbstractPublishToMaven--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>AbstractReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractScalaCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractScalaCompile(BaseScalaCompileOptions)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>AbstractScalaCompile-org.gradle.language.scala.tasks.BaseScalaCompileOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractSignatureType</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureType.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractSignatureType()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureType.html</Path>
<Anchor>AbstractSignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractSignatureTypeProvider</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureTypeProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractSignatureTypeProvider()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureTypeProvider.html</Path>
<Anchor>AbstractSignatureTypeProvider--</Anchor></Token>
<Token><TokenIdentifier><Name>AbstractTestTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AbstractTestTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>AbstractTestTask--</Anchor></Token>
<Token><TokenIdentifier><Name>accept(Artifact, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PublishFilter.html</Path>
<Anchor>accept-org.apache.ivy.core.module.descriptor.Artifact-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>AccessRule</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
</Token>
<Token><TokenIdentifier><Name>AccessRule(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>AccessRule-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>AccessRule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/AccessRule.html</Path>
</Token>
<Token><TokenIdentifier><Name>accessRules</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>accessRules</Anchor></Token>
<Token><TokenIdentifier><Name>Action</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Action.html</Path>
</Token>
<Token><TokenIdentifier><Name>action(BuildAction&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>action-org.gradle.tooling.BuildAction-</Anchor></Token>
<Token><TokenIdentifier><Name>action()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>action--</Anchor></Token>
<Token><TokenIdentifier><Name>ActionConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ActionConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>activateDependencyLocking()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>activateDependencyLocking--</Anchor></Token>
<Token><TokenIdentifier><Name>add(ArtifactRepository)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>add-org.gradle.api.artifacts.repositories.ArtifactRepository-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependenciesMetadata.html</Path>
<Anchor>add-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependenciesMetadata.html</Path>
<Anchor>add-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependenciesMetadata.html</Path>
<Anchor>add-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Map&lt;String, String&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependenciesMetadata.html</Path>
<Anchor>add-java.util.Map-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ArtifactHandler.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ArtifactHandler.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object, Action&lt;? super ConfigurablePublishArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ArtifactHandler.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyConstraintHandler.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object, Action&lt;? super DependencyConstraint&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyConstraintHandler.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRuleContainer.html</Path>
<Anchor>add-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Class&lt;? extends AttributeCompatibilityRule&lt;T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityRuleChain.html</Path>
<Anchor>add-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Class&lt;? extends AttributeCompatibilityRule&lt;T&gt;&gt;, Action&lt;? super ActionConfiguration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityRuleChain.html</Path>
<Anchor>add-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Class&lt;? extends AttributeDisambiguationRule&lt;T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/DisambiguationRuleChain.html</Path>
<Anchor>add-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Class&lt;? extends AttributeDisambiguationRule&lt;T&gt;&gt;, Action&lt;? super ActionConfiguration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/DisambiguationRuleChain.html</Path>
<Anchor>add-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>add(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>add-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>add(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>add-T-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Class&lt;T&gt;, String, T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>add-java.lang.Class-java.lang.String-T-</Anchor></Token>
<Token><TokenIdentifier><Name>add(TypeOf&lt;T&gt;, String, T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>add-org.gradle.api.reflect.TypeOf-java.lang.String-T-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>add-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>add(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>add-T-</Anchor></Token>
<Token><TokenIdentifier><Name>add(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/HasMultipleValues.html</Path>
<Anchor>add-T-</Anchor></Token>
<Token><TokenIdentifier><Name>add(Provider&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/HasMultipleValues.html</Path>
<Anchor>add-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>add(String, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyExtraInfoSpec.html</Path>
<Anchor>add-java.lang.String-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addAll(Collection&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>addAll-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>addAll(Collection&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>addAll-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>addAll(Provider&lt;? extends Iterable&lt;T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/HasMultipleValues.html</Path>
<Anchor>addAll-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>addArtifact(PublishArtifact)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>addArtifact-org.gradle.api.artifacts.PublishArtifact-</Anchor></Token>
<Token><TokenIdentifier><Name>addArtifact(DependencyArtifact)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>addArtifact-org.gradle.api.artifacts.DependencyArtifact-</Anchor></Token>
<Token><TokenIdentifier><Name>addAssetDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PublicAssets.html</Path>
<Anchor>addAssetDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>addBooleanOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addBooleanOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addBooleanOption(String, boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addBooleanOption-java.lang.String-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>addBuildListener(BuildListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>addBuildListener-org.gradle.BuildListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addCapability(String, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/MutableCapabilitiesMetadata.html</Path>
<Anchor>addCapability-java.lang.String-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addClasspathEntry(Node, Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>addClasspathEntry-groovy.util.Node-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>addConfiguration(ConfigurationContainer, DependencyHandler, EnvJsExtension)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsPlugin.html</Path>
<Anchor>addConfiguration-org.gradle.api.artifacts.ConfigurationContainer-org.gradle.api.artifacts.dsl.DependencyHandler-org.gradle.plugins.javascript.envjs.EnvJsExtension-</Anchor></Token>
<Token><TokenIdentifier><Name>addConfiguration(ConfigurationContainer, DependencyHandler, JsHintExtension)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintPlugin.html</Path>
<Anchor>addConfiguration-org.gradle.api.artifacts.ConfigurationContainer-org.gradle.api.artifacts.dsl.DependencyHandler-org.gradle.plugins.javascript.jshint.JsHintExtension-</Anchor></Token>
<Token><TokenIdentifier><Name>addDependency(ModuleDependency)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ClientModule.html</Path>
<Anchor>addDependency-org.gradle.api.artifacts.ModuleDependency-</Anchor></Token>
<Token><TokenIdentifier><Name>addEnumOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addEnumOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addEnumOption(String, T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addEnumOption-java.lang.String-T-</Anchor></Token>
<Token><TokenIdentifier><Name>addFileOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addFileOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addFileOption(String, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addFileOption-java.lang.String-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>addFilter(String, PublishFilter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>addFilter-java.lang.String-org.gradle.api.artifacts.maven.PublishFilter-</Anchor></Token>
<Token><TokenIdentifier><Name>addFilter(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>addFilter-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>addFirst(ArtifactRepository)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>addFirst-org.gradle.api.artifacts.repositories.ArtifactRepository-</Anchor></Token>
<Token><TokenIdentifier><Name>addInitScript(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>addInitScript-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>additionalClassDirs(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>additionalClassDirs-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>additionalClassDirs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>additionalClassDirs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>additionalLinkFiles(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinarySpec.html</Path>
<Anchor>additionalLinkFiles-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>additionalSourceDirs(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>additionalSourceDirs-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>additionalSourceDirs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>additionalSourceDirs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>addLast(ArtifactRepository)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>addLast-org.gradle.api.artifacts.repositories.ArtifactRepository-</Anchor></Token>
<Token><TokenIdentifier><Name>addLater(Provider&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>addLater-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>addListener(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>addListener-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>addMapping(int, Configuration, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>addMapping-int-org.gradle.api.artifacts.Configuration-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addModulePath(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>addModulePath-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>addMultilineMultiValueOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addMultilineMultiValueOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addMultilineStringsOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addMultilineStringsOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addOption(JavadocOptionFileOption&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addOption-org.gradle.external.javadoc.JavadocOptionFileOption-</Anchor></Token>
<Token><TokenIdentifier><Name>addPathOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addPathOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addPathOption(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addPathOption-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addPathVariable(String, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
<Anchor>addPathVariable-java.lang.String-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>addProgressListener(ProgressListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>addProgressListener-org.gradle.tooling.ProgressListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addProgressListener(ProgressListener, Set&lt;OperationType&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>addProgressListener-org.gradle.tooling.events.ProgressListener-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>addProgressListener(ProgressListener, OperationType...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>addProgressListener-org.gradle.tooling.events.ProgressListener-org.gradle.tooling.events.OperationType...-</Anchor></Token>
<Token><TokenIdentifier><Name>addProgressListener(ProgressListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>addProgressListener-org.gradle.tooling.ProgressListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addProgressListener(ProgressListener, Set&lt;OperationType&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>addProgressListener-org.gradle.tooling.events.ProgressListener-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>addProgressListener(ProgressListener, OperationType...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>addProgressListener-org.gradle.tooling.events.ProgressListener-org.gradle.tooling.events.OperationType...-</Anchor></Token>
<Token><TokenIdentifier><Name>addProjectEvaluationListener(ProjectEvaluationListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>addProjectEvaluationListener-org.gradle.api.ProjectEvaluationListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addProtocolProviderJars(Collection&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
<Anchor>addProtocolProviderJars-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>addResourceDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/JvmClasses.html</Path>
<Anchor>addResourceDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>addRule(Rule)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>addRule-org.gradle.api.Rule-</Anchor></Token>
<Token><TokenIdentifier><Name>addRule(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>addRule-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>addRule(String, Action&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>addRule-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>addSignatureSpecConventions(SignatureSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>addSignatureSpecConventions-org.gradle.plugins.signing.SignatureSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>addSignaturesToConfiguration(Sign, Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>addSignaturesToConfiguration-org.gradle.plugins.signing.Sign-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>addStandardErrorListener(StandardOutputListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingOutput.html</Path>
<Anchor>addStandardErrorListener-org.gradle.api.logging.StandardOutputListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addStandardOutputListener(StandardOutputListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingOutput.html</Path>
<Anchor>addStandardOutputListener-org.gradle.api.logging.StandardOutputListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addStringOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addStringOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addStringOption(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addStringOption-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addStringsOption(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addStringsOption-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addStringsOption(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>addStringsOption-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addTaskExecutionGraphListener(TaskExecutionGraphListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>addTaskExecutionGraphListener-org.gradle.api.execution.TaskExecutionGraphListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addTaskExecutionListener(TaskExecutionListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>addTaskExecutionListener-org.gradle.api.execution.TaskExecutionListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addTestListener(TestListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>addTestListener-org.gradle.api.tasks.testing.TestListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addTestOutputListener(TestOutputListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>addTestOutputListener-org.gradle.api.tasks.testing.TestOutputListener-</Anchor></Token>
<Token><TokenIdentifier><Name>addToAntBuilder(Object, String, FileCollection.AntType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>addToAntBuilder-java.lang.Object-java.lang.String-org.gradle.api.file.FileCollection.AntType-</Anchor></Token>
<Token><TokenIdentifier><Name>addToAntBuilder(Object, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>addToAntBuilder-java.lang.Object-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addToAntBuilder(Object, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AntBuilderAware.html</Path>
<Anchor>addToAntBuilder-java.lang.Object-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addToAntBuilder(Object, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>addToAntBuilder-java.lang.Object-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>addToNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Dependency.html</Path>
<Anchor>addToNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>addToNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>addToNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>addToNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>addToNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>addToNode(Node, PathFactory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>addToNode-groovy.util.Node-org.gradle.plugins.ide.idea.model.PathFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>addUserTemplateFormat(String, String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
<Anchor>addUserTemplateFormat-java.lang.String-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>addUserTemplateFormat(String, String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>addUserTemplateFormat-java.lang.String-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>afterActions(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskActionListener.html</Path>
<Anchor>afterActions-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>afterConfigured</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>afterConfigured</Anchor></Token>
<Token><TokenIdentifier><Name>afterEach(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>afterEach-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>afterEach(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>afterEach-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>afterEach(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelSet.html</Path>
<Anchor>afterEach-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>afterEvaluate(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>afterEvaluate-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>afterEvaluate(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>afterEvaluate-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>afterEvaluate(Project, ProjectState)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectEvaluationListener.html</Path>
<Anchor>afterEvaluate-org.gradle.api.Project-org.gradle.api.ProjectState-</Anchor></Token>
<Token><TokenIdentifier><Name>afterExecute(Task, TaskState)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionAdapter.html</Path>
<Anchor>afterExecute-org.gradle.api.Task-org.gradle.api.tasks.TaskState-</Anchor></Token>
<Token><TokenIdentifier><Name>afterExecute(Task, TaskState)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionListener.html</Path>
<Anchor>afterExecute-org.gradle.api.Task-org.gradle.api.tasks.TaskState-</Anchor></Token>
<Token><TokenIdentifier><Name>afterProject(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>afterProject-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>afterProject(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>afterProject-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>afterResolve(ResolvableDependencies)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolutionListener.html</Path>
<Anchor>afterResolve-org.gradle.api.artifacts.ResolvableDependencies-</Anchor></Token>
<Token><TokenIdentifier><Name>afterResolve(Action&lt;? super ResolvableDependencies&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>afterResolve-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>afterResolve(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>afterResolve-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>afterSuite(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>afterSuite-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>afterSuite(TestDescriptor, TestResult)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestListener.html</Path>
<Anchor>afterSuite-org.gradle.api.tasks.testing.TestDescriptor-org.gradle.api.tasks.testing.TestResult-</Anchor></Token>
<Token><TokenIdentifier><Name>afterTask(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>afterTask-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>afterTask(Action&lt;Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>afterTask-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>afterTest(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>afterTest-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>afterTest(TestDescriptor, TestResult)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestListener.html</Path>
<Anchor>afterTest-org.gradle.api.tasks.testing.TestDescriptor-org.gradle.api.tasks.testing.TestResult-</Anchor></Token>
<Token><TokenIdentifier><Name>AGENT_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
<Anchor>AGENT_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>aggregate(Reporting&lt;? extends ReportContainer&lt;?&gt;&gt;...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
<Anchor>aggregate-org.gradle.api.reporting.Reporting...-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Action&lt;? super ComponentSelection&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelectionRules.html</Path>
<Anchor>all-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelectionRules.html</Path>
<Anchor>all-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelectionRules.html</Path>
<Anchor>all-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Action&lt;? super DependencySubstitution&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.html</Path>
<Anchor>all-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Action&lt;? super ComponentMetadataDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentMetadataHandler.html</Path>
<Anchor>all-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentMetadataHandler.html</Path>
<Anchor>all-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentMetadataHandler.html</Path>
<Anchor>all-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>all-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>all-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>all-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>all(Action&lt;? super VcsMapping&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VcsMappings.html</Path>
<Anchor>all-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>allComponents(Action&lt;? super ResolvedComponentResult&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
<Anchor>allComponents-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>allComponents(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
<Anchor>allComponents-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>allDependencies(Action&lt;? super DependencyResult&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
<Anchor>allDependencies-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>allDependencies(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
<Anchor>allDependencies-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>allprojects(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>allprojects-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>allprojects(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>allprojects-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>allprojects(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>allprojects-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>allVariants(Action&lt;? super VariantMetadata&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataDetails.html</Path>
<Anchor>allVariants-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ALWAYS_ACCEPT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PublishFilter.html</Path>
<Anchor>ALWAYS_ACCEPT</Anchor></Token>
<Token><TokenIdentifier><Name>and(Spec&lt;? super T&gt;...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>and-org.gradle.api.specs.Spec...-</Anchor></Token>
<Token><TokenIdentifier><Name>and(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>and-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>and(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>and-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>AndSpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>AndSpec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>AndSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>AndSpec(Spec&lt;? super T&gt;...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>AndSpec-org.gradle.api.specs.Spec...-</Anchor></Token>
<Token><TokenIdentifier><Name>AndSpec(Iterable&lt;? extends Spec&lt;? super T&gt;&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>AndSpec-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>ANNOTATION_PROCESSOR_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>ANNOTATION_PROCESSOR_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>announce(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>announce-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>AnnouncePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>AnnouncePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePlugin.html</Path>
<Anchor>AnnouncePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>AnnouncePluginExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>AnnouncePluginExtension(ProjectInternal)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>AnnouncePluginExtension-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>Announcer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/Announcer.html</Path>
</Token>
<Token><TokenIdentifier><Name>ant(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>ant-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>ant(Action&lt;? super AntBuilder&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>ant-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ANT_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
<Anchor>ANT_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>AntBuilder</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>AntBuilder()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>AntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>AntBuilder.AntMessagePriority</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.AntMessagePriority.html</Path>
</Token>
<Token><TokenIdentifier><Name>AntBuilderAware</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AntBuilderAware.html</Path>
</Token>
<Token><TokenIdentifier><Name>antlr(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrSourceVirtualDirectory.html</Path>
<Anchor>antlr-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>antlr(Action&lt;? super SourceDirectorySet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrSourceVirtualDirectory.html</Path>
<Anchor>antlr-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ANTLR_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrPlugin.html</Path>
<Anchor>ANTLR_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>AntlrPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>AntlrPlugin(SourceDirectorySetFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrPlugin.html</Path>
<Anchor>AntlrPlugin-org.gradle.api.internal.file.SourceDirectorySetFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>AntlrSourceVirtualDirectory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrSourceVirtualDirectory.html</Path>
</Token>
<Token><TokenIdentifier><Name>AntlrTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>AntlrTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>AntlrTask--</Anchor></Token>
<Token><TokenIdentifier><Name>AntTarget</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
</Token>
<Token><TokenIdentifier><Name>AntTarget()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>AntTarget--</Anchor></Token>
<Token><TokenIdentifier><Name>api(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/LibraryDependencies.html</Path>
<Anchor>api-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>api(Object, Action&lt;? super ExternalModuleDependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/LibraryDependencies.html</Path>
<Anchor>api-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>API_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>API_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>API_ELEMENTS_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>API_ELEMENTS_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ApiJar</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/ApiJar.html</Path>
</Token>
<Token><TokenIdentifier><Name>ApiJar()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/ApiJar.html</Path>
<Anchor>ApiJar--</Anchor></Token>
<Token><TokenIdentifier><Name>appDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>appDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>append(RelativePath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>append-org.gradle.api.file.RelativePath-</Anchor></Token>
<Token><TokenIdentifier><Name>append(boolean, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>append-boolean-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ClasspathEntry.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbModuleEntry.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>appendNode(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>appendNode-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>Application</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Application.html</Path>
</Token>
<Token><TokenIdentifier><Name>APPLICATION_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>APPLICATION_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>APPLICATION_PLUGIN_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>APPLICATION_PLUGIN_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ApplicationBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ApplicationBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>ApplicationPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ApplicationPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>ApplicationPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ApplicationPluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>ApplicationPluginConvention(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>ApplicationPluginConvention-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>ApplicationSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ApplicationSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>AppliedPlugin</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/AppliedPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/plugins/DistributionPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Plugin.html</Path>
<Anchor>apply-T-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/BuildAnnouncementsPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuildsPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaLibraryDistributionPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaLibraryPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginAware.html</Path>
<Anchor>apply-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Action&lt;? super ObjectConfigurationAction&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginAware.html</Path>
<Anchor>apply-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginAware.html</Path>
<Anchor>apply-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>apply-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>apply-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginManager.html</Path>
<Anchor>apply-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Class&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginManager.html</Path>
<Anchor>apply-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ReportingBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/plugins/IvyPublishPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/plugins/MavenPublishPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/plugins/PublishingPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/plugins/BuildDashboardPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Rule.html</Path>
<Anchor>apply-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>apply-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>apply-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/plugins/BuildInitPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/plugins/WrapperPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JUnitTestSuitePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JvmComponentPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/plugins/AssemblerLangPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/plugins/AssemblerPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/ComponentModelBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LanguageBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/plugins/CLangPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/plugins/CPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppApplicationPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppLangPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppLibraryPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/plugins/JavaLanguagePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/plugins/JvmResourcesPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/plugins/ObjectiveCLangPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/plugins/ObjectiveCPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/plugins/ObjectiveCppLangPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/plugins/ObjectiveCppPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/plugins/NativeBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/plugins/WindowsResourceScriptPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/plugins/WindowsResourcesPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/plugins/ScalaLanguagePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftApplicationPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftLibraryPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/plugins/NativeComponentModelPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/plugins/NativeComponentPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/plugins/CppUnitTestPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/plugins/CUnitConventionPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/plugins/CUnitPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/plugins/GoogleTestConventionPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/plugins/GoogleTestPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/plugins/NativeBinariesTestPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/plugins/NativeTestingBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/plugins/XCTestConventionPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/ClangCompilerPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/GccCompilerPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/MicrosoftVisualCppCompilerPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/SwiftCompilerPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/plugins/BinaryBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/plugins/ComponentBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/ide/PlayIdePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayApplicationPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayCoffeeScriptPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayJavaScriptPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/plugins/JavaGradlePluginPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginDependencySpec.html</Path>
<Anchor>apply-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/plugins/SwiftPackageManagerExportPlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingModelBasePlugin.html</Path>
<Anchor>apply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>apply(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
<Anchor>apply-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>applyTo(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>applyTo-T-</Anchor></Token>
<Token><TokenIdentifier><Name>applyTo(TaskCollection&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>applyTo-org.gradle.api.tasks.TaskCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>Architecture</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/Architecture.html</Path>
</Token>
<Token><TokenIdentifier><Name>architecture(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/NativePlatform.html</Path>
<Anchor>architecture-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ARCHIVES_CONFIGURATION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>ARCHIVES_CONFIGURATION</Anchor></Token>
<Token><TokenIdentifier><Name>args(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>args-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>args-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>args-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>args-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>args(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Tool.html</Path>
<Anchor>args-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>args-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>args-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>args-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>args-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>args-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>args(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>args-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>ArmoredSignatureType</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/pgp/ArmoredSignatureType.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArmoredSignatureType()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/pgp/ArmoredSignatureType.html</Path>
<Anchor>ArmoredSignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
<Anchor>artifact-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object, Action&lt;? super ConfigurablePublishArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
<Anchor>artifact-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationVariant.html</Path>
<Anchor>artifact-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object, Action&lt;? super ConfigurablePublishArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationVariant.html</Path>
<Anchor>artifact-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>artifact-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Action&lt;? super DependencyArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>artifact-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.MetadataSources.html</Path>
<Anchor>artifact--</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyPatternRepositoryLayout.html</Path>
<Anchor>artifact-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.MetadataSources.html</Path>
<Anchor>artifact--</Anchor></Token>
<Token><TokenIdentifier><Name>Artifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/Artifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>artifact(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifactSet.html</Path>
<Anchor>artifact-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object, Action&lt;? super IvyArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifactSet.html</Path>
<Anchor>artifact-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>artifact-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object, Action&lt;? super IvyArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>artifact-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifactSet.html</Path>
<Anchor>artifact-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object, Action&lt;? super MavenArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifactSet.html</Path>
<Anchor>artifact-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>artifact-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>artifact(Object, Action&lt;? super MavenArtifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>artifact-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ArtifactCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ArtifactHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>artifactPattern(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>artifactPattern-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ArtifactRepository</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/ArtifactRepository.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactRepositoryContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactResolutionQuery</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/ArtifactResolutionQuery.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactResolutionResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ArtifactResolutionResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ArtifactResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>artifacts(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>artifacts-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>artifacts(Action&lt;? super ArtifactHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>artifacts-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ArtifactTransform</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/ArtifactTransform.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactTransform()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/ArtifactTransform.html</Path>
<Anchor>ArtifactTransform--</Anchor></Token>
<Token><TokenIdentifier><Name>artifactTransform(Class&lt;? extends ArtifactTransform&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransform.html</Path>
<Anchor>artifactTransform-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>artifactTransform(Class&lt;? extends ArtifactTransform&gt;, Action&lt;? super ActionConfiguration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransform.html</Path>
<Anchor>artifactTransform-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ArtifactTransformException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/ArtifactTransformException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactTransformException(File, AttributeContainer, Class&lt;? extends ArtifactTransform&gt;, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/ArtifactTransformException.html</Path>
<Anchor>ArtifactTransformException-java.io.File-org.gradle.api.attributes.AttributeContainer-java.lang.Class-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ArtifactTypeContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/ArtifactTypeContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>ArtifactTypeDefinition</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/ArtifactTypeDefinition.html</Path>
</Token>
<Token><TokenIdentifier><Name>artifactTypes(Action&lt;? super ArtifactTypeContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>artifactTypes-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>artifactUrls(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>artifactUrls-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>ArtifactView</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.html</Path>
</Token>
<Token><TokenIdentifier><Name>artifactView(Action&lt;? super ArtifactView.ViewConfiguration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>artifactView-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ArtifactView.ViewConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.ViewConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>asArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/CommandLineArgumentProvider.html</Path>
<Anchor>asArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>asBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/TextProvider.html</Path>
<Anchor>asBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>asElement()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/XmlProvider.html</Path>
<Anchor>asElement--</Anchor></Token>
<Token><TokenIdentifier><Name>asFile(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
<Anchor>asFile-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>asFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
<Anchor>asFile--</Anchor></Token>
<Token><TokenIdentifier><Name>asImmutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/MutableCapabilitiesMetadata.html</Path>
<Anchor>asImmutable--</Anchor></Token>
<Token><TokenIdentifier><Name>asMap()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyExtraInfo.html</Path>
<Anchor>asMap--</Anchor></Token>
<Token><TokenIdentifier><Name>asNode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/XmlProvider.html</Path>
<Anchor>asNode--</Anchor></Token>
<Token><TokenIdentifier><Name>asReader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
<Anchor>asReader--</Anchor></Token>
<Token><TokenIdentifier><Name>Assemble</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
</Token>
<Token><TokenIdentifier><Name>Assemble()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>Assemble--</Anchor></Token>
<Token><TokenIdentifier><Name>assemble()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>assemble--</Anchor></Token>
<Token><TokenIdentifier><Name>ASSEMBLE_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
<Anchor>ASSEMBLE_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ASSEMBLE_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>ASSEMBLE_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>AssemblerLangPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/plugins/AssemblerLangPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>AssemblerLangPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/plugins/AssemblerLangPlugin.html</Path>
<Anchor>AssemblerLangPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>AssemblerPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/plugins/AssemblerPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>AssemblerPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/plugins/AssemblerPlugin.html</Path>
<Anchor>AssemblerPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>AssemblerSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/AssemblerSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>assertNormalExitValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecResult.html</Path>
<Anchor>assertNormalExitValue--</Anchor></Token>
<Token><TokenIdentifier><Name>assertScalaClasspathIsNonEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>assertScalaClasspathIsNonEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>asString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
<Anchor>asString--</Anchor></Token>
<Token><TokenIdentifier><Name>asString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/XmlProvider.html</Path>
<Anchor>asString--</Anchor></Token>
<Token><TokenIdentifier><Name>asType(Class&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>asType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>Attribute</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
</Token>
<Token><TokenIdentifier><Name>attribute(Attribute&lt;T&gt;, T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeContainer.html</Path>
<Anchor>attribute-org.gradle.api.attributes.Attribute-T-</Anchor></Token>
<Token><TokenIdentifier><Name>attribute(Attribute&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributesSchema.html</Path>
<Anchor>attribute-org.gradle.api.attributes.Attribute-</Anchor></Token>
<Token><TokenIdentifier><Name>attribute(Attribute&lt;T&gt;, Action&lt;? super AttributeMatchingStrategy&lt;T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributesSchema.html</Path>
<Anchor>attribute-org.gradle.api.attributes.Attribute-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>AttributeCompatibilityRule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeCompatibilityRule.html</Path>
</Token>
<Token><TokenIdentifier><Name>AttributeContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>AttributeDisambiguationRule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeDisambiguationRule.html</Path>
</Token>
<Token><TokenIdentifier><Name>AttributeMatchingStrategy</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeMatchingStrategy.html</Path>
</Token>
<Token><TokenIdentifier><Name>attributes(Action&lt;? super AttributeContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraint.html</Path>
<Anchor>attributes-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>attributes(Action&lt;? super AttributeContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>attributes-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>attributes(Action&lt;? super AttributeContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>attributes-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>attributes(Action&lt;? super AttributeContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/HasConfigurableAttributes.html</Path>
<Anchor>attributes-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Attributes</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Attributes.html</Path>
</Token>
<Token><TokenIdentifier><Name>attributes(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>attributes-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>attributes(Map&lt;String, ?&gt;, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>attributes-java.util.Map-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>attributesSchema(Action&lt;? super AttributesSchema&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>attributesSchema-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>AttributesSchema</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributesSchema.html</Path>
</Token>
<Token><TokenIdentifier><Name>authentication(Action&lt;? super AuthenticationContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationSupported.html</Path>
<Anchor>authentication-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Authentication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/authentication/Authentication.html</Path>
</Token>
<Token><TokenIdentifier><Name>AuthenticationContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>AuthenticationSupported</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationSupported.html</Path>
</Token>
<Token><TokenIdentifier><Name>author(Action&lt;? super IvyModuleDescriptorAuthor&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>author-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>author(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>author-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>author()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>author--</Anchor></Token>
<Token><TokenIdentifier><Name>await()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerExecutor.html</Path>
<Anchor>await--</Anchor></Token>
<Token><TokenIdentifier><Name>AwsCredentials</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/AwsCredentials.html</Path>
</Token>
<Token><TokenIdentifier><Name>AwsImAuthentication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/authentication/aws/AwsImAuthentication.html</Path>
</Token>
<Token><TokenIdentifier><Name>BaseBinarySpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>BaseBinarySpec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>BaseBinarySpec--</Anchor></Token>
<Token><TokenIdentifier><Name>BaseComponentSpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/component/BaseComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>BaseComponentSpec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/component/BaseComponentSpec.html</Path>
<Anchor>BaseComponentSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>BaseExecSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>BaseForkOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>BaseForkOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>BaseForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>BaseLanguageSourceSet</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/sources/BaseLanguageSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>BaseLanguageSourceSet()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/sources/BaseLanguageSourceSet.html</Path>
<Anchor>BaseLanguageSourceSet--</Anchor></Token>
<Token><TokenIdentifier><Name>BasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>BasePlugin(ProjectPublicationRegistry, ProjectConfigurationActionContainer, ImmutableModuleIdentifierFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
<Anchor>BasePlugin-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry-org.gradle.configuration.project.ProjectConfigurationActionContainer-org.gradle.api.internal.artifacts.ImmutableModuleIdentifierFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>BasePluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>BasePluginConvention(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>BasePluginConvention-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>BaseScalaCompileOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>BaseScalaCompileOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>BaseScalaCompileOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>BasicAuthentication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/authentication/http/BasicAuthentication.html</Path>
</Token>
<Token><TokenIdentifier><Name>BasicGradleProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BasicGradleProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>BasicIdeaProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/BasicIdeaProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>because(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>because-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>because(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraint.html</Path>
<Anchor>because-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>because(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>because-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>because(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolveDetails.html</Path>
<Anchor>because-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>because(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.Substitution.html</Path>
<Anchor>because-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeActions(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskActionListener.html</Path>
<Anchor>beforeActions-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeApply()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>beforeApply--</Anchor></Token>
<Token><TokenIdentifier><Name>beforeConfigured</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>beforeConfigured</Anchor></Token>
<Token><TokenIdentifier><Name>beforeDeployment(Action&lt;? super MavenDeployment&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenResolver.html</Path>
<Anchor>beforeDeployment-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeDeployment(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenResolver.html</Path>
<Anchor>beforeDeployment-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeEach(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>beforeEach-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeEach(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>beforeEach-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeEach(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelSet.html</Path>
<Anchor>beforeEach-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeEvaluate(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>beforeEvaluate-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeEvaluate(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>beforeEvaluate-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeEvaluate(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectEvaluationListener.html</Path>
<Anchor>beforeEvaluate-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeExecute(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionAdapter.html</Path>
<Anchor>beforeExecute-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeExecute(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionListener.html</Path>
<Anchor>beforeExecute-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeMerged(Action&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>beforeMerged-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeMerged(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>beforeMerged-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeProject(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>beforeProject-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeProject(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>beforeProject-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeResolve(ResolvableDependencies)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolutionListener.html</Path>
<Anchor>beforeResolve-org.gradle.api.artifacts.ResolvableDependencies-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeResolve(Action&lt;? super ResolvableDependencies&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>beforeResolve-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeResolve(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>beforeResolve-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeSuite(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>beforeSuite-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeSuite(TestDescriptor)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestListener.html</Path>
<Anchor>beforeSuite-org.gradle.api.tasks.testing.TestDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeTask(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>beforeTask-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeTask(Action&lt;Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>beforeTask-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeTest(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>beforeTest-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>beforeTest(TestDescriptor)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestListener.html</Path>
<Anchor>beforeTest-org.gradle.api.tasks.testing.TestDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>Binary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Binary.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinaryBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/plugins/BinaryBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinaryBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/plugins/BinaryBasePlugin.html</Path>
<Anchor>BinaryBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>BinaryCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinaryContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinaryProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinarySignatureType</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/BinarySignatureType.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinarySignatureType()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/BinarySignatureType.html</Path>
<Anchor>BinarySignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>BinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinaryTasks</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryTasks.html</Path>
</Token>
<Token><TokenIdentifier><Name>BinaryTasksCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryTasksCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>bootClasspath(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>bootClasspath-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>bootClasspath(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>bootClasspath-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>bootstrapClasspath(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>bootstrapClasspath-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>bootstrapClasspath(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>bootstrapClasspath-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>bootstrapClasspath(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>bootstrapClasspath-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>bottom(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>bottom-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>breakIterator(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>breakIterator-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>breakIterator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>breakIterator--</Anchor></Token>
<Token><TokenIdentifier><Name>breakIterator(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>breakIterator-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>breakIterator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>breakIterator--</Anchor></Token>
<Token><TokenIdentifier><Name>BrowserEvaluate</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
</Token>
<Token><TokenIdentifier><Name>BrowserEvaluate()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>BrowserEvaluate--</Anchor></Token>
<Token><TokenIdentifier><Name>BrowserEvaluator</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluator.html</Path>
</Token>
<Token><TokenIdentifier><Name>build()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecBuilder.html</Path>
<Anchor>build--</Anchor></Token>
<Token><TokenIdentifier><Name>build()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
<Anchor>build--</Anchor></Token>
<Token><TokenIdentifier><Name>build()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>build--</Anchor></Token>
<Token><TokenIdentifier><Name>build()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.Builder.html</Path>
<Anchor>build--</Anchor></Token>
<Token><TokenIdentifier><Name>BUILD_DASHBOARD_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/plugins/BuildDashboardPlugin.html</Path>
<Anchor>BUILD_DASHBOARD_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>BUILD_DEPENDENTS_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>BUILD_DEPENDENTS_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>BUILD_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
<Anchor>BUILD_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>BUILD_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>BUILD_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>BUILD_NEEDED_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>BUILD_NEEDED_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>BUILD_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>BUILD_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>BUILD_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>BUILD_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>Buildable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Buildable.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildableComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/BuildableComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildableComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildableComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildableElement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/BuildableElement.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildAction</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildAction.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildActionExecuter</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildActionExecuter.Builder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.Builder.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildActionFailureException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionFailureException.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildActionFailureException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionFailureException.html</Path>
<Anchor>BuildActionFailureException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildAdapter</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildAdapter.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildAdapter()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildAdapter.html</Path>
<Anchor>BuildAdapter--</Anchor></Token>
<Token><TokenIdentifier><Name>buildAll(String, T, Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ParameterizedToolingModelBuilder.html</Path>
<Anchor>buildAll-java.lang.String-T-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>buildAll(String, Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ToolingModelBuilder.html</Path>
<Anchor>buildAll-java.lang.String-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>buildAndFail()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>buildAndFail--</Anchor></Token>
<Token><TokenIdentifier><Name>BuildAnnouncementsPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/BuildAnnouncementsPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildAnnouncementsPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/BuildAnnouncementsPlugin.html</Path>
<Anchor>BuildAnnouncementsPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>buildCache(Action&lt;? super BuildCacheConfiguration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>buildCache-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCache</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCache.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheEntryReader</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheEntryReader.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheEntryWriter</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheEntryWriter.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheException.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheException.html</Path>
<Anchor>BuildCacheException--</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCacheException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheException.html</Path>
<Anchor>BuildCacheException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCacheException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheException.html</Path>
<Anchor>BuildCacheException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCacheKey</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheKey.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheService</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheService.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheServiceFactory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheServiceFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCacheServiceFactory.Describer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheServiceFactory.Describer.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCancelledException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildCancelledException.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCancelledException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildCancelledException.html</Path>
<Anchor>BuildCancelledException--</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCancelledException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildCancelledException.html</Path>
<Anchor>BuildCancelledException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCancelledException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildCancelledException.html</Path>
<Anchor>BuildCancelledException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCancelledException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildCancelledException.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCancelledException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildCancelledException.html</Path>
<Anchor>BuildCancelledException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCancelledException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildCancelledException.html</Path>
<Anchor>BuildCancelledException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCommand</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildCommand(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>BuildCommand-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildCommand(String, Map&lt;String, String&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>BuildCommand-java.lang.String-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>buildCommand(Map&lt;String, String&gt;, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>buildCommand-java.util.Map-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>buildCommand(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>buildCommand-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildController</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildDashboardPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/plugins/BuildDashboardPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildDashboardPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/plugins/BuildDashboardPlugin.html</Path>
<Anchor>BuildDashboardPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>BuildDashboardReports</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/BuildDashboardReports.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildEnvironment</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/BuildEnvironment.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildEnvironmentReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/BuildEnvironmentReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildEnvironmentReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/BuildEnvironmentReportTask.html</Path>
<Anchor>BuildEnvironmentReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>builder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
<Anchor>builder--</Anchor></Token>
<Token><TokenIdentifier><Name>BuildException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildException.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildException.html</Path>
<Anchor>BuildException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>buildFinished(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>buildFinished-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>buildFinished(Action&lt;? super BuildResult&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>buildFinished-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>buildFinished(BuildResult)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildAdapter.html</Path>
<Anchor>buildFinished-org.gradle.BuildResult-</Anchor></Token>
<Token><TokenIdentifier><Name>buildFinished(BuildResult)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildListener.html</Path>
<Anchor>buildFinished-org.gradle.BuildResult-</Anchor></Token>
<Token><TokenIdentifier><Name>buildFinished(BuildAction&lt;T&gt;, IntermediateResultHandler&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.Builder.html</Path>
<Anchor>buildFinished-org.gradle.tooling.BuildAction-org.gradle.tooling.IntermediateResultHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/BuildIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/BuildIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildInitPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/plugins/BuildInitPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildInitPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/plugins/BuildInitPlugin.html</Path>
<Anchor>BuildInitPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>BuildInvocations</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BuildInvocations.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildLauncher</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildModel</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/BuildModel.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildResult</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildResult(Gradle, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildResult.html</Path>
<Anchor>BuildResult-org.gradle.api.invocation.Gradle-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildResult(String, Gradle, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildResult.html</Path>
<Anchor>BuildResult-java.lang.String-org.gradle.api.invocation.Gradle-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>buildscript(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>buildscript-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>buildscript(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>buildscript-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>buildStarted(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>buildStarted-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>buildStarted(Action&lt;? super Gradle&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>buildStarted-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>buildStarted(Gradle)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildAdapter.html</Path>
<Anchor>buildStarted-org.gradle.api.invocation.Gradle-</Anchor></Token>
<Token><TokenIdentifier><Name>buildStarted(Gradle)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildListener.html</Path>
<Anchor>buildStarted-org.gradle.api.invocation.Gradle-</Anchor></Token>
<Token><TokenIdentifier><Name>BuildTask</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildType</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/BuildType.html</Path>
</Token>
<Token><TokenIdentifier><Name>BuildTypeContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/BuildTypeContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>builtBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurablePublishArtifact.html</Path>
<Anchor>builtBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>builtBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildableComponentSpec.html</Path>
<Anchor>builtBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>builtBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
<Anchor>builtBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>builtBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileTree.html</Path>
<Anchor>builtBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>builtBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublicationArtifact.html</Path>
<Anchor>builtBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>bzip2(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceHandler.html</Path>
<Anchor>bzip2-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>C_PLUS_PLUS_API</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>C_PLUS_PLUS_API</Anchor></Token>
<Token><TokenIdentifier><Name>CacheableTask</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CacheableTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>cacheChangingModulesFor(int, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>cacheChangingModulesFor-int-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>cacheChangingModulesFor(int, TimeUnit)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>cacheChangingModulesFor-int-java.util.concurrent.TimeUnit-</Anchor></Token>
<Token><TokenIdentifier><Name>cacheDynamicVersionsFor(int, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>cacheDynamicVersionsFor-int-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>cacheDynamicVersionsFor(int, TimeUnit)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>cacheDynamicVersionsFor-int-java.util.concurrent.TimeUnit-</Anchor></Token>
<Token><TokenIdentifier><Name>cacheIf(Spec&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>cacheIf-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>cacheIf(String, Spec&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>cacheIf-java.lang.String-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>canBuild(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ToolingModelBuilder.html</Path>
<Anchor>canBuild-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>cancel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/CancellationTokenSource.html</Path>
<Anchor>cancel--</Anchor></Token>
<Token><TokenIdentifier><Name>CancellationToken</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/CancellationToken.html</Path>
</Token>
<Token><TokenIdentifier><Name>CancellationTokenSource</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/CancellationTokenSource.html</Path>
</Token>
<Token><TokenIdentifier><Name>CapabilitiesMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/CapabilitiesMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>capability(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
<Anchor>capability-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>Capability</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/Capability.html</Path>
</Token>
<Token><TokenIdentifier><Name>captureStandardError(LogLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingManager.html</Path>
<Anchor>captureStandardError-org.gradle.api.logging.LogLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>captureStandardOutput(LogLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingManager.html</Path>
<Anchor>captureStandardOutput-org.gradle.api.logging.LogLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>CCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/tasks/CCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>CCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/tasks/CCompile.html</Path>
<Anchor>CCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>charAt(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>charAt-int-</Anchor></Token>
<Token><TokenIdentifier><Name>charSet(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>charSet-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>check()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoCoverageVerification.html</Path>
<Anchor>check--</Anchor></Token>
<Token><TokenIdentifier><Name>CHECK_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>CHECK_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>CHECK_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>CHECK_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>CheckableComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/CheckableComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>checkedBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/CheckableComponentSpec.html</Path>
<Anchor>checkedBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>Checkstyle</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
</Token>
<Token><TokenIdentifier><Name>Checkstyle()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>Checkstyle--</Anchor></Token>
<Token><TokenIdentifier><Name>CheckstyleExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>CheckstyleExtension(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>CheckstyleExtension-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>CheckstylePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CheckstylePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>CheckstylePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CheckstyleReports</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleReports.html</Path>
</Token>
<Token><TokenIdentifier><Name>ciManagement(Action&lt;? super MavenPomCiManagement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>ciManagement-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>CircularReferenceException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/CircularReferenceException.html</Path>
</Token>
<Token><TokenIdentifier><Name>CircularReferenceException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/CircularReferenceException.html</Path>
<Anchor>CircularReferenceException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>CircularReferenceException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/CircularReferenceException.html</Path>
<Anchor>CircularReferenceException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>Clang</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/Clang.html</Path>
</Token>
<Token><TokenIdentifier><Name>ClangCompilerPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/ClangCompilerPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ClangCompilerPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/ClangCompilerPlugin.html</Path>
<Anchor>ClangCompilerPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CLangPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/plugins/CLangPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CLangPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/plugins/CLangPlugin.html</Path>
<Anchor>CLangPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ClassDirectoryBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/ClassDirectoryBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>CLASSES_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>CLASSES_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>CLASSIFIER</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>CLASSIFIER</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>classpath-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>Classpath</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Classpath.html</Path>
</Token>
<Token><TokenIdentifier><Name>classpath(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>classpath-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>classpath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>classpath-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>classpath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>classpath-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>Classpath</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/Classpath.html</Path>
</Token>
<Token><TokenIdentifier><Name>Classpath</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
</Token>
<Token><TokenIdentifier><Name>Classpath(XmlTransformer, FileReferenceFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>Classpath-org.gradle.internal.xml.XmlTransformer-org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>Classpath(FileReferenceFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>Classpath-org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>Classpath()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>Classpath--</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>classpath-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(Action&lt;? super EclipseClasspath&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>classpath-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>classpath-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>classpath(Iterable&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>classpath-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>CLASSPATH_CONFIGURATION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>CLASSPATH_CONFIGURATION</Anchor></Token>
<Token><TokenIdentifier><Name>CLASSPATH_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>CLASSPATH_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ClasspathAttribute</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/ClasspathAttribute.html</Path>
</Token>
<Token><TokenIdentifier><Name>ClasspathEntry</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ClasspathEntry.html</Path>
</Token>
<Token><TokenIdentifier><Name>ClasspathNormalizer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ClasspathNormalizer.html</Path>
</Token>
<Token><TokenIdentifier><Name>clean()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>clean--</Anchor></Token>
<Token><TokenIdentifier><Name>CLEAN_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
<Anchor>CLEAN_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>CLEAN_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>CLEAN_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>clear()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>clear--</Anchor></Token>
<Token><TokenIdentifier><Name>ClientModule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ClientModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>close()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheService.html</Path>
<Anchor>close--</Anchor></Token>
<Token><TokenIdentifier><Name>close()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/MapBasedBuildCacheService.html</Path>
<Anchor>close--</Anchor></Token>
<Token><TokenIdentifier><Name>close()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>close--</Anchor></Token>
<Token><TokenIdentifier><Name>closestMatch(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/MultipleCandidatesDetails.html</Path>
<Anchor>closestMatch-T-</Anchor></Token>
<Token><TokenIdentifier><Name>CodeNarc</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
</Token>
<Token><TokenIdentifier><Name>CodeNarc()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>CodeNarc--</Anchor></Token>
<Token><TokenIdentifier><Name>CodeNarcExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>CodeNarcExtension(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>CodeNarcExtension-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>CodeNarcPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CodeNarcPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>CodeNarcPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CodeNarcReports</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcReports.html</Path>
</Token>
<Token><TokenIdentifier><Name>CodeQualityExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>CodeQualityExtension()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>CodeQualityExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>CoffeeScriptBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CoffeeScriptBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptBasePlugin.html</Path>
<Anchor>CoffeeScriptBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CoffeeScriptCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>CoffeeScriptCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>CoffeeScriptCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>CoffeeScriptCompileOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>CoffeeScriptCompileOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileOptions.html</Path>
<Anchor>CoffeeScriptCompileOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>CoffeeScriptCompiler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompiler.html</Path>
</Token>
<Token><TokenIdentifier><Name>CoffeeScriptCompileSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>CoffeeScriptExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>CoffeeScriptExtension()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>CoffeeScriptExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>CoffeeScriptSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/coffeescript/CoffeeScriptSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>combinedExtension(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureType.html</Path>
<Anchor>combinedExtension-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>combinedExtension(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureType.html</Path>
<Anchor>combinedExtension-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>commandLine(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>commandLine-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>commandLine(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>commandLine-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>commandLine(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>commandLine-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>commandLine(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>commandLine-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>CommandLineArgumentProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/CommandLineArgumentProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>CommandLineToolConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/CommandLineToolConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>Comparator(Namer&lt;? super T&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Namer.Comparator.html</Path>
<Anchor>Comparator-org.gradle.api.Namer-</Anchor></Token>
<Token><TokenIdentifier><Name>compare(T, T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Namer.Comparator.html</Path>
<Anchor>compare-T-T-</Anchor></Token>
<Token><TokenIdentifier><Name>CompareGradleBuilds</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompareGradleBuilds()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>CompareGradleBuilds--</Anchor></Token>
<Token><TokenIdentifier><Name>CompareGradleBuildsPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuildsPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompareGradleBuildsPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuildsPlugin.html</Path>
<Anchor>CompareGradleBuildsPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>compareTo(RelativePath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>compareTo-org.gradle.api.file.RelativePath-</Anchor></Token>
<Token><TokenIdentifier><Name>compareTo(PgpKeyId)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>compareTo-org.gradle.plugins.signing.signatory.pgp.PgpKeyId-</Anchor></Token>
<Token><TokenIdentifier><Name>CompatibilityAdapterForTaskInputs</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskInputs.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompatibilityAdapterForTaskOutputs</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskOutputs.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompatibilityCheckDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityCheckDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompatibilityRuleChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityRuleChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityCheckDetails.html</Path>
<Anchor>compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>COMPILE</Anchor></Token>
<Token><TokenIdentifier><Name>compile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>compile--</Anchor></Token>
<Token><TokenIdentifier><Name>compile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>compile--</Anchor></Token>
<Token><TokenIdentifier><Name>compile(IncrementalTaskInputs)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>compile-org.gradle.api.tasks.incremental.IncrementalTaskInputs-</Anchor></Token>
<Token><TokenIdentifier><Name>compile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>compile--</Anchor></Token>
<Token><TokenIdentifier><Name>compile(IncrementalTaskInputs)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>compile-org.gradle.api.tasks.incremental.IncrementalTaskInputs-</Anchor></Token>
<Token><TokenIdentifier><Name>compile(IncrementalTaskInputs)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>compile-org.gradle.api.tasks.incremental.IncrementalTaskInputs-</Anchor></Token>
<Token><TokenIdentifier><Name>compile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>compile--</Anchor></Token>
<Token><TokenIdentifier><Name>compile(CoffeeScriptCompileSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompiler.html</Path>
<Anchor>compile-org.gradle.plugins.javascript.coffeescript.CoffeeScriptCompileSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE_CLASSPATH_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>COMPILE_CLASSPATH_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE_CONFIGURATION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>COMPILE_CONFIGURATION</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>COMPILE_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE_JAVA_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>COMPILE_JAVA_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE_ONLY_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>COMPILE_ONLY_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE_PRIORITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>COMPILE_PRIORITY</Anchor></Token>
<Token><TokenIdentifier><Name>COMPILE_TEST_JAVA_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>COMPILE_TEST_JAVA_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>CompileClasspath</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompileClasspath.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompileClasspathNormalizer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompileClasspathNormalizer.html</Path>
</Token>
<Token><TokenIdentifier><Name>compiledBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>compiledBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>CompileOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompileOptions(ObjectFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>CompileOptions-org.gradle.api.model.ObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>CompilerArgumentProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompilerArgumentProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompilerVersion</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/compile/CompilerVersion.html</Path>
</Token>
<Token><TokenIdentifier><Name>Component</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/Component.html</Path>
</Token>
<Token><TokenIdentifier><Name>component(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>component-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>component(Action&lt;? super EclipseWtpComponent&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>component-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>COMPONENT_DEPENDENCY_ATTRIBUTE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>COMPONENT_DEPENDENCY_ATTRIBUTE</Anchor></Token>
<Token><TokenIdentifier><Name>COMPONENT_NON_DEPENDENCY_ATTRIBUTE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>COMPONENT_NON_DEPENDENCY_ATTRIBUTE</Anchor></Token>
<Token><TokenIdentifier><Name>ComponentArtifactIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentArtifactIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentArtifactsResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentArtifactsResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/plugins/ComponentBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/plugins/ComponentBasePlugin.html</Path>
<Anchor>ComponentBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ComponentBinaries</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ComponentBinaries.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentDependencies</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentDependencies.html</Path>
</Token>
<Token><TokenIdentifier><Name>componentFilter(Spec&lt;? super ComponentIdentifier&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.ViewConfiguration.html</Path>
<Anchor>componentFilter-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>ComponentIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentMetadataBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentMetadataDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentMetadataHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentMetadataHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentMetadataSupplier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataSupplier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentMetadataSupplierDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataSupplierDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentModelBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/ComponentModelBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentModelBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/ComponentModelBasePlugin.html</Path>
<Anchor>ComponentModelBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ComponentModuleMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentModuleMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentModuleMetadataDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentModuleMetadataDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentModuleMetadataHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentModuleMetadataHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentReport</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/ComponentReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentReport()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/ComponentReport.html</Path>
<Anchor>ComponentReport--</Anchor></Token>
<Token><TokenIdentifier><Name>ComponentResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>components(Action&lt;? super ComponentMetadataHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>components-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>COMPONENTS_TASK</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>COMPONENTS_TASK</Anchor></Token>
<Token><TokenIdentifier><Name>ComponentSelection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelection.html</Path>
</Token>
<Token><TokenIdentifier><Name>componentSelection(Action&lt;? super ComponentSelectionRules&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>componentSelection-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ComponentSelectionCause</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionCause.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentSelectionDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentSelectionReason</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentSelectionRules</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelectionRules.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentSelector</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentSelector.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentSpecContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ComponentSpecContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentType</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ComponentType.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithBinaries</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentWithBinaries.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithCoordinates</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/ComponentWithCoordinates.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithDependencies</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentWithDependencies.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithExecutable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithInstallation</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithInstallation.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithLinkFile</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithLinkFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithLinkUsage</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithLinkUsage.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithNativeRuntime</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithNativeRuntime.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithObjectFiles</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithObjectFiles.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithOutputs</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentWithOutputs.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithRuntimeFile</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithRuntimeFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithRuntimeUsage</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithRuntimeUsage.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithSharedLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithSharedLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithStaticLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithStaticLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>ComponentWithVariants</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/ComponentWithVariants.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompositeSpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>CompositeSpec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
<Anchor>CompositeSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>CompositeSpec(Spec&lt;? super T&gt;...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
<Anchor>CompositeSpec-org.gradle.api.specs.Spec...-</Anchor></Token>
<Token><TokenIdentifier><Name>CompositeSpec(Iterable&lt;? extends Spec&lt;? super T&gt;&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
<Anchor>CompositeSpec-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>Compression</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Compression.html</Path>
</Token>
<Token><TokenIdentifier><Name>Conf2ScopeMapping</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMapping.html</Path>
</Token>
<Token><TokenIdentifier><Name>Conf2ScopeMapping(Integer, Configuration, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMapping.html</Path>
<Anchor>Conf2ScopeMapping-java.lang.Integer-org.gradle.api.artifacts.Configuration-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Conf2ScopeMappingContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>config(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheServiceFactory.Describer.html</Path>
<Anchor>config-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ConfigFile</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/ConfigFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConfigurableFileCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>configurableFiles(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>configurableFiles-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>ConfigurableFileTree</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileTree.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConfigurableIncludedBuild</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ConfigurableIncludedBuild.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConfigurableLauncher</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConfigurablePublishArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurablePublishArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConfigurableReport</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ConfigurableReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>Configuration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
</Token>
<Token><TokenIdentifier><Name>Configuration.Namer</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.Namer.html</Path>
</Token>
<Token><TokenIdentifier><Name>Configuration.State</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.State.html</Path>
</Token>
<Token><TokenIdentifier><Name>CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ConfigurationContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConfigurationCycleException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ConfigurationCycleException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConfigurationCycleException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ConfigurationCycleException.html</Path>
<Anchor>ConfigurationCycleException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ConfigurationPublications</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
</Token>
<Token><TokenIdentifier><Name>configurations(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>configurations-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configurations(Action&lt;? super IvyConfigurationContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>configurations-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ConfigurationVariant</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationVariant.html</Path>
</Token>
<Token><TokenIdentifier><Name>configure(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectContainer.html</Path>
<Anchor>configure-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>configure-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(TypeOf&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>configure-org.gradle.api.reflect.TypeOf-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(String, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>configure-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>configure-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Iterable&lt;?&gt;, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>configure-java.lang.Iterable-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Iterable&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>configure-java.lang.Iterable-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>configure-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskProvider.html</Path>
<Anchor>configure-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(VisualStudioFiltersFile)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>configure-org.gradle.ide.visualstudio.tasks.internal.VisualStudioFiltersFile-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(VisualStudioProjectFile)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>configure-org.gradle.ide.visualstudio.tasks.internal.VisualStudioProjectFile-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(XcodeSchemeFile)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
<Anchor>configure-org.gradle.ide.xcode.tasks.internal.XcodeSchemeFile-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(XcodeWorkspaceSettingsFile)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateWorkspaceSettingsFileTask.html</Path>
<Anchor>configure-org.gradle.ide.xcode.tasks.internal.XcodeWorkspaceSettingsFile-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(XcodeProjectFile)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeProjectFileTask.html</Path>
<Anchor>configure-org.gradle.ide.xcode.tasks.internal.XcodeProjectFile-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(XcodeWorkspaceFile)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeWorkspaceFileTask.html</Path>
<Anchor>configure-org.gradle.ide.xcode.tasks.internal.XcodeWorkspaceFile-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryProvider.html</Path>
<Anchor>configure-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesGeneratorTask.html</Path>
<Anchor>configure-T-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertyListGeneratorTask.html</Path>
<Anchor>configure-T-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlGeneratorTask.html</Path>
<Anchor>configure-T-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Classpath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseClasspath.html</Path>
<Anchor>configure-org.gradle.plugins.ide.eclipse.model.Classpath-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Jdt)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseJdt.html</Path>
<Anchor>configure-org.gradle.plugins.ide.eclipse.model.Jdt-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseProject.html</Path>
<Anchor>configure-org.gradle.plugins.ide.eclipse.model.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(WtpComponent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpComponent.html</Path>
<Anchor>configure-org.gradle.plugins.ide.eclipse.model.WtpComponent-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(WtpFacet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpFacet.html</Path>
<Anchor>configure-org.gradle.plugins.ide.eclipse.model.WtpFacet-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(List)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>configure-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(EclipseProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>configure-org.gradle.plugins.ide.eclipse.model.EclipseProject-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(String, String, List&lt;WbModuleEntry&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>configure-java.lang.String-java.lang.String-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(List&lt;Facet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>configure-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Module)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
<Anchor>configure-org.gradle.plugins.ide.idea.model.Module-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
<Anchor>configure-org.gradle.plugins.ide.idea.model.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Workspace)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaWorkspace.html</Path>
<Anchor>configure-org.gradle.plugins.ide.idea.model.Workspace-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Path, Set&lt;Path&gt;, Set&lt;Path&gt;, Set&lt;Path&gt;, Set&lt;Path&gt;, Set&lt;Path&gt;, Set&lt;Path&gt;, Boolean, Path, Path, Set&lt;Dependency&gt;, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>configure-org.gradle.plugins.ide.idea.model.Path-java.util.Set-java.util.Set-java.util.Set-java.util.Set-java.util.Set-java.util.Set-java.lang.Boolean-org.gradle.plugins.ide.idea.model.Path-org.gradle.plugins.ide.idea.model.Path-java.util.Set-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(List&lt;IdeaModule&gt;, String, IdeaLanguageLevel, JavaVersion, Collection&lt;String&gt;, Collection&lt;ProjectLibrary&gt;, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>configure-java.util.List-java.lang.String-org.gradle.plugins.ide.idea.model.IdeaLanguageLevel-org.gradle.api.JavaVersion-java.util.Collection-java.util.Collection-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(SigningExtension, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryProvider.html</Path>
<Anchor>configure-org.gradle.plugins.signing.SigningExtension-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(SigningExtension, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/SignatoryProvider.html</Path>
<Anchor>configure-org.gradle.plugins.signing.SigningExtension-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configure(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>configure-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>configureConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>configureConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>configureConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>configureConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>configureConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>configureConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>configureConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>configureConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>configureConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>configureConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>configureConfigurations(ConfigurationContainer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
<Anchor>configureConfigurations-org.gradle.api.artifacts.ConfigurationContainer-</Anchor></Token>
<Token><TokenIdentifier><Name>configureDefaultOutputPathForJacocoMerge()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
<Anchor>configureDefaultOutputPathForJacocoMerge--</Anchor></Token>
<Token><TokenIdentifier><Name>configureDefaultRhinoDependency(Configuration, DependencyHandler, RhinoExtension)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoPlugin.html</Path>
<Anchor>configureDefaultRhinoDependency-org.gradle.api.artifacts.Configuration-org.gradle.api.artifacts.dsl.DependencyHandler-org.gradle.plugins.javascript.rhino.RhinoExtension-</Anchor></Token>
<Token><TokenIdentifier><Name>configureEach(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>configureEach-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configureEach(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>configureEach-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configureEachLater(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>configureEachLater-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configureEachLater(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>configureEachLater-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>configureForSourceSet(SourceSet, AbstractCompile)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>configureForSourceSet-org.gradle.api.tasks.SourceSet-org.gradle.api.tasks.compile.AbstractCompile-</Anchor></Token>
<Token><TokenIdentifier><Name>configureForSourceSet(SourceSet, Checkstyle)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>configureForSourceSet-org.gradle.api.tasks.SourceSet-org.gradle.api.plugins.quality.Checkstyle-</Anchor></Token>
<Token><TokenIdentifier><Name>configureForSourceSet(SourceSet, CodeNarc)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>configureForSourceSet-org.gradle.api.tasks.SourceSet-org.gradle.api.plugins.quality.CodeNarc-</Anchor></Token>
<Token><TokenIdentifier><Name>configureForSourceSet(SourceSet, FindBugs)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>configureForSourceSet-org.gradle.api.tasks.SourceSet-org.gradle.api.plugins.quality.FindBugs-</Anchor></Token>
<Token><TokenIdentifier><Name>configureForSourceSet(SourceSet, JDepend)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>configureForSourceSet-org.gradle.api.tasks.SourceSet-org.gradle.api.plugins.quality.JDepend-</Anchor></Token>
<Token><TokenIdentifier><Name>configureForSourceSet(SourceSet, Pmd)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>configureForSourceSet-org.gradle.api.tasks.SourceSet-org.gradle.api.plugins.quality.Pmd-</Anchor></Token>
<Token><TokenIdentifier><Name>configureIncrementalCompilation(ScalaCompileSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>configureIncrementalCompilation-org.gradle.api.internal.tasks.scala.ScalaCompileSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>configureJavaExec(JavaExecSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>configureJavaExec-org.gradle.process.JavaExecSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>configureRuntimeClasspath(JvmTestSuiteBinarySpecInternal, ServiceRegistry, ModelSchemaStore)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JvmTestSuiteBasePlugin.html</Path>
<Anchor>configureRuntimeClasspath-org.gradle.jvm.test.internal.JvmTestSuiteBinarySpecInternal-org.gradle.internal.service.ServiceRegistry-org.gradle.model.internal.manage.schema.ModelSchemaStore-</Anchor></Token>
<Token><TokenIdentifier><Name>configureSpec(NativeCompileSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>configureSpec-org.gradle.nativeplatform.toolchain.internal.NativeCompileSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>configureSpec(NativeCompileSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeSourceCompileTask.html</Path>
<Anchor>configureSpec-org.gradle.nativeplatform.toolchain.internal.NativeCompileSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>configureTaskDefaults(Checkstyle, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>configureTaskDefaults-org.gradle.api.plugins.quality.Checkstyle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>configureTaskDefaults(CodeNarc, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>configureTaskDefaults-org.gradle.api.plugins.quality.CodeNarc-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>configureTaskDefaults(FindBugs, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>configureTaskDefaults-org.gradle.api.plugins.quality.FindBugs-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>configureTaskDefaults(JDepend, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>configureTaskDefaults-org.gradle.api.plugins.quality.JDepend-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>configureTaskDefaults(Pmd, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>configureTaskDefaults-org.gradle.api.plugins.quality.Pmd-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>connect()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>connect--</Anchor></Token>
<Token><TokenIdentifier><Name>Console</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Console.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConsoleOutput</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/ConsoleOutput.html</Path>
</Token>
<Token><TokenIdentifier><Name>constraints(Action&lt;? super DependencyConstraintHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>constraints-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>container(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>container-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>container(Class&lt;T&gt;, NamedDomainObjectFactory&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>container-java.lang.Class-org.gradle.api.NamedDomainObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>container(Class&lt;T&gt;, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>container-java.lang.Class-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>Container</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Container.html</Path>
</Token>
<Token><TokenIdentifier><Name>Container(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Container.html</Path>
<Anchor>Container-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>Container(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Container.html</Path>
<Anchor>Container-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>containers(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>containers-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>containerWithType(Class&lt;U&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PolymorphicDomainObjectContainer.html</Path>
<Anchor>containerWithType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>contains(Attribute&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeContainer.html</Path>
<Anchor>contains-org.gradle.api.attributes.Attribute-</Anchor></Token>
<Token><TokenIdentifier><Name>contains(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>contains-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>containsKey(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>containsKey-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>containsValue(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>containsValue-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>contentEquals(Dependency)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>contentEquals-org.gradle.api.artifacts.Dependency-</Anchor></Token>
<Token><TokenIdentifier><Name>ContentFilterable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ContentFilterable.html</Path>
</Token>
<Token><TokenIdentifier><Name>contents(Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/Distribution.html</Path>
<Anchor>contents-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>contributeCommandLineOptions(ExecSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>contributeCommandLineOptions-org.gradle.process.ExecSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>contributeCommandLineOptions(ExecSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>contributeCommandLineOptions-org.gradle.process.ExecSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>contributor(Action&lt;? super MavenPomContributor&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributorSpec.html</Path>
<Anchor>contributor-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>contributors(Action&lt;? super MavenPomContributorSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>contributors-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Convention</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/Convention.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConventionProperty</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/dsl/ConventionProperty.html</Path>
</Token>
<Token><TokenIdentifier><Name>ConventionProperty()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/dsl/ConventionProperty.html</Path>
<Anchor>ConventionProperty--</Anchor></Token>
<Token><TokenIdentifier><Name>convertClosureToSpec(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>convertClosureToSpec-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ClientModule.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>copy-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>copy(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>copy-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalDependency.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalModuleDependency.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ProjectDependency.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>copy-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>copy(Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>copy-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>copy(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>copy-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>Copy</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Copy.html</Path>
</Token>
<Token><TokenIdentifier><Name>Copy()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Copy.html</Path>
<Anchor>Copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/tasks/ProcessResources.html</Path>
<Anchor>copy--</Anchor></Token>
<Token><TokenIdentifier><Name>copyFrom(PatternFilterable)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>copyFrom-org.gradle.api.tasks.util.PatternFilterable-</Anchor></Token>
<Token><TokenIdentifier><Name>CopyProcessingSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>copyRecursive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>copyRecursive--</Anchor></Token>
<Token><TokenIdentifier><Name>copyRecursive(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>copyRecursive-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>copyRecursive(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>copyRecursive-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>CopySourceSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySourceSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>CopySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>copySpec(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>copySpec-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>copySpec(Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>copySpec-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>copySpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>copySpec--</Anchor></Token>
<Token><TokenIdentifier><Name>copySpec(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>copySpec-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>copyTo-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>copyTo-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(ProcessForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>copyTo-org.gradle.process.ProcessForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(JavaForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>copyTo-org.gradle.process.JavaForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(ProcessForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>copyTo-org.gradle.process.ProcessForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(ProcessForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>copyTo-org.gradle.process.ProcessForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(JavaForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>copyTo-org.gradle.process.JavaForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(JavaForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>copyTo-org.gradle.process.JavaForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>copyTo(ProcessForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>copyTo-org.gradle.process.ProcessForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>CoreJavadocOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>CoreJavadocOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>CoreJavadocOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>CoreJavadocOptions(JavadocOptionFile)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>CoreJavadocOptions-org.gradle.external.javadoc.internal.JavadocOptionFile-</Anchor></Token>
<Token><TokenIdentifier><Name>CoreJavadocOptions(CoreJavadocOptions, JavadocOptionFile)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>CoreJavadocOptions-org.gradle.external.javadoc.CoreJavadocOptions-org.gradle.external.javadoc.internal.JavadocOptionFile-</Anchor></Token>
<Token><TokenIdentifier><Name>CPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/plugins/CPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/plugins/CPlugin.html</Path>
<Anchor>CPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CppApplication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppApplication.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppApplicationPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppApplicationPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppApplicationPlugin(NativeComponentFactory, ToolChainSelector, ImmutableAttributesFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppApplicationPlugin.html</Path>
<Anchor>CppApplicationPlugin-org.gradle.language.internal.NativeComponentFactory-org.gradle.language.nativeplatform.internal.toolchains.ToolChainSelector-org.gradle.api.internal.attributes.ImmutableAttributesFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>CppBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppBasePlugin(ProjectPublicationRegistry)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppBasePlugin.html</Path>
<Anchor>CppBasePlugin-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>CppBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/tasks/CppCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/tasks/CppCompile.html</Path>
<Anchor>CppCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>CppComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppExecutable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppLangPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppLangPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppLangPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppLangPlugin.html</Path>
<Anchor>CppLangPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CppLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppLibraryPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppLibraryPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppLibraryPlugin(NativeComponentFactory, ToolChainSelector, ImmutableAttributesFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppLibraryPlugin.html</Path>
<Anchor>CppLibraryPlugin-org.gradle.language.internal.NativeComponentFactory-org.gradle.language.nativeplatform.internal.toolchains.ToolChainSelector-org.gradle.api.internal.attributes.ImmutableAttributesFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>CppPlatform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppPlatform.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/CppPlugin.html</Path>
<Anchor>CppPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CppPreCompiledHeaderCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/tasks/CppPreCompiledHeaderCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppPreCompiledHeaderCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/tasks/CppPreCompiledHeaderCompile.html</Path>
<Anchor>CppPreCompiledHeaderCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>CppSharedLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppSharedLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppStaticLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppStaticLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppTestExecutable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/CppTestExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppTestSuite</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/CppTestSuite.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppUnitTestPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/plugins/CppUnitTestPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CppUnitTestPlugin(NativeComponentFactory, ToolChainSelector, ObjectFactory, ImmutableAttributesFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/plugins/CppUnitTestPlugin.html</Path>
<Anchor>CppUnitTestPlugin-org.gradle.language.internal.NativeComponentFactory-org.gradle.language.nativeplatform.internal.toolchains.ToolChainSelector-org.gradle.api.model.ObjectFactory-org.gradle.api.internal.attributes.ImmutableAttributesFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>CPreCompiledHeaderCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/tasks/CPreCompiledHeaderCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>CPreCompiledHeaderCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/tasks/CPreCompiledHeaderCompile.html</Path>
<Anchor>CPreCompiledHeaderCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>create(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyConstraintHandler.html</Path>
<Anchor>create-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Object, Action&lt;? super DependencyConstraint&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyConstraintHandler.html</Path>
<Anchor>create-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>create-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>create-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectContainer.html</Path>
<Anchor>create-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectContainer.html</Path>
<Anchor>create-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectContainer.html</Path>
<Anchor>create-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectFactory.html</Path>
<Anchor>create-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Class&lt;T&gt;, String, Class&lt;? extends T&gt;, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>create-java.lang.Class-java.lang.String-java.lang.Class-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>create(TypeOf&lt;T&gt;, String, Class&lt;? extends T&gt;, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>create-org.gradle.api.reflect.TypeOf-java.lang.String-java.lang.Class-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;T&gt;, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;U&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PolymorphicDomainObjectContainer.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;U&gt;, Action&lt;? super U&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PolymorphicDomainObjectContainer.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>create-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Map&lt;String, ?&gt;, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>create-java.util.Map-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>create-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>create-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;T&gt;, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateWorkspaceSettingsFileTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeProjectFileTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeWorkspaceFileTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create(Class&lt;? extends LanguageSourceSet&gt;, Class&lt;T&gt;, ComponentSpecIdentifier, SourceDirectorySetFactory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/sources/BaseLanguageSourceSet.html</Path>
<Anchor>create-java.lang.Class-java.lang.Class-org.gradle.platform.base.internal.ComponentSpecIdentifier-org.gradle.api.internal.file.SourceDirectorySetFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>create-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>create-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelSet.html</Path>
<Anchor>create-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create(Class&lt;? extends BinarySpec&gt;, Class&lt;T&gt;, ComponentSpecIdentifier, MutableModelNode, MutableModelNode, Instantiator, ITaskFactory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>create-java.lang.Class-java.lang.Class-org.gradle.platform.base.internal.ComponentSpecIdentifier-org.gradle.model.internal.core.MutableModelNode-org.gradle.model.internal.core.MutableModelNode-org.gradle.internal.reflect.Instantiator-org.gradle.api.internal.project.taskfactory.ITaskFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>create(String, Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryTasksCollection.html</Path>
<Anchor>create-java.lang.String-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesGeneratorTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertyListGeneratorTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlGeneratorTask.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseClasspath.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseJdt.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseProject.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpComponent.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpFacet.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaWorkspace.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>create()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>create--</Anchor></Token>
<Token><TokenIdentifier><Name>createAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>createAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>createApiJar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/ApiJar.html</Path>
<Anchor>createApiJar--</Anchor></Token>
<Token><TokenIdentifier><Name>createArtifactResolutionQuery()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>createArtifactResolutionQuery--</Anchor></Token>
<Token><TokenIdentifier><Name>createBuildCacheService(T, BuildCacheServiceFactory.Describer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheServiceFactory.html</Path>
<Anchor>createBuildCacheService-T-org.gradle.caching.BuildCacheServiceFactory.Describer-</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/tasks/CCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/tasks/CPreCompiledHeaderCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/tasks/CppCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/tasks/CppPreCompiledHeaderCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/tasks/ObjectiveCCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/tasks/ObjectiveCPreCompiledHeaderCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/tasks/ObjectiveCppCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCompileSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/tasks/ObjectiveCppPreCompiledHeaderCompile.html</Path>
<Anchor>createCompileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createCopyAction()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>createCopyAction--</Anchor></Token>
<Token><TokenIdentifier><Name>createCopyAction()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Tar.html</Path>
<Anchor>createCopyAction--</Anchor></Token>
<Token><TokenIdentifier><Name>createCopyAction()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>createCopyAction--</Anchor></Token>
<Token><TokenIdentifier><Name>createCopyAction()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Copy.html</Path>
<Anchor>createCopyAction--</Anchor></Token>
<Token><TokenIdentifier><Name>createCopyAction()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>createCopyAction--</Anchor></Token>
<Token><TokenIdentifier><Name>createCopyActionExecuter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>createCopyActionExecuter--</Anchor></Token>
<Token><TokenIdentifier><Name>createCopyActionExecuter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>createCopyActionExecuter--</Anchor></Token>
<Token><TokenIdentifier><Name>createExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>createExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>createExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>createExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>createExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>createExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>createExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>createExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>createExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>createExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>createLater(String, Action&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>createLater-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>createLater(String, Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>createLater-java.lang.String-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>createLater(String, Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>createLater-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>createLater(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>createLater-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>createLinkerSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>createLinkerSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createLinkerSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkExecutable.html</Path>
<Anchor>createLinkerSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createLinkerSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkMachOBundle.html</Path>
<Anchor>createLinkerSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createLinkerSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkSharedLibrary.html</Path>
<Anchor>createLinkerSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createMessage(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.UnknownPropertyException.html</Path>
<Anchor>createMessage-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>createMessage(String, ModelPath, ModelType&lt;?&gt;, ModelRuleDescriptor)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ReadOnlyModelViewException.html</Path>
<Anchor>createMessage-java.lang.String-org.gradle.model.internal.core.ModelPath-org.gradle.model.internal.type.ModelType-org.gradle.model.internal.core.rule.describe.ModelRuleDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>createOrGetGlobalAnalysisMap()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>createOrGetGlobalAnalysisMap--</Anchor></Token>
<Token><TokenIdentifier><Name>createRootSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>createRootSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createRootSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Copy.html</Path>
<Anchor>createRootSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createRootSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>createRootSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(Project, boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-org.gradle.api.Project-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(Project, String, boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-org.gradle.api.Project-java.lang.String-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(Project, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-org.gradle.api.Project-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(Project, String, String, boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-org.gradle.api.Project-java.lang.String-java.lang.String-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(Project, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-org.gradle.api.Project-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(String, String, File, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-java.lang.String-java.lang.String-java.io.File-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatory(String, PGPSecretKey, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>createSignatory-java.lang.String-org.bouncycastle.openpgp.PGPSecretKey-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatoryProvider()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>createSignatoryProvider--</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatureGenerator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatory.html</Path>
<Anchor>createSignatureGenerator--</Anchor></Token>
<Token><TokenIdentifier><Name>createSignatureTypeProvider()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>createSignatureTypeProvider--</Anchor></Token>
<Token><TokenIdentifier><Name>createSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>createSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>CreateStartScripts</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/application/CreateStartScripts.html</Path>
</Token>
<Token><TokenIdentifier><Name>CreateStartScripts()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/application/CreateStartScripts.html</Path>
<Anchor>CreateStartScripts--</Anchor></Token>
<Token><TokenIdentifier><Name>CreateStartScripts</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
</Token>
<Token><TokenIdentifier><Name>CreateStartScripts()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>CreateStartScripts--</Anchor></Token>
<Token><TokenIdentifier><Name>CreateStaticLibrary</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>CreateStaticLibrary()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>CreateStaticLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>createTestExecuter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>createTestExecuter--</Anchor></Token>
<Token><TokenIdentifier><Name>createTestExecuter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>createTestExecuter--</Anchor></Token>
<Token><TokenIdentifier><Name>createTestExecuter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>createTestExecuter--</Anchor></Token>
<Token><TokenIdentifier><Name>createTestExecutionSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>createTestExecutionSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createTestExecutionSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>createTestExecutionSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>createTestExecutionSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>createTestExecutionSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>credentials(Action&lt;? super PasswordCredentials&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationSupported.html</Path>
<Anchor>credentials-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>credentials(Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationSupported.html</Path>
<Anchor>credentials-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Credentials</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/Credentials.html</Path>
</Token>
<Token><TokenIdentifier><Name>credentials(Action&lt;? super HttpBuildCacheCredentials&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>credentials-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>CSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/CSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>CUnitConventionPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/plugins/CUnitConventionPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CUnitConventionPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/plugins/CUnitConventionPlugin.html</Path>
<Anchor>CUnitConventionPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CUnitPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/plugins/CUnitPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>CUnitPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/plugins/CUnitPlugin.html</Path>
<Anchor>CUnitPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>CUnitTestSuiteBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/CUnitTestSuiteBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>CUnitTestSuiteSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/CUnitTestSuiteSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>current()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>current--</Anchor></Token>
<Token><TokenIdentifier><Name>CustomizableHtmlReport</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/CustomizableHtmlReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>debug(String, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>debug-java.lang.String-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>debug(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>debug-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>debug(Action&lt;TestLogging&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>debug-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>DEBUGGABLE_ATTRIBUTE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>DEBUGGABLE_ATTRIBUTE</Anchor></Token>
<Token><TokenIdentifier><Name>DebugOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/DebugOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>DebugOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/DebugOptions.html</Path>
<Anchor>DebugOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_ARTIFACT_POM_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>DEFAULT_ARTIFACT_POM_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_BUILD_DIR_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>DEFAULT_BUILD_DIR_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_BUILD_FILE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>DEFAULT_BUILD_FILE</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_CHECKSTYLE_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>DEFAULT_CHECKSTYLE_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_CODENARC_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>DEFAULT_CODENARC_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_CONFIG_FAILURE_POLICY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>DEFAULT_CONFIG_FAILURE_POLICY</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_CONFIGURATION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>DEFAULT_CONFIGURATION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>DEFAULT_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_DEPENDENCY_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>DEFAULT_DEPENDENCY_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_DEPENDENCY_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>DEFAULT_DEPENDENCY_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_DEPENDENCY_MODULE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>DEFAULT_DEPENDENCY_MODULE</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_DEPENDENCY_MODULE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>DEFAULT_DEPENDENCY_MODULE</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_DEPENDENCY_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>DEFAULT_DEPENDENCY_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_DEPENDENCY_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>DEFAULT_DEPENDENCY_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_DISTRIBUTION_PARENT_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>DEFAULT_DISTRIBUTION_PARENT_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_EXTENSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>DEFAULT_EXTENSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_FINDBUGS_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>DEFAULT_FINDBUGS_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_GRADLE_USER_HOME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>DEFAULT_GRADLE_USER_HOME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_HTTP_PORT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayApplicationPlugin.html</Path>
<Anchor>DEFAULT_HTTP_PORT</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_JACOCO_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
<Anchor>DEFAULT_JACOCO_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_JDEPEND_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>DEFAULT_JDEPEND_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_JS_DEPENDENCY_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>DEFAULT_JS_DEPENDENCY_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_JS_DEPENDENCY_MODULE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>DEFAULT_JS_DEPENDENCY_MODULE</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_JS_DEPENDENCY_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>DEFAULT_JS_DEPENDENCY_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_MAVEN_CENTRAL_REPO_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>DEFAULT_MAVEN_CENTRAL_REPO_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_MAVEN_DEPLOYER_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>DEFAULT_MAVEN_DEPLOYER_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_MAVEN_INSTALLER_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>DEFAULT_MAVEN_INSTALLER_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_MAVEN_LOCAL_REPO_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>DEFAULT_MAVEN_LOCAL_REPO_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_PMD_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>DEFAULT_PMD_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_REPORTS_DIR_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>DEFAULT_REPORTS_DIR_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_RHINO_DEPENDENCY_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>DEFAULT_RHINO_DEPENDENCY_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_RHINO_DEPENDENCY_MODULE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>DEFAULT_RHINO_DEPENDENCY_MODULE</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_RHINO_DEPENDENCY_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>DEFAULT_RHINO_DEPENDENCY_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_SETTINGS_FILE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>DEFAULT_SETTINGS_FILE</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_STATUS</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>DEFAULT_STATUS</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_TASKS</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>DEFAULT_TASKS</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_TYPE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>DEFAULT_TYPE</Anchor></Token>
<Token><TokenIdentifier><Name>DEFAULT_VERSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>DEFAULT_VERSION</Anchor></Token>
<Token><TokenIdentifier><Name>defaultDependencies(Action&lt;? super DependencySet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>defaultDependencies-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>defaultImplementation(Class&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/TypeBuilder.html</Path>
<Anchor>defaultImplementation-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>Defaults</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Defaults.html</Path>
</Token>
<Token><TokenIdentifier><Name>DefaultSignatureTypeProvider</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/DefaultSignatureTypeProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>DefaultSignatureTypeProvider()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/DefaultSignatureTypeProvider.html</Path>
<Anchor>DefaultSignatureTypeProvider--</Anchor></Token>
<Token><TokenIdentifier><Name>DefaultTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DefaultTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>DefaultTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DefaultTask.html</Path>
<Anchor>DefaultTask--</Anchor></Token>
<Token><TokenIdentifier><Name>defaultTasks(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>defaultTasks-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>DeferredConfigurable</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/DeferredConfigurable.html</Path>
</Token>
<Token><TokenIdentifier><Name>define(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractOptions.html</Path>
<Anchor>define-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>define(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PreprocessingTool.html</Path>
<Anchor>define-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>define(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PreprocessingTool.html</Path>
<Anchor>define-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>delete(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DeleteSpec.html</Path>
<Anchor>delete-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>delete(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>delete-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>delete(Action&lt;? super DeleteSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>delete-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>delete(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>delete-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>Delete</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
</Token>
<Token><TokenIdentifier><Name>Delete()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>Delete--</Anchor></Token>
<Token><TokenIdentifier><Name>delete(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>delete-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>deleteAllActions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>deleteAllActions--</Anchor></Token>
<Token><TokenIdentifier><Name>DeleteSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DeleteSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>dependencies(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>dependencies-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>dependencies(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>dependencies-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>dependencies(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmApiSpec.html</Path>
<Anchor>dependencies-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>DEPENDENCIES_TASK</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>DEPENDENCIES_TASK</Anchor></Token>
<Token><TokenIdentifier><Name>DependenciesMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependenciesMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>Dependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>Dependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Dependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>Dependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Dependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>DEPENDENCY_INSIGHT_TASK</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>DEPENDENCY_INSIGHT_TASK</Anchor></Token>
<Token><TokenIdentifier><Name>DEPENDENCY_REPORT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
<Anchor>DEPENDENCY_REPORT</Anchor></Token>
<Token><TokenIdentifier><Name>DependencyArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyConstraint</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraint.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyConstraintHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyConstraintHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyConstraintMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraintMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyConstraintSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraintSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyConstraintsMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraintsMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyInsightReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyInsightReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>DependencyInsightReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>dependencyLocking(Action&lt;? super DependencyLockingHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>dependencyLocking-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>DependencyLockingHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyLockingHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyReportContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/DependencyReportContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyReportTask.html</Path>
<Anchor>DependencyReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>DependencyResolutionListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolutionListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyResolveDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolveDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencyResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/DependencyResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencySet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySet.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencySpecBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencySpecContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencySubstitution</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitution.html</Path>
</Token>
<Token><TokenIdentifier><Name>dependencySubstitution(Action&lt;? super DependencySubstitutions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>dependencySubstitution-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>dependencySubstitution(Action&lt;? super DependencySubstitutions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ConfigurableIncludedBuild.html</Path>
<Anchor>dependencySubstitution-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>DependencySubstitutions</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependencySubstitutions.Substitution</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.Substitution.html</Path>
</Token>
<Token><TokenIdentifier><Name>DEPENDENT_COMPONENTS_TASK</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>DEPENDENT_COMPONENTS_TASK</Anchor></Token>
<Token><TokenIdentifier><Name>DependentComponentsReport</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependentComponentsReport()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>DependentComponentsReport--</Anchor></Token>
<Token><TokenIdentifier><Name>DependentSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/DependentSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>DependentSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/DependentSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>dependsOn(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>dependsOn-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>dependsOnTaskDidWork()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>dependsOnTaskDidWork--</Anchor></Token>
<Token><TokenIdentifier><Name>DEPLOY_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPlugin.html</Path>
<Anchor>DEPLOY_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>DeploymentDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>deploymentDescriptor(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>deploymentDescriptor-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>deploymentDescriptor(Action&lt;? super DeploymentDescriptor&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>deploymentDescriptor-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>deploymentDescriptor(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>deploymentDescriptor-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>deploymentDescriptor(Action&lt;? super DeploymentDescriptor&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>deploymentDescriptor-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>depthCompare(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>depthCompare-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>Describable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Describable.html</Path>
</Token>
<Token><TokenIdentifier><Name>description(Action&lt;? super IvyModuleDescriptorDescription&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>description-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>descriptor(Action&lt;? super IvyModuleDescriptorSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>descriptor-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>destinationDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>destinationDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>destinationDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>destinationDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>Destroys</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Destroys.html</Path>
</Token>
<Token><TokenIdentifier><Name>detachedConfiguration(Dependency...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationContainer.html</Path>
<Anchor>detachedConfiguration-org.gradle.api.artifacts.Dependency...-</Anchor></Token>
<Token><TokenIdentifier><Name>determineName(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.Namer.html</Path>
<Anchor>determineName-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>determineName(Named)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Named.Namer.html</Path>
<Anchor>determineName-org.gradle.api.Named-</Anchor></Token>
<Token><TokenIdentifier><Name>determineName(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Namer.html</Path>
<Anchor>determineName-T-</Anchor></Token>
<Token><TokenIdentifier><Name>determineName(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.Namer.html</Path>
<Anchor>determineName-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>developer(Action&lt;? super MavenPomDeveloper&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloperSpec.html</Path>
<Anchor>developer-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>developers(Action&lt;? super MavenPomDeveloperSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>developers-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>didWork(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WorkResults.html</Path>
<Anchor>didWork-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>DigestAuthentication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/authentication/http/DigestAuthentication.html</Path>
</Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/FlatDirectoryArtifactRepository.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/Directory.html</Path>
<Anchor>dir-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Provider&lt;? extends CharSequence&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/Directory.html</Path>
<Anchor>dir-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
<Anchor>dir-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Provider&lt;? extends CharSequence&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
<Anchor>dir-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskInputs.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskOutputs.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Map&lt;String, Object&gt;, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>dir-java.util.Map-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>dir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>dir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>DirectDependenciesMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DirectDependenciesMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>DirectDependencyMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DirectDependencyMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>Directory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/Directory.html</Path>
</Token>
<Token><TokenIdentifier><Name>DirectoryBuildCache</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
</Token>
<Token><TokenIdentifier><Name>DirectoryBuildCache()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
<Anchor>DirectoryBuildCache--</Anchor></Token>
<Token><TokenIdentifier><Name>DirectoryProperty</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
</Token>
<Token><TokenIdentifier><Name>directoryProperty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>directoryProperty--</Anchor></Token>
<Token><TokenIdentifier><Name>directoryProperty(Provider&lt;? extends Directory&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>directoryProperty-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>DirectoryReport</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/DirectoryReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>DirectoryTree</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryTree.html</Path>
</Token>
<Token><TokenIdentifier><Name>DirectoryVar</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryVar.html</Path>
</Token>
<Token><TokenIdentifier><Name>dirs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/FlatDirectoryArtifactRepository.html</Path>
<Anchor>dirs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>dirs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>dirs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>DisambiguationRuleChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/DisambiguationRuleChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>DIST_LIFECYCLE_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayDistributionPlugin.html</Path>
<Anchor>DIST_LIFECYCLE_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>Distribution</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/Distribution.html</Path>
</Token>
<Token><TokenIdentifier><Name>DISTRIBUTION_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayDistributionPlugin.html</Path>
<Anchor>DISTRIBUTION_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>DistributionContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/DistributionContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>distributionManagement(Action&lt;? super MavenPomDistributionManagement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>distributionManagement-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>DistributionPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/plugins/DistributionPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>DistributionPlugin(Instantiator, FileOperations)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/plugins/DistributionPlugin.html</Path>
<Anchor>DistributionPlugin-org.gradle.internal.reflect.Instantiator-org.gradle.api.internal.file.FileOperations-</Anchor></Token>
<Token><TokenIdentifier><Name>docEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>docEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>docFilesSubDirs(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>docFilesSubDirs-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>docFilesSubDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>docFilesSubDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>doclet(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>doclet-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>doclet(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>doclet-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>docletpath(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>docletpath-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>docletpath(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>docletpath-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>doCompile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayCoffeeScriptCompile.html</Path>
<Anchor>doCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>doCompile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>doCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>doCopyFrom(PatternSet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>doCopyFrom-org.gradle.api.tasks.util.PatternSet-</Anchor></Token>
<Token><TokenIdentifier><Name>docTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>docTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>DOCUMENTATION_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>DOCUMENTATION_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>doFirst(Action&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>doFirst-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>doFirst(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>doFirst-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>doFirst(String, Action&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>doFirst-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>doGenerate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>doGenerate--</Anchor></Token>
<Token><TokenIdentifier><Name>doGenerate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>doGenerate--</Anchor></Token>
<Token><TokenIdentifier><Name>doJsHint()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>doJsHint--</Anchor></Token>
<Token><TokenIdentifier><Name>doLast(Action&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>doLast-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>doLast(String, Action&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>doLast-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>doLast(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>doLast-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>domainObject</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>domainObject</Anchor></Token>
<Token><TokenIdentifier><Name>DomainObjectCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>DomainObjectSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>DomainObjectSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/DomainObjectSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>doNotCacheIf(String, Spec&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>doNotCacheIf-java.lang.String-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>doSignOperation(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>doSignOperation-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>doSignOperation(Action&lt;SignOperation&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>doSignOperation-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>DuplicateFileCopyingException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DuplicateFileCopyingException.html</Path>
</Token>
<Token><TokenIdentifier><Name>DuplicateFileCopyingException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DuplicateFileCopyingException.html</Path>
<Anchor>DuplicateFileCopyingException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>DuplicatesStrategy</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DuplicatesStrategy.html</Path>
</Token>
<Token><TokenIdentifier><Name>Each</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Each.html</Path>
</Token>
<Token><TokenIdentifier><Name>eachDependency(Action&lt;? super DependencyResolveDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>eachDependency-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>eachEntry(Action&lt;? super ManifestMergeDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeSpec.html</Path>
<Anchor>eachEntry-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>eachEntry(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeSpec.html</Path>
<Anchor>eachEntry-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>eachFile(Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>eachFile-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>eachFile(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>eachFile-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>eachFile(Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>eachFile-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>eachFile(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>eachFile-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>eachFile(Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>eachFile-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>eachFile(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>eachFile-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>eachPlatform(Action&lt;? super GccPlatformToolChain&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCompatibleToolChain.html</Path>
<Anchor>eachPlatform-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>eachPlatform(Action&lt;? super VisualCppPlatformToolChain&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCpp.html</Path>
<Anchor>eachPlatform-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>eachPlugin(Action&lt;? super PluginResolveDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginResolutionStrategy.html</Path>
<Anchor>eachPlugin-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Ear</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
</Token>
<Token><TokenIdentifier><Name>Ear()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>Ear--</Anchor></Token>
<Token><TokenIdentifier><Name>EAR_EXTENSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>EAR_EXTENSION</Anchor></Token>
<Token><TokenIdentifier><Name>EAR_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPlugin.html</Path>
<Anchor>EAR_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>EARLIB_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPlugin.html</Path>
<Anchor>EARLIB_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>EarModule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>EarPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>EarPlugin(ObjectFactory, FileResolver)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPlugin.html</Path>
<Anchor>EarPlugin-org.gradle.api.model.ObjectFactory-org.gradle.api.internal.file.FileResolver-</Anchor></Token>
<Token><TokenIdentifier><Name>EarPluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>EarPluginConvention(FileResolver, Instantiator)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>EarPluginConvention-org.gradle.api.internal.file.FileResolver-org.gradle.internal.reflect.Instantiator-</Anchor></Token>
<Token><TokenIdentifier><Name>EarPluginConvention(FileResolver, ObjectFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>EarPluginConvention-org.gradle.api.internal.file.FileResolver-org.gradle.api.model.ObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>EarSecurityRole</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarSecurityRole.html</Path>
</Token>
<Token><TokenIdentifier><Name>EarWebModule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarWebModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>ECLIPSE_CP_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>ECLIPSE_CP_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ECLIPSE_JDT_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>ECLIPSE_JDT_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ECLIPSE_PROJECT_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>ECLIPSE_PROJECT_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ECLIPSE_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>ECLIPSE_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ECLIPSE_WTP_COMPONENT_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
<Anchor>ECLIPSE_WTP_COMPONENT_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ECLIPSE_WTP_FACET_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
<Anchor>ECLIPSE_WTP_FACET_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseBuildCommand</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseBuildCommand.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseClasspath</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseClasspath(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>EclipseClasspath-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseClasspathContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseClasspathContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseClasspathEntry</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseClasspathEntry.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseExternalDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseExternalDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseJavaSourceSettings</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseJavaSourceSettings.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseJdt</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseJdt(PropertiesFileContentMerger)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>EclipseJdt-org.gradle.plugins.ide.api.PropertiesFileContentMerger-</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseLinkedResource</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseLinkedResource.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseModel</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseModel()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>EclipseModel--</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseOutputLocation</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseOutputLocation.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipsePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipsePlugin(Instantiator, UniqueProjectNameProvider, IdeArtifactRegistry)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>EclipsePlugin-org.gradle.internal.reflect.Instantiator-org.gradle.plugins.ide.internal.configurer.UniqueProjectNameProvider-org.gradle.plugins.ide.internal.IdeArtifactRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseProject</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseProject(XmlFileContentMerger)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>EclipseProject-org.gradle.plugins.ide.api.XmlFileContentMerger-</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseProjectDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProjectDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseProjectNature</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProjectNature.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseSourceDirectory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseSourceDirectory.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseWtp</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseWtp()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>EclipseWtp--</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseWtpComponent</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseWtpComponent(Project, XmlFileContentMerger)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>EclipseWtpComponent-org.gradle.api.Project-org.gradle.plugins.ide.api.XmlFileContentMerger-</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseWtpFacet</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseWtpFacet(XmlFileContentMerger)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>EclipseWtpFacet-org.gradle.plugins.ide.api.XmlFileContentMerger-</Anchor></Token>
<Token><TokenIdentifier><Name>EclipseWtpPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>EclipseWtpPlugin(Instantiator)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
<Anchor>EclipseWtpPlugin-org.gradle.internal.reflect.Instantiator-</Anchor></Token>
<Token><TokenIdentifier><Name>Element</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Element.html</Path>
</Token>
<Token><TokenIdentifier><Name>EMPTY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>EMPTY</Anchor></Token>
<Token><TokenIdentifier><Name>empty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>empty--</Anchor></Token>
<Token><TokenIdentifier><Name>EMPTY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>EMPTY</Anchor></Token>
<Token><TokenIdentifier><Name>empty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>empty--</Anchor></Token>
<Token><TokenIdentifier><Name>EMPTY_ROOT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>EMPTY_ROOT</Anchor></Token>
<Token><TokenIdentifier><Name>EmptyFileVisitor</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/EmptyFileVisitor.html</Path>
</Token>
<Token><TokenIdentifier><Name>EmptyFileVisitor()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/EmptyFileVisitor.html</Path>
<Anchor>EmptyFileVisitor--</Anchor></Token>
<Token><TokenIdentifier><Name>enableFeaturePreview(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>enableFeaturePreview-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>encoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>encoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>encoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>encoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>entryAttributes</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>entryAttributes</Anchor></Token>
<Token><TokenIdentifier><Name>environment(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>environment-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>environment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>environment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>environment(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>environment-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>environment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>environment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>environment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>environment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>environment(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>environment-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>environment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>environment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>environment(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>environment-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>EnvJsExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>EnvJsExtension()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>EnvJsExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>EnvJsPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>EnvJsPlugin(WorkerProcessFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsPlugin.html</Path>
<Anchor>EnvJsPlugin-org.gradle.process.internal.worker.WorkerProcessFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMapping.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Namer.Comparator.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.Link.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOfflineLink.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaLanguageLevel.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>equals(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>equals-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>error(Action&lt;TestLogging&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>error-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>evaluate(String, Writer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluator.html</Path>
<Anchor>evaluate-java.lang.String-java.io.Writer-</Anchor></Token>
<Token><TokenIdentifier><Name>evaluationDependsOn(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>evaluationDependsOn-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>evaluationDependsOnChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>evaluationDependsOnChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>events(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>events-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>exclude-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>exclude-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>exclude-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>exclude-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>exclude-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>exclude-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>exclude--</Anchor></Token>
<Token><TokenIdentifier><Name>exclude()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
<Anchor>exclude--</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>exclude-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>exclude-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>exclude-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>exclude-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>exclude-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>exclude-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>exclude-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>exclude-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>exclude-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>exclude-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>exclude-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>exclude-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>exclude-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>exclude-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>exclude-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>exclude-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>exclude-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Iterable)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>exclude-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>exclude-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>exclude(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>exclude-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeCategories(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
<Anchor>excludeCategories-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeDocFilesSubDir(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>excludeDocFilesSubDir-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeDocFilesSubDir(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>excludeDocFilesSubDir-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeEngines(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>excludeEngines-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeFromAntProperties(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractOptions.html</Path>
<Anchor>excludeFromAntProperties-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeFromAntProperties(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>excludeFromAntProperties-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeFromAntProperties(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>excludeFromAntProperties-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeFromAntProperties(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>excludeFromAntProperties-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeFromAntProperties(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>excludeFromAntProperties-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeGroups(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>excludeGroups-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>ExcludeRule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRule.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExcludeRuleContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRuleContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>excludeSpecs(Iterable&lt;Spec&lt;FileTreeElement&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>excludeSpecs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>excludeTags(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>excludeTags-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>exec(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>exec-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>exec(Action&lt;? super ExecSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>exec-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>exec(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>exec-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>exec(Action&lt;? super ExecSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>exec-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>exec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>exec--</Anchor></Token>
<Token><TokenIdentifier><Name>Exec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Exec.html</Path>
</Token>
<Token><TokenIdentifier><Name>Exec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Exec.html</Path>
<Anchor>Exec--</Anchor></Token>
<Token><TokenIdentifier><Name>exec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>exec--</Anchor></Token>
<Token><TokenIdentifier><Name>exec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
<Anchor>exec--</Anchor></Token>
<Token><TokenIdentifier><Name>exec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>exec--</Anchor></Token>
<Token><TokenIdentifier><Name>ExecResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExecSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>executable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>executable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>executable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>executable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>executable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>executable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>executable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>executable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>executables(Action&lt;? super NamedDomainObjectContainer&lt;? super NativeExecutableSpec&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentExtension.html</Path>
<Anchor>executables-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>execute(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Action.html</Path>
<Anchor>execute-T-</Anchor></Token>
<Token><TokenIdentifier><Name>execute(ComponentMetadataSupplierDetails)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataSupplier.html</Path>
<Anchor>execute-org.gradle.api.artifacts.ComponentMetadataSupplierDetails-</Anchor></Token>
<Token><TokenIdentifier><Name>execute()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/ArtifactResolutionQuery.html</Path>
<Anchor>execute--</Anchor></Token>
<Token><TokenIdentifier><Name>execute(IncrementalTaskInputs)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>execute-org.gradle.api.tasks.incremental.IncrementalTaskInputs-</Anchor></Token>
<Token><TokenIdentifier><Name>execute()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>execute--</Anchor></Token>
<Token><TokenIdentifier><Name>execute(BuildController)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildAction.html</Path>
<Anchor>execute-org.gradle.tooling.BuildController-</Anchor></Token>
<Token><TokenIdentifier><Name>executeAntTarget()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>executeAntTarget--</Anchor></Token>
<Token><TokenIdentifier><Name>executeTests()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>executeTests--</Anchor></Token>
<Token><TokenIdentifier><Name>executeTests()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>executeTests--</Anchor></Token>
<Token><TokenIdentifier><Name>executionData(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>executionData-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>executionData(Task...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>executionData-org.gradle.api.Task...-</Anchor></Token>
<Token><TokenIdentifier><Name>executionData(TaskCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>executionData-org.gradle.api.tasks.TaskCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>executionData(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>executionData-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>executionData(Task...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>executionData-org.gradle.api.Task...-</Anchor></Token>
<Token><TokenIdentifier><Name>executionData(TaskCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>executionData-org.gradle.api.tasks.TaskCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>expand(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ContentFilterable.html</Path>
<Anchor>expand-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>expand(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>expand-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>expand(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>expand-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>exported</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>exported</Anchor></Token>
<Token><TokenIdentifier><Name>exports(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmApiSpec.html</Path>
<Anchor>exports-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>extDirs(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>extDirs-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>extDirs(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>extDirs-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>extend(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyConfiguration.html</Path>
<Anchor>extend-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>extendsFrom(Configuration...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>extendsFrom-org.gradle.api.artifacts.Configuration...-</Anchor></Token>
<Token><TokenIdentifier><Name>ExtensiblePolymorphicDomainObjectContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ExtensiblePolymorphicDomainObjectContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>EXTENSION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.html</Path>
<Anchor>EXTENSION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ExtensionAware</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionAware.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExtensionContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExtensionsSchema</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionsSchema.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExtensionsSchema.ExtensionSchema</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionsSchema.ExtensionSchema.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExternalDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExternalDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ExternalDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExternalModuleDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalModuleDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>extraArgs(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>extraArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>extraArgs(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>extraArgs-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>ExtractSymbols</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ExtractSymbols.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExtractSymbols()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ExtractSymbols.html</Path>
<Anchor>ExtractSymbols--</Anchor></Token>
<Token><TokenIdentifier><Name>extractSymbols()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ExtractSymbols.html</Path>
<Anchor>extractSymbols--</Anchor></Token>
<Token><TokenIdentifier><Name>extraInfo(String, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>extraInfo-java.lang.String-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ExtraPropertiesExtension</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>ExtraPropertiesExtension.UnknownPropertyException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.UnknownPropertyException.html</Path>
</Token>
<Token><TokenIdentifier><Name>facet(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>facet-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>facet(Action&lt;? super EclipseWtpFacet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>facet-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>facet(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>facet-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>Facet</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
</Token>
<Token><TokenIdentifier><Name>Facet()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>Facet--</Anchor></Token>
<Token><TokenIdentifier><Name>Facet(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>Facet-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>Facet(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>Facet-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Facet(Facet.FacetType, String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>Facet-org.gradle.plugins.ide.eclipse.model.Facet.FacetType-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Facet.FacetType</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.FacetType.html</Path>
</Token>
<Token><TokenIdentifier><Name>failOnVersionConflict()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>failOnVersionConflict--</Anchor></Token>
<Token><TokenIdentifier><Name>Failure</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/Failure.html</Path>
</Token>
<Token><TokenIdentifier><Name>FailureResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/FailureResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>file(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/Directory.html</Path>
<Anchor>file-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Provider&lt;? extends CharSequence&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/Directory.html</Path>
<Anchor>file-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>file(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
<Anchor>file-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Provider&lt;? extends CharSequence&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
<Anchor>file-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>file-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object, PathValidation)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>file-java.lang.Object-org.gradle.api.PathValidation-</Anchor></Token>
<Token><TokenIdentifier><Name>file(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>file-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object, PathValidation)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>file-java.lang.Object-org.gradle.api.PathValidation-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskInputs.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskOutputs.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskDestroyables.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>file-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>file-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Action&lt;? super XmlFileContentMerger&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>file-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>file-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Action&lt;? super PropertiesFileContentMerger&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>file-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>file-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Action&lt;? super XmlFileContentMerger&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>file-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>file-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Action&lt;? super XmlFileContentMerger&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>file-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>file-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>file(Action&lt;? super XmlFileContentMerger&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>file-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>fileCollection(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>fileCollection-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>fileCollection(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>fileCollection-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>fileCollection(Dependency...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>fileCollection-org.gradle.api.artifacts.Dependency...-</Anchor></Token>
<Token><TokenIdentifier><Name>FileCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>FileCollection.AntType</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.AntType.html</Path>
</Token>
<Token><TokenIdentifier><Name>FileCollectionDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/FileCollectionDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>FileContentMerger</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
</Token>
<Token><TokenIdentifier><Name>FileContentMerger()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>FileContentMerger--</Anchor></Token>
<Token><TokenIdentifier><Name>FileCopyDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>fileFor(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureType.html</Path>
<Anchor>fileFor-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>fileFor(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureType.html</Path>
<Anchor>fileFor-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>FileNormalizer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/FileNormalizer.html</Path>
</Token>
<Token><TokenIdentifier><Name>FilePath</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/FilePath.html</Path>
</Token>
<Token><TokenIdentifier><Name>FilePath(File, String, String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/FilePath.html</Path>
<Anchor>FilePath-java.io.File-java.lang.String-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>fileProperty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>fileProperty--</Anchor></Token>
<Token><TokenIdentifier><Name>fileProperty(Provider&lt;? extends RegularFile&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>fileProperty-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>fileReference(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>fileReference-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>FileReference</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/FileReference.html</Path>
</Token>
<Token><TokenIdentifier><Name>files(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>files-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>files-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Dependency...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>files-org.gradle.api.artifacts.Dependency...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>files-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object, Action&lt;? super ConfigurableFileCollection&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>files-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>files-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskInputs.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskOutputs.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskDestroyables.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>files(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>files-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>filesMatching(String, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filesMatching-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filesMatching(Iterable&lt;String&gt;, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filesMatching-java.lang.Iterable-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filesMatching(String, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filesMatching-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filesMatching(Iterable&lt;String&gt;, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filesMatching-java.lang.Iterable-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filesNotMatching(String, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filesNotMatching-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filesNotMatching(Iterable&lt;String&gt;, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filesNotMatching-java.lang.Iterable-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filesNotMatching(String, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filesNotMatching-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filesNotMatching(Iterable&lt;String&gt;, Action&lt;? super FileCopyDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filesNotMatching-java.lang.Iterable-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>FileSystemLocation</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileSystemLocation.html</Path>
</Token>
<Token><TokenIdentifier><Name>FileTree</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
</Token>
<Token><TokenIdentifier><Name>fileTree(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>fileTree-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>fileTree(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>fileTree-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>fileTree(Object, Action&lt;? super ConfigurableFileTree&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>fileTree-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>fileTree(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>fileTree-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>fileTree(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>fileTree-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>fileTree(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>fileTree-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>fileTree(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>fileTree-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>FileTreeElement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
</Token>
<Token><TokenIdentifier><Name>FileVisitDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileVisitDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>FileVisitor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileVisitor.html</Path>
</Token>
<Token><TokenIdentifier><Name>filter(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>filter-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>filter-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Map&lt;String, ?&gt;, Class&lt;? extends FilterReader&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ContentFilterable.html</Path>
<Anchor>filter-java.util.Map-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Class&lt;? extends FilterReader&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ContentFilterable.html</Path>
<Anchor>filter-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ContentFilterable.html</Path>
<Anchor>filter-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Transformer&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ContentFilterable.html</Path>
<Anchor>filter-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Map&lt;String, ?&gt;, Class&lt;? extends FilterReader&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filter-java.util.Map-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Class&lt;? extends FilterReader&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filter-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filter-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Transformer&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>filter-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>filter-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Spec&lt;? super File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>filter-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Map&lt;String, ?&gt;, Class&lt;? extends FilterReader&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filter-java.util.Map-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Class&lt;? extends FilterReader&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filter-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filter-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Transformer&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>filter-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>filter(Action&lt;TestFilter&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>filter-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>filterForClasspath(Map&lt;File, File&gt;, Iterable&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>filterForClasspath-java.util.Map-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>Finalize</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Finalize.html</Path>
</Token>
<Token><TokenIdentifier><Name>finalizedBy(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>finalizedBy-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>findAll(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>findAll-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>findAll(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectSet.html</Path>
<Anchor>findAll-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>findAll(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectList.html</Path>
<Anchor>findAll-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>findAll(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectSet.html</Path>
<Anchor>findAll-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>FindBugs</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
</Token>
<Token><TokenIdentifier><Name>FindBugs()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>FindBugs--</Anchor></Token>
<Token><TokenIdentifier><Name>FindBugsExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>FindBugsExtension(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>FindBugsExtension-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>FindBugsPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>FindBugsPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>FindBugsPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>FindBugsReports</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsReports.html</Path>
</Token>
<Token><TokenIdentifier><Name>FindBugsXmlReport</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsXmlReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>findByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>findByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>findByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findByPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>findByPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findByPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>findByPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findByType(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>findByType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>findByType(TypeOf&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>findByType-org.gradle.api.reflect.TypeOf-</Anchor></Token>
<Token><TokenIdentifier><Name>findModel(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>findModel-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>findModel(Model, Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>findModel-org.gradle.tooling.model.Model-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>findModel(Class&lt;T&gt;, Class&lt;P&gt;, Action&lt;? super P&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>findModel-java.lang.Class-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>findModel(Model, Class&lt;T&gt;, Class&lt;P&gt;, Action&lt;? super P&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>findModel-org.gradle.tooling.model.Model-java.lang.Class-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>findPlugin(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/Convention.html</Path>
<Anchor>findPlugin-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>findPlugin(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>findPlugin-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findPlugin(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>findPlugin-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>findPlugin(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginManager.html</Path>
<Anchor>findPlugin-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findProject(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>findProject-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findProject(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>findProject-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>findProject(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>findProject-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findProperty(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>findProperty-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>findScalaJar(Iterable&lt;File&gt;, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaRuntime.html</Path>
<Anchor>findScalaJar-java.lang.Iterable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>FinishEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/FinishEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>flatDir(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>flatDir-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>flatDir(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>flatDir-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>flatDir(Action&lt;? super FlatDirectoryArtifactRepository&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>flatDir-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>FlatDirectoryArtifactRepository</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/FlatDirectoryArtifactRepository.html</Path>
</Token>
<Token><TokenIdentifier><Name>Flavor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Flavor.html</Path>
</Token>
<Token><TokenIdentifier><Name>FlavorContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/FlavorContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>footer(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>footer-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>force(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>force-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>forClass(byte[])</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>forClass-byte:A-</Anchor></Token>
<Token><TokenIdentifier><Name>forClassVersion(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>forClassVersion-int-</Anchor></Token>
<Token><TokenIdentifier><Name>forComponents(Iterable&lt;? extends ComponentIdentifier&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/ArtifactResolutionQuery.html</Path>
<Anchor>forComponents-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>forComponents(ComponentIdentifier...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/ArtifactResolutionQuery.html</Path>
<Anchor>forComponents-org.gradle.api.artifacts.component.ComponentIdentifier...-</Anchor></Token>
<Token><TokenIdentifier><Name>fork(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>fork-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>fork(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>fork-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>ForkMode</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/ForkMode.html</Path>
</Token>
<Token><TokenIdentifier><Name>ForkOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>ForkOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>ForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>forkOptions(Action&lt;? super JavaForkOptions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>forkOptions-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>forLaunchables(Launchable...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
<Anchor>forLaunchables-org.gradle.tooling.model.Launchable...-</Anchor></Token>
<Token><TokenIdentifier><Name>forLaunchables(Iterable&lt;? extends Launchable&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
<Anchor>forLaunchables-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>forModule(String, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/ArtifactResolutionQuery.html</Path>
<Anchor>forModule-java.lang.String-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>forProjectDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>forProjectDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>forTasks(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.html</Path>
<Anchor>forTasks-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>forTasks(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.html</Path>
<Anchor>forTasks-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>forTasks(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
<Anchor>forTasks-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>forTasks(Task...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
<Anchor>forTasks-org.gradle.tooling.model.Task...-</Anchor></Token>
<Token><TokenIdentifier><Name>forTasks(Iterable&lt;? extends Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
<Anchor>forTasks-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>forTasks(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ModelBuilder.html</Path>
<Anchor>forTasks-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>forTasks(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ModelBuilder.html</Path>
<Anchor>forTasks-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>forType(Class&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Named.Namer.html</Path>
<Anchor>forType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>forwardOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>forwardOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>forwardStdError(Writer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>forwardStdError-java.io.Writer-</Anchor></Token>
<Token><TokenIdentifier><Name>forwardStdOutput(Writer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>forwardStdOutput-java.io.Writer-</Anchor></Token>
<Token><TokenIdentifier><Name>from(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.AntMessagePriority.html</Path>
<Anchor>from-int-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
<Anchor>from-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileTree.html</Path>
<Anchor>from-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySourceSpec.html</Path>
<Anchor>from-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySourceSpec.html</Path>
<Anchor>from-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object, Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySourceSpec.html</Path>
<Anchor>from-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>from-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>from-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object, Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>from-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>from-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object, Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>from-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeSpec.html</Path>
<Anchor>from-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ObjectConfigurationAction.html</Path>
<Anchor>from-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>from(SoftwareComponent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>from-org.gradle.api.component.SoftwareComponent-</Anchor></Token>
<Token><TokenIdentifier><Name>from(SoftwareComponent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>from-org.gradle.api.component.SoftwareComponent-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>from-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>from-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Object, Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>from-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>from(VersionControlSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VcsMapping.html</Path>
<Anchor>from-org.gradle.vcs.VersionControlSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>from(Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VcsMapping.html</Path>
<Anchor>from-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>fromArchiveEntry(Object, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResourceFactory.html</Path>
<Anchor>fromArchiveEntry-java.lang.Object-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>fromArchiveEntry(Object, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResourceFactory.html</Path>
<Anchor>fromArchiveEntry-java.lang.Object-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>fromFile(Object, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResourceFactory.html</Path>
<Anchor>fromFile-java.lang.Object-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>fromFile(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResourceFactory.html</Path>
<Anchor>fromFile-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>fromString(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResourceFactory.html</Path>
<Anchor>fromString-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>fromUri(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResourceFactory.html</Path>
<Anchor>fromUri-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>FunctionalSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/FunctionalSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>Gcc</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/Gcc.html</Path>
</Token>
<Token><TokenIdentifier><Name>GccCommandLineToolConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCommandLineToolConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>GccCompatibleToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCompatibleToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>GccCompilerPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/GccCompilerPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>GccCompilerPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/GccCompilerPlugin.html</Path>
<Anchor>GccCompilerPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>GccPlatformToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>GeneralComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/GeneralComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>generate-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>generate-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/BuildEnvironmentReportTask.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/ProjectReportTask.html</Path>
<Anchor>generate-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>generate(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/PropertyReportTask.html</Path>
<Anchor>generate-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>generate(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
<Anchor>generate-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/GenerateCUnitLauncher.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/tasks/GenerateSwiftPackageManagerManifest.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>generate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReport.html</Path>
<Anchor>generate--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateBuildDashboard</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateBuildDashboard()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
<Anchor>GenerateBuildDashboard--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateCUnitLauncher</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/GenerateCUnitLauncher.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateCUnitLauncher()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/GenerateCUnitLauncher.html</Path>
<Anchor>GenerateCUnitLauncher--</Anchor></Token>
<Token><TokenIdentifier><Name>generatedBy(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/LanguageSourceSet.html</Path>
<Anchor>generatedBy-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateEclipseClasspath</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseClasspath.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateEclipseClasspath()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseClasspath.html</Path>
<Anchor>GenerateEclipseClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateEclipseJdt</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseJdt.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateEclipseJdt()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseJdt.html</Path>
<Anchor>GenerateEclipseJdt--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateEclipseProject</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateEclipseProject()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseProject.html</Path>
<Anchor>GenerateEclipseProject--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateEclipseWtpComponent</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateEclipseWtpComponent()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpComponent.html</Path>
<Anchor>GenerateEclipseWtpComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateEclipseWtpFacet</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpFacet.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateEclipseWtpFacet()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpFacet.html</Path>
<Anchor>GenerateEclipseWtpFacet--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateFiltersFileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateFiltersFileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>GenerateFiltersFileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateIdeaModule</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateIdeaModule()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
<Anchor>GenerateIdeaModule--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateIdeaProject</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateIdeaProject()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
<Anchor>GenerateIdeaProject--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateIdeaWorkspace</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaWorkspace.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateIdeaWorkspace()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaWorkspace.html</Path>
<Anchor>GenerateIdeaWorkspace--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateIvyDescriptor</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateIvyDescriptor()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>GenerateIvyDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateMavenPom</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateMavenPom()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>GenerateMavenPom--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateModuleMetadata</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateModuleMetadata()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
<Anchor>GenerateModuleMetadata--</Anchor></Token>
<Token><TokenIdentifier><Name>GeneratePluginDescriptors</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
</Token>
<Token><TokenIdentifier><Name>GeneratePluginDescriptors()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
<Anchor>GeneratePluginDescriptors--</Anchor></Token>
<Token><TokenIdentifier><Name>generatePluginDescriptors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
<Anchor>generatePluginDescriptors--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateProjectFileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateProjectFileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>GenerateProjectFileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateSchemeFileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateSchemeFileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
<Anchor>GenerateSchemeFileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>generateScript(JavaAppStartScriptGenerationDetails, Writer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/ScriptGenerator.html</Path>
<Anchor>generateScript-org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails-java.io.Writer-</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateSolutionFileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateSolutionFileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateSolutionFileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateSolutionFileTask.html</Path>
<Anchor>GenerateSolutionFileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateSwiftPackageManagerManifest</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/tasks/GenerateSwiftPackageManagerManifest.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateSwiftPackageManagerManifest()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/tasks/GenerateSwiftPackageManagerManifest.html</Path>
<Anchor>GenerateSwiftPackageManagerManifest--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateWorkspaceSettingsFileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateWorkspaceSettingsFileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateWorkspaceSettingsFileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateWorkspaceSettingsFileTask.html</Path>
<Anchor>GenerateWorkspaceSettingsFileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateXcodeProjectFileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeProjectFileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateXcodeProjectFileTask(GidGenerator)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeProjectFileTask.html</Path>
<Anchor>GenerateXcodeProjectFileTask-org.gradle.ide.xcode.internal.xcodeproj.GidGenerator-</Anchor></Token>
<Token><TokenIdentifier><Name>GenerateXcodeWorkspaceFileTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeWorkspaceFileTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GenerateXcodeWorkspaceFileTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeWorkspaceFileTask.html</Path>
<Anchor>GenerateXcodeWorkspaceFileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>generator</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>generator</Anchor></Token>
<Token><TokenIdentifier><Name>GeneratorTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>GeneratorTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>GeneratorTask--</Anchor></Token>
<Token><TokenIdentifier><Name>get(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyExtraInfo.html</Path>
<Anchor>get-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>get(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyExtraInfo.html</Path>
<Anchor>get-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>get(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.html</Path>
<Anchor>get-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>get()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Provider.html</Path>
<Anchor>get--</Anchor></Token>
<Token><TokenIdentifier><Name>get(LogLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>get-org.gradle.api.logging.LogLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>get(Class&lt;S&gt;, Spec&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>get-java.lang.Class-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>get(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>get-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>get()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>get--</Anchor></Token>
<Token><TokenIdentifier><Name>get(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>get-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>get(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>get-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>get()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ModelBuilder.html</Path>
<Anchor>get--</Anchor></Token>
<Token><TokenIdentifier><Name>get(ResultHandler&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ModelBuilder.html</Path>
<Anchor>get-org.gradle.tooling.ResultHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>getAbsolutePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>getAbsolutePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getAccessKey()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/AwsCredentials.html</Path>
<Anchor>getAccessKey--</Anchor></Token>
<Token><TokenIdentifier><Name>getAccessRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>getAccessRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getAccessRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseClasspathEntry.html</Path>
<Anchor>getAccessRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getAction()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildResult.html</Path>
<Anchor>getAction--</Anchor></Token>
<Token><TokenIdentifier><Name>getActions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getActions--</Anchor></Token>
<Token><TokenIdentifier><Name>getActivePomFilters()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>getActivePomFilters--</Anchor></Token>
<Token><TokenIdentifier><Name>getActorFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getActorFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getActualTypeArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>getActualTypeArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getAdditionalClassDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getAdditionalClassDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAdditionalImports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
<Anchor>getAdditionalImports--</Anchor></Token>
<Token><TokenIdentifier><Name>getAdditionalImports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>getAdditionalImports--</Anchor></Token>
<Token><TokenIdentifier><Name>getAdditionalImports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>getAdditionalImports--</Anchor></Token>
<Token><TokenIdentifier><Name>getAdditionalParameters()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getAdditionalParameters--</Anchor></Token>
<Token><TokenIdentifier><Name>getAdditionalParameters()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>getAdditionalParameters--</Anchor></Token>
<Token><TokenIdentifier><Name>getAdditionalSourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getAdditionalSourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAddress()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getAddress--</Anchor></Token>
<Token><TokenIdentifier><Name>getAgentClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getAgentClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getAll()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getAll--</Anchor></Token>
<Token><TokenIdentifier><Name>getAll()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/DomainObjectSet.html</Path>
<Anchor>getAll--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getAllArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllArtifacts(ResolvedDependency)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getAllArtifacts-org.gradle.api.artifacts.ResolvedDependency-</Anchor></Token>
<Token><TokenIdentifier><Name>getAllClassDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getAllClassDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllCompilerArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getAllCompilerArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllComponents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
<Anchor>getAllComponents--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getAllDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
<Anchor>getAllDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllDependencyConstraints()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getAllDependencyConstraints--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllGroovy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovySourceSet.html</Path>
<Anchor>getAllGroovy--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllInitScripts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getAllInitScripts--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllJava()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getAllJava--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getAllJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getAllJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getAllJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllModuleArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getAllModuleArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllModuleDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getAllModuleDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllprojects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getAllprojects--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllScala()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaSourceSet.html</Path>
<Anchor>getAllScala--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getAllSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllSourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getAllSourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>getAllTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getAllTasks(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getAllTasks-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>getAltDeployDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarModule.html</Path>
<Anchor>getAltDeployDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnalysisFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/IncrementalCompileOptions.html</Path>
<Anchor>getAnalysisFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnnotationProcessorConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getAnnotationProcessorConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnnotationProcessorGeneratedSourcesDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getAnnotationProcessorGeneratedSourcesDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnnotationProcessorPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getAnnotationProcessorPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnnotationProcessorPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getAnnotationProcessorPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnnouncerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>getAnnouncerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnt()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>getAnt--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnt()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getAnt--</Anchor></Token>
<Token><TokenIdentifier><Name>getAnt()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getAnt--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>getAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>getAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>getAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getAntBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntGroovydoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getAntGroovydoc--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntlr()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrSourceVirtualDirectory.html</Path>
<Anchor>getAntlr--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntlrClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>getAntlrClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getAntPropertyName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractOptions.html</Path>
<Anchor>getAntPropertyName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAntPropertyName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getAntPropertyName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAntPropertyName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getAntPropertyName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAntPropertyValue(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractOptions.html</Path>
<Anchor>getAntPropertyValue-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>getAntPropertyValue(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getAntPropertyValue-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>getAntPropertyValue(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getAntPropertyValue-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>getApi()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmLibrarySpec.html</Path>
<Anchor>getApi--</Anchor></Token>
<Token><TokenIdentifier><Name>getApi()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibrarySpec.html</Path>
<Anchor>getApi--</Anchor></Token>
<Token><TokenIdentifier><Name>getApiConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getApiConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getApiDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
<Anchor>getApiDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getApiDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftLibrary.html</Path>
<Anchor>getApiDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getApiDocTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>getApiDocTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getApiElementsConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getApiElementsConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getApiJarFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>getApiJarFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAppDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>getAppDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getAppendix()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getAppendix--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplication()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.html</Path>
<Anchor>getApplication--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplication()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ApplicationBinarySpec.html</Path>
<Anchor>getApplication--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplication()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getApplication--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplicationDefaultJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>getApplicationDefaultJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplicationDistribution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>getApplicationDistribution--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplicationJar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>getApplicationJar--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplicationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>getApplicationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplicationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getApplicationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplicationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getApplicationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getApplicationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getApplicationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getAppliesTo()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>getAppliesTo--</Anchor></Token>
<Token><TokenIdentifier><Name>getAppNameSystemProperty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getAppNameSystemProperty--</Anchor></Token>
<Token><TokenIdentifier><Name>getArchitecture()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/NativePlatform.html</Path>
<Anchor>getArchitecture--</Anchor></Token>
<Token><TokenIdentifier><Name>getArchive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingList.html</Path>
<Anchor>getArchive--</Anchor></Token>
<Token><TokenIdentifier><Name>getArchiveBase()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getArchiveBase--</Anchor></Token>
<Token><TokenIdentifier><Name>getArchiveName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getArchiveName--</Anchor></Token>
<Token><TokenIdentifier><Name>getArchivePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getArchivePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getArchivePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getArchivePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getArchivesBaseName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>getArchivesBaseName--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Tool.html</Path>
<Anchor>getArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>getArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>getArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>getArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/TaskExecutionRequest.html</Path>
<Anchor>getArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgument()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidActionClosureException.html</Path>
<Anchor>getArgument--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>getArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>getArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>getArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>getArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>getArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterMatcher.html</Path>
<Anchor>getArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>getArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseBuildCommand.html</Path>
<Anchor>getArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactCollection.html</Path>
<Anchor>getArtifactFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getArtifactId--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getArtifactId--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenDependency.html</Path>
<Anchor>getArtifactId--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomRelocation.html</Path>
<Anchor>getArtifactId--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>getArtifactId--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactCollection.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationVariant.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getArtifacts-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts(ResolvedDependency)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getArtifacts-org.gradle.api.artifacts.ResolvedDependency-</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts(Class&lt;? extends Artifact&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentArtifactsResult.html</Path>
<Anchor>getArtifacts-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>getArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactTypes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>getArtifactTypes--</Anchor></Token>
<Token><TokenIdentifier><Name>getArtifactUrls()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>getArtifactUrls--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsArg()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.Output.html</Path>
<Anchor>getAsArg--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsExcludeSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>getAsExcludeSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/Directory.html</Path>
<Anchor>getAsFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
<Anchor>getAsFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileSystemLocation.html</Path>
<Anchor>getAsFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RegularFile.html</Path>
<Anchor>getAsFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RegularFileProperty.html</Path>
<Anchor>getAsFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFileTree()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/Directory.html</Path>
<Anchor>getAsFileTree--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFileTree()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
<Anchor>getAsFileTree--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFileTree()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>getAsFileTree--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsFileTree()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>getAsFileTree--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsHex()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>getAsHex--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsIncludeSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>getAsIncludeSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsJvmArg()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getAsJvmArg--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsLong()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>getAsLong--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsMap()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getAsMap--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsMap()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
<Anchor>getAsMap--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>getAsPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssembler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getAssembler--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssembler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
<Anchor>getAssembler--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssembler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCppPlatformToolChain.html</Path>
<Anchor>getAssembler--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssemblerArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>getAssemblerArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssetDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PublicAssets.html</Path>
<Anchor>getAssetDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getAssets--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssetsDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>getAssetsDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssetsJar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>getAssetsJar--</Anchor></Token>
<Token><TokenIdentifier><Name>getAssetsJarFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getAssetsJarFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getAsSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>getAsSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getAt(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>getAt-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAt(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationContainer.html</Path>
<Anchor>getAt-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAt(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getAt-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAt(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>getAt-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAt(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>getAt-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getAt(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>getAt-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getAt(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/DomainObjectSet.html</Path>
<Anchor>getAt-int-</Anchor></Token>
<Token><TokenIdentifier><Name>getAttachedArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getAttachedArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttempted()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedDependencyResult.html</Path>
<Anchor>getAttempted--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttemptedReason()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedDependencyResult.html</Path>
<Anchor>getAttemptedReason--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttribute(Attribute&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeContainer.html</Path>
<Anchor>getAttribute-org.gradle.api.attributes.Attribute-</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentSelector.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraint.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedVariantResult.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/ArtifactTypeDefinition.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributesSchema.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/HasAttributes.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>getAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAttributesSchema()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>getAttributesSchema--</Anchor></Token>
<Token><TokenIdentifier><Name>getAuthentication()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationSupported.html</Path>
<Anchor>getAuthentication--</Anchor></Token>
<Token><TokenIdentifier><Name>getAvailableBuildTypes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>getAvailableBuildTypes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAvailableDistributionTypes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getAvailableDistributionTypes--</Anchor></Token>
<Token><TokenIdentifier><Name>getAvailableDSLs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>getAvailableDSLs--</Anchor></Token>
<Token><TokenIdentifier><Name>getAvailableTestFrameworks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>getAvailableTestFrameworks--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>getBaseDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>getBaseDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>getBaseDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/Distribution.html</Path>
<Anchor>getBaseName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/Resource.html</Path>
<Anchor>getBaseName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getBaseName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getBaseName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithNativeRuntime.html</Path>
<Anchor>getBaseName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentSpec.html</Path>
<Anchor>getBaseName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBasePlugin()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>getBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>getBaseValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
<Anchor>getBaseValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getBatchScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getBatchScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getBeforeMerged()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>getBeforeMerged--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentWithBinaries.html</Path>
<Anchor>getBinaries--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getBinaries--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>getBinaries--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltLibrary.html</Path>
<Anchor>getBinaries--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/component/BaseComponentSpec.html</Path>
<Anchor>getBinaries--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/VariantComponentSpec.html</Path>
<Anchor>getBinaries--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/distribution/PlayDistribution.html</Path>
<Anchor>getBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaryBuildAbility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getBinaryBuildAbility--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>getBinaryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ExtractSymbols.html</Path>
<Anchor>getBinaryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/StripSymbols.html</Path>
<Anchor>getBinaryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaryRenderer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/ComponentReport.html</Path>
<Anchor>getBinaryRenderer--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinaryResultsDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getBinaryResultsDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getBinResultsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getBinResultsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getBootClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getBootClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getBootClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getBootClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getBootClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getBootClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getBootstrapClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getBootstrapClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getBootstrapClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getBootstrapClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getBootstrapClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getBootstrapClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getBootstrapClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getBootstrapClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getBottom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getBottom--</Anchor></Token>
<Token><TokenIdentifier><Name>getBottom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getBottom--</Anchor></Token>
<Token><TokenIdentifier><Name>getBranch()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyModuleDescriptor.html</Path>
<Anchor>getBranch--</Anchor></Token>
<Token><TokenIdentifier><Name>getBranch()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/MutableVersionConstraint.html</Path>
<Anchor>getBranch--</Anchor></Token>
<Token><TokenIdentifier><Name>getBranch()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VersionConstraint.html</Path>
<Anchor>getBranch--</Anchor></Token>
<Token><TokenIdentifier><Name>getBranch()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>getBranch--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuild()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ProjectComponentIdentifier.html</Path>
<Anchor>getBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuild()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryTasksCollection.html</Path>
<Anchor>getBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildAbility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getBuildAbility--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildCache()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getBuildCache--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildCommands()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getBuildCommands--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildCommands()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getBuildCommands--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildCommands()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getBuildCommands--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getBuildDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Buildable.html</Path>
<Anchor>getBuildDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
<Anchor>getBuildDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioProject.html</Path>
<Anchor>getBuildDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioSolution.html</Path>
<Anchor>getBuildDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getBuildDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>getBuildDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getBuildDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuilder(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ToolingModelBuilderRegistry.html</Path>
<Anchor>getBuilder-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>getBuildFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getBuildFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>getBuildFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getBuildFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildFileName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>getBuildFileName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/BuildEnvironment.html</Path>
<Anchor>getBuildIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/BuildModel.html</Path>
<Anchor>getBuildIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradleBuild.html</Path>
<Anchor>getBuildIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ProjectIdentifier.html</Path>
<Anchor>getBuildIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildInvocationScopeId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
<Anchor>getBuildInvocationScopeId--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildModel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>getBuildModel--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ProjectComponentSelector.html</Path>
<Anchor>getBuildName--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildOperationExecutor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getBuildOperationExecutor--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildOperationExecutor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
<Anchor>getBuildOperationExecutor--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnexpectedBuildResultException.html</Path>
<Anchor>getBuildResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildscript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getBuildscript--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildscript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getBuildscript--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildscript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>getBuildscript--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getBuildScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildableComponentSpec.html</Path>
<Anchor>getBuildTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinary.html</Path>
<Anchor>getBuildType--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuildType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getBuildType--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuiltBy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
<Anchor>getBuiltBy--</Anchor></Token>
<Token><TokenIdentifier><Name>getBuiltBy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileTree.html</Path>
<Anchor>getBuiltBy--</Anchor></Token>
<Token><TokenIdentifier><Name>getBundleBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>getBundleBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getBundleBinaryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>getBundleBinaryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>getByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>getByName-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String, Action&lt;? super ArtifactRepository&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>getByName-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationContainer.html</Path>
<Anchor>getByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationContainer.html</Path>
<Anchor>getByName-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String, Action&lt;? super Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationContainer.html</Path>
<Anchor>getByName-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getByName-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getByName-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>getByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>getByName-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>getByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>getByName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByNameLater(Class&lt;T&gt;, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>getByNameLater-java.lang.Class-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>getByPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getByType(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>getByType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getByType(TypeOf&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>getByType-org.gradle.api.reflect.TypeOf-</Anchor></Token>
<Token><TokenIdentifier><Name>getCandidate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelection.html</Path>
<Anchor>getCandidate--</Anchor></Token>
<Token><TokenIdentifier><Name>getCandidateClassFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getCandidateClassFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getCandidateClassFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getCandidateClassFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getCandidateValues()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/MultipleCandidatesDetails.html</Path>
<Anchor>getCandidateValues--</Anchor></Token>
<Token><TokenIdentifier><Name>getCanonicalUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>getCanonicalUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getCapabilities()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
<Anchor>getCapabilities--</Anchor></Token>
<Token><TokenIdentifier><Name>getCapabilities()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/CapabilitiesMetadata.html</Path>
<Anchor>getCapabilities--</Anchor></Token>
<Token><TokenIdentifier><Name>getCause()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionDescriptor.html</Path>
<Anchor>getCause--</Anchor></Token>
<Token><TokenIdentifier><Name>getCauses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/Failure.html</Path>
<Anchor>getCauses--</Anchor></Token>
<Token><TokenIdentifier><Name>getCauses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ListenerFailedException.html</Path>
<Anchor>getCauses--</Anchor></Token>
<Token><TokenIdentifier><Name>getcCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getcCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getcCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
<Anchor>getcCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getcCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCppPlatformToolChain.html</Path>
<Anchor>getcCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getCharSet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getCharSet--</Anchor></Token>
<Token><TokenIdentifier><Name>getCheck()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryTasksCollection.html</Path>
<Anchor>getCheck--</Anchor></Token>
<Token><TokenIdentifier><Name>getCheckstyleClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getCheckstyleClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCheckTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/CheckableComponentSpec.html</Path>
<Anchor>getCheckTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getChildProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterMatcher.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/HierarchicalEclipseProject.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BasicGradleProject.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/HierarchicalElement.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getChildren()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaProject.html</Path>
<Anchor>getChildren--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getClassDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassDumpDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getClassDumpDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>getClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>getClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>getClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDeployPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getClassesDeployPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getClassesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>getClassesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>getClassesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>getClassesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/JvmClasses.html</Path>
<Anchor>getClassesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>getClassesDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>getClassesDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassesTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getClassesTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassFolders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getClassFolders--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactIdentifier.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifact.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifact.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getClassifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassLoader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>getClassLoader--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassLoaderCache()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getClassLoaderCache--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassLoaderFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>getClassLoaderFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestDescriptor.html</Path>
<Anchor>getClassName--</Anchor></Token>
<Token><TokenIdentifier><Name>getClassName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestOperationDescriptor.html</Path>
<Anchor>getClassName--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseClasspath.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>getClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspathAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseClasspathEntry.html</Path>
<Anchor>getClasspathAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspathAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseSourceDirectory.html</Path>
<Anchor>getClasspathAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getClasspathContainers()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getClasspathContainers--</Anchor></Token>
<Token><TokenIdentifier><Name>getClientMetaData()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>getClientMetaData--</Anchor></Token>
<Token><TokenIdentifier><Name>getClientMetaData()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/BuildEnvironmentReportTask.html</Path>
<Anchor>getClientMetaData--</Anchor></Token>
<Token><TokenIdentifier><Name>getClosure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidActionClosureException.html</Path>
<Anchor>getClosure--</Anchor></Token>
<Token><TokenIdentifier><Name>getCodenarcClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getCodenarcClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCoffeeScriptJs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>getCoffeeScriptJs--</Anchor></Token>
<Token><TokenIdentifier><Name>getCoffeeScriptJs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>getCoffeeScriptJs--</Anchor></Token>
<Token><TokenIdentifier><Name>getCommandLine()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getCommandLine--</Anchor></Token>
<Token><TokenIdentifier><Name>getCommandLine()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getCommandLine--</Anchor></Token>
<Token><TokenIdentifier><Name>getCommandLine()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>getCommandLine--</Anchor></Token>
<Token><TokenIdentifier><Name>getComment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>getComment--</Anchor></Token>
<Token><TokenIdentifier><Name>getComment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getComment--</Anchor></Token>
<Token><TokenIdentifier><Name>getComment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getComment--</Anchor></Token>
<Token><TokenIdentifier><Name>getComments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomLicense.html</Path>
<Anchor>getComments--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompatibilityRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeMatchingStrategy.html</Path>
<Anchor>getCompatibilityRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilationClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getCompilationClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getCompileClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/JavaSourceSet.html</Path>
<Anchor>getCompileClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/ScalaLanguageSourceSet.html</Path>
<Anchor>getCompileClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileClasspathConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getCompileClasspathConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getCompileConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileIncludePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>getCompileIncludePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileJavaTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getCompileJavaTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getCompileModules--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileOnlyConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getCompileOnlyConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompiler(ScalaJavaJointCompileSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>getCompiler-org.gradle.api.internal.tasks.scala.ScalaJavaJointCompileSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>getCompiler(ScalaJavaJointCompileSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>getCompiler-org.gradle.api.internal.tasks.scala.ScalaJavaJointCompileSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>getCompiler(ScalaJavaJointCompileSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/PlatformScalaCompile.html</Path>
<Anchor>getCompiler-org.gradle.api.internal.tasks.scala.ScalaJavaJointCompileSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getCompilerArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getCompilerArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getCompilerArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getCompilerArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getCompilerArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>getCompilerClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getCompilerOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeSourceCompileTask.html</Path>
<Anchor>getCompilerVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getCompilerVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompilerVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getCompilerVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>getCompileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getCompileTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompileTaskName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getCompileTaskName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryBinarySpec.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/CUnitTestSuiteBinarySpec.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/GoogleTestTestSuiteBinarySpec.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpComponent.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>getComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponentAs(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getComponentAs-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getComponentIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentArtifactIdentifier.html</Path>
<Anchor>getComponentIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>getComponents--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ArtifactResolutionResult.html</Path>
<Anchor>getComponents--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getComponents--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>getComponents--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponentSelection()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>getComponentSelection--</Anchor></Token>
<Token><TokenIdentifier><Name>getComponentType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>getComponentType--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompression()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Tar.html</Path>
<Anchor>getCompression--</Anchor></Token>
<Token><TokenIdentifier><Name>getCompressor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>getCompressor--</Anchor></Token>
<Token><TokenIdentifier><Name>getConf()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>getConf--</Anchor></Token>
<Token><TokenIdentifier><Name>getConf2ScopeMappings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>getConf2ScopeMappings--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>getConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>getConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getConfigDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>getConfigDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>getConfigDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigFailurePolicy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getConfigFailurePolicy--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getConfigFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>getConfigFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getConfigFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>getConfigFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getConfigProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>getConfigProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMapping.html</Path>
<Anchor>getConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>getConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>getConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>getConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>getConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>getConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>getConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfigurationScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>getConfigurationScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getConfMapping()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyDependency.html</Path>
<Anchor>getConfMapping--</Anchor></Token>
<Token><TokenIdentifier><Name>getConnection()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomScm.html</Path>
<Anchor>getConnection--</Anchor></Token>
<Token><TokenIdentifier><Name>getConsoleOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>getConsoleOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getConsoleOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getConsoleOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getConstraints()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>getConstraints--</Anchor></Token>
<Token><TokenIdentifier><Name>getConsumerValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityCheckDetails.html</Path>
<Anchor>getConsumerValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getConsumerValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/MultipleCandidatesDetails.html</Path>
<Anchor>getConsumerValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getContainers()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getContainers--</Anchor></Token>
<Token><TokenIdentifier><Name>getContent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>getContent--</Anchor></Token>
<Token><TokenIdentifier><Name>getContentCharset()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeSpec.html</Path>
<Anchor>getContentCharset--</Anchor></Token>
<Token><TokenIdentifier><Name>getContentPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getContentPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getContentRoot()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getContentRoot--</Anchor></Token>
<Token><TokenIdentifier><Name>getContentRoot()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/HttpFileServer.html</Path>
<Anchor>getContentRoot--</Anchor></Token>
<Token><TokenIdentifier><Name>getContentRoot()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServer.html</Path>
<Anchor>getContentRoot--</Anchor></Token>
<Token><TokenIdentifier><Name>getContentRoots()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getContentRoots--</Anchor></Token>
<Token><TokenIdentifier><Name>getContents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/Distribution.html</Path>
<Anchor>getContents--</Anchor></Token>
<Token><TokenIdentifier><Name>getContextPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getContextPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getContextPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>getContextPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getContextRoot()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarWebModule.html</Path>
<Anchor>getContextRoot--</Anchor></Token>
<Token><TokenIdentifier><Name>getConvention()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getConvention--</Anchor></Token>
<Token><TokenIdentifier><Name>getConvention()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getConvention--</Anchor></Token>
<Token><TokenIdentifier><Name>getCoordinates()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/ComponentWithCoordinates.html</Path>
<Anchor>getCoordinates--</Anchor></Token>
<Token><TokenIdentifier><Name>getCounter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>getCounter--</Anchor></Token>
<Token><TokenIdentifier><Name>getCppCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getCppCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getCppCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
<Anchor>getCppCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getCppCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCppPlatformToolChain.html</Path>
<Anchor>getCppCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getCppSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>getCppSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getCppSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getCppSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getCreateStaticLib()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinarySpec.TasksCollection.html</Path>
<Anchor>getCreateStaticLib--</Anchor></Token>
<Token><TokenIdentifier><Name>getCreateTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithStaticLibrary.html</Path>
<Anchor>getCreateTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getCredentials()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationSupported.html</Path>
<Anchor>getCredentials--</Anchor></Token>
<Token><TokenIdentifier><Name>getCredentials(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/AuthenticationSupported.html</Path>
<Anchor>getCredentials-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getCredentials()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>getCredentials--</Anchor></Token>
<Token><TokenIdentifier><Name>getCsv()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</Path>
<Anchor>getCsv--</Anchor></Token>
<Token><TokenIdentifier><Name>getCurrentDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getCurrentDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifact.html</Path>
<Anchor>getDate--</Anchor></Token>
<Token><TokenIdentifier><Name>getDate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getDate--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebug()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getDebug--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebug()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>getDebug--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebug()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getDebug--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebug()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getDebug--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebuggable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getDebuggable--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebuggable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getDebuggable--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebuggerExecutableFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppExecutable.html</Path>
<Anchor>getDebuggerExecutableFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebuggerExecutableFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftExecutable.html</Path>
<Anchor>getDebuggerExecutableFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebugLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/DebugOptions.html</Path>
<Anchor>getDebugLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebugLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>getDebugLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getDebugOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getDebugOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeclarations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
<Anchor>getDeclarations--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultCharacterEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getDefaultCharacterEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultCharacterEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getDefaultCharacterEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultCharacterEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getDefaultCharacterEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>getDefaultConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Compression.html</Path>
<Anchor>getDefaultExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultImports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
<Anchor>getDefaultImports--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultImports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>getDefaultImports--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultJvmOpts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getDefaultJvmOpts--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultJvmOpts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getDefaultJvmOpts--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getDefaultOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultReason()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionCause.html</Path>
<Anchor>getDefaultReason--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Jdt.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultResourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Workspace.html</Path>
<Anchor>getDefaultResourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultSignatory(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryProvider.html</Path>
<Anchor>getDefaultSignatory-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultSignatory(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/SignatoryProvider.html</Path>
<Anchor>getDefaultSignatory-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultTargetJdk(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>getDefaultTargetJdk-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getDefaultTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureTypeProvider.html</Path>
<Anchor>getDefaultType--</Anchor></Token>
<Token><TokenIdentifier><Name>getDefaultType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureTypeProvider.html</Path>
<Anchor>getDefaultType--</Anchor></Token>
<Token><TokenIdentifier><Name>getDelete()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>getDelete--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ClientModule.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedComponentResult.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>getDependencies-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskDependency.html</Path>
<Anchor>getDependencies-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmApiSpec.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmLibrarySpec.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteSpec.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/DependentSourceSet.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentWithDependencies.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftLibrary.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecContainer.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencyConstraints()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getDependencyConstraints--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencyConstraints()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>getDependencyConstraints--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencyLocking()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getDependencyLocking--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencyModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModuleDependency.html</Path>
<Anchor>getDependencyModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencyNotation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>getDependencyNotation--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencyProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ProjectDependency.html</Path>
<Anchor>getDependencyProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencySpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>getDependencySpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependencySubstitution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>getDependencySubstitution--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedComponentResult.html</Path>
<Anchor>getDependents--</Anchor></Token>
<Token><TokenIdentifier><Name>getDependsOn()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getDependsOn--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeploymentDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>getDeploymentDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeploymentDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>getDeploymentDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeploymentRegistry()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>getDeploymentRegistry--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeployName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getDeployName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeployName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>getDeployName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeployPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>getDeployPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeployPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>getDeployPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getDepth()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getDepth--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionDescriptor.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Rule.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarSecurityRole.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/Failure.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Element.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Launchable.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Task.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescription()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProgressEvent.html</Path>
<Anchor>getDescription--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>getDescriptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>getDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>getDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleException.html</Path>
<Anchor>getDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/ProgressEvent.html</Path>
<Anchor>getDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskProgressEvent.html</Path>
<Anchor>getDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestProgressEvent.html</Path>
<Anchor>getDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>getDescriptorDestination()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>getDescriptorDestination--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestination()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>getDestination--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestination()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>getDestination--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestination()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/DirectoryReport.html</Path>
<Anchor>getDestination--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestination()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
<Anchor>getDestination--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestination()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/SingleFileReport.html</Path>
<Anchor>getDestination--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestination()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputEvent.html</Path>
<Anchor>getDestination--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Copy.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>getDestinationDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getDestinationDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getDestinationDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getDestinationDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getDestinationFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestinationFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>getDestinationFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getDestroyables()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getDestroyables--</Anchor></Token>
<Token><TokenIdentifier><Name>getDeveloperConnection()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomScm.html</Path>
<Anchor>getDeveloperConnection--</Anchor></Token>
<Token><TokenIdentifier><Name>getDevelopmentBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppApplication.html</Path>
<Anchor>getDevelopmentBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getDevelopmentBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/ProductionCppComponent.html</Path>
<Anchor>getDevelopmentBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getDevelopmentBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ProductionComponent.html</Path>
<Anchor>getDevelopmentBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getDevelopmentBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/ProductionSwiftComponent.html</Path>
<Anchor>getDevelopmentBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getDevelopmentBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftApplication.html</Path>
<Anchor>getDevelopmentBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getDidWork()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getDidWork--</Anchor></Token>
<Token><TokenIdentifier><Name>getDidWork()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>getDidWork--</Anchor></Token>
<Token><TokenIdentifier><Name>getDidWork()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WorkResult.html</Path>
<Anchor>getDidWork--</Anchor></Token>
<Token><TokenIdentifier><Name>getDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileTree.html</Path>
<Anchor>getDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryTree.html</Path>
<Anchor>getDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>getDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>getDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
<Anchor>getDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeInstallationSpec.html</Path>
<Anchor>getDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/SourceDirectory.html</Path>
<Anchor>getDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirectoryFileTreeFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getDirectoryFileTreeFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>getDirMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getDirMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/FlatDirectoryArtifactRepository.html</Path>
<Anchor>getDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>getDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisambiguationRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeMatchingStrategy.html</Path>
<Anchor>getDisambiguationRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayGranularity()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getDisplayGranularity--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentArtifactIdentifier.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentIdentifier.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentSelector.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedVariantResult.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Describable.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/Resource.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioSolution.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/JavaToolChain.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelElement.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/BuildType.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Flavor.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/Architecture.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Binary.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpec.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Platform.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ToolChain.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationDescriptor.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/ProgressEvent.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Launchable.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDisplayName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>getDisplayName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistribution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomLicense.html</Path>
<Anchor>getDistribution--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistributionBase()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getDistributionBase--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistributionPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getDistributionPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistributionSha256Sum()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getDistributionSha256Sum--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistributionType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getDistributionType--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistributionUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getDistributionUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>getDistsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDistsDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>getDistsDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getDocEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getDoclet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getDoclet--</Anchor></Token>
<Token><TokenIdentifier><Name>getDoclet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getDoclet--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocletpath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getDocletpath--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocletpath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getDocletpath--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getDocsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocsDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getDocsDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getDocTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getDocTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getDocTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocumentationRegistry()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>getDocumentationRegistry--</Anchor></Token>
<Token><TokenIdentifier><Name>getDocURL()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getDocURL--</Anchor></Token>
<Token><TokenIdentifier><Name>getDownloadUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDistributionManagement.html</Path>
<Anchor>getDownloadUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getDsl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>getDsl--</Anchor></Token>
<Token><TokenIdentifier><Name>getDuplicatesStrategy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>getDuplicatesStrategy--</Anchor></Token>
<Token><TokenIdentifier><Name>getDuplicatesStrategy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>getDuplicatesStrategy--</Anchor></Token>
<Token><TokenIdentifier><Name>getDuplicatesStrategy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getDuplicatesStrategy--</Anchor></Token>
<Token><TokenIdentifier><Name>getEffectiveAnnotationProcessorPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getEffectiveAnnotationProcessorPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getEffectiveAnnotationProcessorPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>getEffectiveAnnotationProcessorPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getEffectiveManifest()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>getEffectiveManifest--</Anchor></Token>
<Token><TokenIdentifier><Name>getEffectivePom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getEffectivePom--</Anchor></Token>
<Token><TokenIdentifier><Name>getEffort()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getEffort--</Anchor></Token>
<Token><TokenIdentifier><Name>getEffort()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getEffort--</Anchor></Token>
<Token><TokenIdentifier><Name>getElement()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>getElement--</Anchor></Token>
<Token><TokenIdentifier><Name>getEmacs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsReports.html</Path>
<Anchor>getEmacs--</Anchor></Token>
<Token><TokenIdentifier><Name>getEmail()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getEmail--</Anchor></Token>
<Token><TokenIdentifier><Name>getEmail()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getEmail--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnableAssertions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getEnableAssertions--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnableAssertions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getEnableAssertions--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnableAssertions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getEnableAssertions--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
<Anchor>getEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnabledReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
<Anchor>getEnabledReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileOptions.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEncoding()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>getEncoding--</Anchor></Token>
<Token><TokenIdentifier><Name>getEndTime()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getEndTime--</Anchor></Token>
<Token><TokenIdentifier><Name>getEndTime()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationResult.html</Path>
<Anchor>getEndTime--</Anchor></Token>
<Token><TokenIdentifier><Name>getEntries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>getEntries--</Anchor></Token>
<Token><TokenIdentifier><Name>getEntryAttributes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>getEntryAttributes--</Anchor></Token>
<Token><TokenIdentifier><Name>getEntryCompression()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>getEntryCompression--</Anchor></Token>
<Token><TokenIdentifier><Name>getEntryPoint()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/DirectoryReport.html</Path>
<Anchor>getEntryPoint--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnvironment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getEnvironment--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnvironment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getEnvironment--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnvironment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getEnvironment--</Anchor></Token>
<Token><TokenIdentifier><Name>getEnvironment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>getEnvironment--</Anchor></Token>
<Token><TokenIdentifier><Name>getError()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>getError--</Anchor></Token>
<Token><TokenIdentifier><Name>getErrorOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getErrorOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getErrorOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getErrorOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getErrorOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>getErrorOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getEvaluator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>getEvaluator--</Anchor></Token>
<Token><TokenIdentifier><Name>getEvents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getEvents--</Anchor></Token>
<Token><TokenIdentifier><Name>getEventTime()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/ProgressEvent.html</Path>
<Anchor>getEventTime--</Anchor></Token>
<Token><TokenIdentifier><Name>getException()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getException--</Anchor></Token>
<Token><TokenIdentifier><Name>getExceptionFormat()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getExceptionFormat--</Anchor></Token>
<Token><TokenIdentifier><Name>getExceptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getExceptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeBugsFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getExcludeBugsFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeBugsFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getExcludeBugsFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeBugsFilterConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getExcludeBugsFilterConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeBugsFilterConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getExcludeBugsFilterConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeCategories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
<Anchor>getExcludeCategories--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeClassLoaders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getExcludeClassLoaders--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getExcludeDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getExcludeDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeDocFilesSubDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getExcludeDocFilesSubDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludedTaskNames()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getExcludedTaskNames--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeEngines()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>getExcludeEngines--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getExcludeFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getExcludeFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeFilterConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getExcludeFilterConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeFilterConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getExcludeFilterConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeFolders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getExcludeFolders--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeGroups()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getExcludeGroups--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getExcludeRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>getExcludeRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseSourceDirectory.html</Path>
<Anchor>getExcludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeSpecs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>getExcludeSpecs--</Anchor></Token>
<Token><TokenIdentifier><Name>getExcludeTags()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>getExcludeTags--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecActionFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getExecActionFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecActionFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getExecActionFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getExecResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCommandLineToolConfiguration.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>getExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutableDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>getExecutableDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutableDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getExecutableDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutableFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithExecutable.html</Path>
<Anchor>getExecutableFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutableFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinary.html</Path>
<Anchor>getExecutableFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutableFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getExecutableFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutableFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
<Anchor>getExecutableFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutableFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBinary.html</Path>
<Anchor>getExecutableFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutables()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentExtension.html</Path>
<Anchor>getExecutables--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecuted()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectState.html</Path>
<Anchor>getExecuted--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecuted()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>getExecuted--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutionData()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>getExecutionData--</Anchor></Token>
<Token><TokenIdentifier><Name>getExecutionData()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getExecutionData--</Anchor></Token>
<Token><TokenIdentifier><Name>getExitEnvironmentVar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getExitEnvironmentVar--</Anchor></Token>
<Token><TokenIdentifier><Name>getExitEnvironmentVar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getExitEnvironmentVar--</Anchor></Token>
<Token><TokenIdentifier><Name>getExitValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecResult.html</Path>
<Anchor>getExitValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getExported()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaDependency.html</Path>
<Anchor>getExported--</Anchor></Token>
<Token><TokenIdentifier><Name>getExportedHeaders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/HeaderExportingSourceSet.html</Path>
<Anchor>getExportedHeaders--</Anchor></Token>
<Token><TokenIdentifier><Name>getExportedPackages()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>getExportedPackages--</Anchor></Token>
<Token><TokenIdentifier><Name>getExportedPackages()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/ApiJar.html</Path>
<Anchor>getExportedPackages--</Anchor></Token>
<Token><TokenIdentifier><Name>getExports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmApiSpec.html</Path>
<Anchor>getExports--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getExtDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getExtDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtDocUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOfflineLink.html</Path>
<Anchor>getExtDocUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtends()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyConfiguration.html</Path>
<Anchor>getExtends--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtendsFrom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getExtendsFrom--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactIdentifier.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifact.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifact.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlTemplateFormat.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/BinarySignatureType.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/pgp/ArmoredSignatureType.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtension()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureType.html</Path>
<Anchor>getExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtensionDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getExtensionDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtensions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionAware.html</Path>
<Anchor>getExtensions--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtensions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getExtensions--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtensionsAsDynamicObject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/Convention.html</Path>
<Anchor>getExtensionsAsDynamicObject--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtensionsSchema()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>getExtensionsSchema--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtraArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getExtraArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtraArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getExtraArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtraInfo()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyModuleDescriptor.html</Path>
<Anchor>getExtraInfo--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtraInfo()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>getExtraInfo--</Anchor></Token>
<Token><TokenIdentifier><Name>getExtraProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>getExtraProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getFacet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpFacet.html</Path>
<Anchor>getFacet--</Anchor></Token>
<Token><TokenIdentifier><Name>getFacet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>getFacet--</Anchor></Token>
<Token><TokenIdentifier><Name>getFacets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>getFacets--</Anchor></Token>
<Token><TokenIdentifier><Name>getFacets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>getFacets--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailedTestCount()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getFailedTestCount--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailFast()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getFailFast--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailOnWarning()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>getFailOnWarning--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedArtifactResult.html</Path>
<Anchor>getFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedComponentResult.html</Path>
<Anchor>getFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedDependencyResult.html</Path>
<Anchor>getFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectState.html</Path>
<Anchor>getFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>getFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildResult.html</Path>
<Anchor>getFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactCollection.html</Path>
<Anchor>getFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/FailureResult.html</Path>
<Anchor>getFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifact.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedArtifactResult.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>getFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/UnableToDeleteFileException.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublicationArtifact.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/InputFileDetails.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableFileSpec.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/FileReference.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/FilePath.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ExternalDependency.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaSingleEntryLibraryDependency.html</Path>
<Anchor>getFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileCollectionFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
<Anchor>getFileCollectionFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileCollectionFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getFileCollectionFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileCollectionFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getFileCollectionFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileExtensions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>getFileExtensions--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileLookup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getFileLookup--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileLookup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getFileLookup--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>getFileMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getFileMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getFileName--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileNameExtensions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/ArtifactTypeDefinition.html</Path>
<Anchor>getFileNameExtensions--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileOperations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getFileOperations--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileOperations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>getFileOperations--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileReferenceFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getFileReferenceFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileReferenceFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getFileReferenceFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/ComponentReport.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
<Anchor>getFileResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/FileCollectionDependency.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getFiles-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifactSet.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>getFiles-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/Classpath.html</Path>
<Anchor>getFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getFilesToSign()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getFilesToSign--</Anchor></Token>
<Token><TokenIdentifier><Name>getFilesToSign()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>getFilesToSign--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileSystem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getFileSystem--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileSystem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>getFileSystem--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileSystem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getFileSystem--</Anchor></Token>
<Token><TokenIdentifier><Name>getFileSystem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>getFileSystem--</Anchor></Token>
<Token><TokenIdentifier><Name>getFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>getFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>getFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getFilteringCharset()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>getFilteringCharset--</Anchor></Token>
<Token><TokenIdentifier><Name>getFilteringCharset()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getFilteringCharset--</Anchor></Token>
<Token><TokenIdentifier><Name>getFiltersFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioProject.html</Path>
<Anchor>getFiltersFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getFinalizedBy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getFinalizedBy--</Anchor></Token>
<Token><TokenIdentifier><Name>getFindbugsClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getFindbugsClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getFirstLevelModuleDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getFirstLevelModuleDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getFirstLevelModuleDependencies(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getFirstLevelModuleDependencies-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>getFirstLevelModuleDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>getFirstLevelModuleDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getFirstLevelModuleDependencies(Spec&lt;? super Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>getFirstLevelModuleDependencies-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>getFlavor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinary.html</Path>
<Anchor>getFlavor--</Anchor></Token>
<Token><TokenIdentifier><Name>getFlavor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getFlavor--</Anchor></Token>
<Token><TokenIdentifier><Name>getFooter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getFooter--</Anchor></Token>
<Token><TokenIdentifier><Name>getFooter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getFooter--</Anchor></Token>
<Token><TokenIdentifier><Name>getFooter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getFooter--</Anchor></Token>
<Token><TokenIdentifier><Name>getForcedModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>getForcedModules--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkEvery()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getForkEvery--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>getForkMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getForkOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>getForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getFormat()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>getFormat--</Anchor></Token>
<Token><TokenIdentifier><Name>getFormatType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlTemplateFormat.html</Path>
<Anchor>getFormatType--</Anchor></Token>
<Token><TokenIdentifier><Name>getForPlatform(P)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ToolChainRegistry.html</Path>
<Anchor>getForPlatform-P-</Anchor></Token>
<Token><TokenIdentifier><Name>getFrom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/DependencyResult.html</Path>
<Anchor>getFrom--</Anchor></Token>
<Token><TokenIdentifier><Name>getFrom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransform.html</Path>
<Anchor>getFrom--</Anchor></Token>
<Token><TokenIdentifier><Name>getFrom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
<Anchor>getFrom--</Anchor></Token>
<Token><TokenIdentifier><Name>getGeneratedJavaScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getGeneratedJavaScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getGeneratedScala()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getGeneratedScala--</Anchor></Token>
<Token><TokenIdentifier><Name>getGeneratedSourceDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getGeneratedSourceDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getGeneratedSourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getGeneratedSourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getGeneratedSourceFolders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getGeneratedSourceFolders--</Anchor></Token>
<Token><TokenIdentifier><Name>getGeneratedTestDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getGeneratedTestDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getGenerateTo()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModuleIml.html</Path>
<Anchor>getGenerateTo--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getGradle--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getGradle--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getGradle--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildResult.html</Path>
<Anchor>getGradle--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/BuildEnvironment.html</Path>
<Anchor>getGradle--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>getGradleArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleExe()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>getGradleExe--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleHomeDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getGradleHomeDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleModuleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ExternalDependency.html</Path>
<Anchor>getGradleModuleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getGradleProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/HasGradleProject.html</Path>
<Anchor>getGradleProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getGradleProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleUserHome()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/GradleEnvironment.html</Path>
<Anchor>getGradleUserHome--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleUserHomeDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getGradleUserHomeDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleUserHomeDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getGradleUserHomeDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getGradleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>getGradleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getGradleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getGradleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/GradleEnvironment.html</Path>
<Anchor>getGradleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroovy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovySourceSet.html</Path>
<Anchor>getGroovy--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroovyClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getGroovyClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroovyClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getGroovyClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroovyCompilerJvmVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getGroovyCompilerJvmVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroovyOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getGroovyOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentIdentifier.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentSelector.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRule.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleIdentifier.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionIdentifier.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionSelector.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/Capability.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpec.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleModuleVersion.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Task.html</Path>
<Anchor>getGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroupByInstances()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getGroupByInstances--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroupId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getGroupId--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroupId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getGroupId--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroupId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenDependency.html</Path>
<Anchor>getGroupId--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroupId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomRelocation.html</Path>
<Anchor>getGroupId--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroupId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>getGroupId--</Anchor></Token>
<Token><TokenIdentifier><Name>getGroups()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getGroups--</Anchor></Token>
<Token><TokenIdentifier><Name>getHandle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>getHandle--</Anchor></Token>
<Token><TokenIdentifier><Name>getHashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheKey.html</Path>
<Anchor>getHashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasInputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>getHasInputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasInputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>getHasInputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasInputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>getHasInputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>getHasOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>getHasOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasSourceFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>getHasSourceFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasSourceFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>getHasSourceFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getHasSourceFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>getHasSourceFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getHeader--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getHeader--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getHeader--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getHeader--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/PrefixHeaderFileGenerateTask.html</Path>
<Anchor>getHeader--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeaderDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getHeaderDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeaderDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getHeaderDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeaderDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/GenerateCUnitLauncher.html</Path>
<Anchor>getHeaderDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeaderDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryBinary.html</Path>
<Anchor>getHeaderDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeaderFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getHeaderFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getHeaders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltLibrary.html</Path>
<Anchor>getHeaders--</Anchor></Token>
<Token><TokenIdentifier><Name>getHelpFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getHelpFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getHierarchy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getHierarchy--</Anchor></Token>
<Token><TokenIdentifier><Name>getHomepage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorDescription.html</Path>
<Anchor>getHomepage--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleReports.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcReports.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsReports.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdReports.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/BuildDashboardReports.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/DependencyReportContainer.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestTaskReports.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHtml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</Path>
<Anchor>getHtml--</Anchor></Token>
<Token><TokenIdentifier><Name>getHttpPort()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>getHttpPort--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ClientModule.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadata.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataSupplierDetails.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentModuleMetadata.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedModuleVersion.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ArtifactResult.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentResult.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedComponentResult.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/AppliedPlugin.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginRequest.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginId.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterMatcher.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProjectNature.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradlePublication.html</Path>
<Anchor>getId--</Anchor></Token>
<Token><TokenIdentifier><Name>getIdeaProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
<Anchor>getIdeaProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/VerificationTask.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>getIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>getIml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getIml--</Anchor></Token>
<Token><TokenIdentifier><Name>getImplementationClass()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>getImplementationClass--</Anchor></Token>
<Token><TokenIdentifier><Name>getImplementationConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getImplementationConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getImplementationDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getImplementationDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getImplementationDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>getImplementationDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getImplicitHeaders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/HeaderExportingSourceSet.html</Path>
<Anchor>getImplicitHeaders--</Anchor></Token>
<Token><TokenIdentifier><Name>getImportLibrary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkSharedLibrary.html</Path>
<Anchor>getImportLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>getInceptionYear()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>getInceptionYear--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeCategories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
<Anchor>getIncludeCategories--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludedBuilds()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getIncludedBuilds--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludedBuilds()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getIncludedBuilds--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludedBuilds()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradleBuild.html</Path>
<Anchor>getIncludedBuilds--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeEmptyDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>getIncludeEmptyDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeEmptyDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getIncludeEmptyDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeEngines()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>getIncludeEngines--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getIncludeFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeFilter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getIncludeFilter--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeFilterConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getIncludeFilterConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeFilterConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getIncludeFilterConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeGroups()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getIncludeGroups--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludePatterns()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFilter.html</Path>
<Anchor>getIncludePatterns--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeRoots()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeDependencySet.html</Path>
<Anchor>getIncludeRoots--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseSourceDirectory.html</Path>
<Anchor>getIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeSpecs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>getIncludeSpecs--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncludeTags()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>getIncludeTags--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncoming()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getIncoming--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncremental()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>getIncremental--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncremental()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>getIncremental--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncremental()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateSolutionFileTask.html</Path>
<Anchor>getIncremental--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncremental()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>getIncremental--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncrementalCompilerBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getIncrementalCompilerBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncrementalCompilerBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getIncrementalCompilerBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncrementalCompilerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getIncrementalCompilerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getIncrementalOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>getIncrementalOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getInetAddressFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getInetAddressFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getInfo()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>getInfo--</Anchor></Token>
<Token><TokenIdentifier><Name>getInheritOutputDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getInheritOutputDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getInheritOutputDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaCompilerOutput.html</Path>
<Anchor>getInheritOutputDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getInitializeInOrder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getInitializeInOrder--</Anchor></Token>
<Token><TokenIdentifier><Name>getInitScripts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getInitScripts--</Anchor></Token>
<Token><TokenIdentifier><Name>getInjectedRoutesGenerator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationSpec.html</Path>
<Anchor>getInjectedRoutesGenerator--</Anchor></Token>
<Token><TokenIdentifier><Name>getInjectedRoutesGenerator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>getInjectedRoutesGenerator--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>getInputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>getInputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateSolutionFileTask.html</Path>
<Anchor>getInputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
<Anchor>getInputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeWorkspaceFileTask.html</Path>
<Anchor>getInputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>getInputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFileIfExists()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getInputFileIfExists--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFileIfExists()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>getInputFileIfExists--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
<Anchor>getInputFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getInputFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
<Anchor>getInputProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
<Anchor>getInputReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getInputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getInputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getInputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinarySpec.html</Path>
<Anchor>getInputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstall()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.TasksCollection.html</Path>
<Anchor>getInstall--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstall()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.TasksCollection.html</Path>
<Anchor>getInstall--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.html</Path>
<Anchor>getInstallation--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
<Anchor>getInstallation--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCpp.html</Path>
<Anchor>getInstallDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithInstallation.html</Path>
<Anchor>getInstallDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getInstallDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBinary.html</Path>
<Anchor>getInstallDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>getInstallDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstalledExecutable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getInstalledExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkSharedLibrary.html</Path>
<Anchor>getInstallName--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstallTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithInstallation.html</Path>
<Anchor>getInstallTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstantiator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
<Anchor>getInstantiator--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstantiator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getInstantiator--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstantiator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getInstantiator--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstantiator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>getInstantiator--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstantiator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getInstantiator--</Anchor></Token>
<Token><TokenIdentifier><Name>getInstructions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getInstructions--</Anchor></Token>
<Token><TokenIdentifier><Name>getIpr()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getIpr--</Anchor></Token>
<Token><TokenIdentifier><Name>getIsolationMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>getIsolationMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getIvyPublisher()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
<Anchor>getIvyPublisher--</Anchor></Token>
<Token><TokenIdentifier><Name>getIvyStatus()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyModuleDescriptor.html</Path>
<Anchor>getIvyStatus--</Anchor></Token>
<Token><TokenIdentifier><Name>getIws()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaWorkspace.html</Path>
<Anchor>getIws--</Anchor></Token>
<Token><TokenIdentifier><Name>getJacocoClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoBase.html</Path>
<Anchor>getJacocoClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getJar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.TasksCollection.html</Path>
<Anchor>getJar--</Anchor></Token>
<Token><TokenIdentifier><Name>getJarDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>getJarDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getJarFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getJarFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getJarFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>getJarFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getJarFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getJarFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getJarTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getJarTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getJarURL()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/FileReference.html</Path>
<Anchor>getJarURL--</Anchor></Token>
<Token><TokenIdentifier><Name>getJava()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getJava--</Anchor></Token>
<Token><TokenIdentifier><Name>getJava()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/BuildEnvironment.html</Path>
<Anchor>getJava--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavadoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>getJavadoc--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavadoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>getJavadoc--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavadoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ExternalDependency.html</Path>
<Anchor>getJavadoc--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavadoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaSingleEntryLibraryDependency.html</Path>
<Anchor>getJavadoc--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavadocFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>getJavadocFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavadocPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>getJavadocPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaHome()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>getJavaHome--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaHome()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/JavaEnvironment.html</Path>
<Anchor>getJavaHome--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaHome()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/java/InstalledJdk.html</Path>
<Anchor>getJavaHome--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaHome()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/java/JavaRuntime.html</Path>
<Anchor>getJavaHome--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaLanguageSettings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getJavaLanguageSettings--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaLanguageSettings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaProject.html</Path>
<Anchor>getJavaLanguageSettings--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/platform/PlayPlatform.html</Path>
<Anchor>getJavaPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaRuntimeName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>getJavaRuntimeName--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaSourceSettings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getJavaSourceSettings--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getJavaToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaToolChainFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getJavaToolChainFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaToolChainFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getJavaToolChainFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getJavaVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/java/InstalledJdk.html</Path>
<Anchor>getJavaVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getJavaVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/java/JavaRuntime.html</Path>
<Anchor>getJavaVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdependClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>getJdependClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdk()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>getJdk--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdk()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseJavaSourceSettings.html</Path>
<Anchor>getJdk--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdk()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaJavaLanguageSettings.html</Path>
<Anchor>getJdk--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdkName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getJdkName--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdkName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getJdkName--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdkName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getJdkName--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdkName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getJdkName--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdkName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaProject.html</Path>
<Anchor>getJdkName--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdt()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseJdt.html</Path>
<Anchor>getJdt--</Anchor></Token>
<Token><TokenIdentifier><Name>getJdt()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>getJdt--</Anchor></Token>
<Token><TokenIdentifier><Name>getJFlags()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getJFlags--</Anchor></Token>
<Token><TokenIdentifier><Name>getJFlags()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getJFlags--</Anchor></Token>
<Token><TokenIdentifier><Name>getJs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>getJs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>getJs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>getJs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJsHint()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>getJsHint--</Anchor></Token>
<Token><TokenIdentifier><Name>getJsonReport()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>getJsonReport--</Anchor></Token>
<Token><TokenIdentifier><Name>getjUnitVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JUnitTestSuiteBinarySpec.html</Path>
<Anchor>getjUnitVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getjUnitVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JUnitTestSuiteSpec.html</Path>
<Anchor>getjUnitVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getJunitXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestTaskReports.html</Path>
<Anchor>getJunitXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>getJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getJvmArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getJvmArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getJvmArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArgumentProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getJvmArgumentProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmArguments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/JavaEnvironment.html</Path>
<Anchor>getJvmArguments--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmTestKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestOperationDescriptor.html</Path>
<Anchor>getJvmTestKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getJvmVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>getJvmVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getKey()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
<Anchor>getKey--</Anchor></Token>
<Token><TokenIdentifier><Name>getKeyId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatory.html</Path>
<Anchor>getKeyId--</Anchor></Token>
<Token><TokenIdentifier><Name>getKeyId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/Signatory.html</Path>
<Anchor>getKeyId--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ClasspathEntry.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Container.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Library.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ProjectDependency.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Variable.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getKind()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/AccessRule.html</Path>
<Anchor>getKind--</Anchor></Token>
<Token><TokenIdentifier><Name>getLabel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestKind.html</Path>
<Anchor>getLabel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLanguageLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getLanguageLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLanguageLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getLanguageLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLanguageLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>getLanguageLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLanguageLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaJavaLanguageSettings.html</Path>
<Anchor>getLanguageLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLanguageLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaProject.html</Path>
<Anchor>getLanguageLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLastModified()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>getLastModified--</Anchor></Token>
<Token><TokenIdentifier><Name>getLastName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>getLastName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLayout()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getLayout--</Anchor></Token>
<Token><TokenIdentifier><Name>getLenientConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>getLenientConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingManager.html</Path>
<Anchor>getLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaLanguageLevel.html</Path>
<Anchor>getLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaLanguageLevel.html</Path>
<Anchor>getLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLib()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>getLib--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getLibConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibDeployPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getLibDeployPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>getLibDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>getLibDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentExtension.html</Path>
<Anchor>getLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibrary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>getLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibrary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryBinarySpec.html</Path>
<Anchor>getLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibrary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/LibraryBinarySpec.html</Path>
<Anchor>getLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibrary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>getLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraryDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getLibraryDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>getLibraryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraryName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryBinaryIdentifier.html</Path>
<Anchor>getLibraryName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraryName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryComponentSelector.html</Path>
<Anchor>getLibraryName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraryName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryRequirement.html</Path>
<Anchor>getLibraryName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraryName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/LibraryBinaryDependencySpec.html</Path>
<Anchor>getLibraryName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibraryName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ProjectDependencySpec.html</Path>
<Anchor>getLibraryName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/DependentSourceSet.html</Path>
<Anchor>getLibs--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getLibs--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getLibs--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getLibs--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>getLibsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getLibsDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>getLibsDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLicense()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getLicense--</Anchor></Token>
<Token><TokenIdentifier><Name>getLifecycle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>getLifecycle--</Anchor></Token>
<Token><TokenIdentifier><Name>getLifecycleLogLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>getLifecycleLogLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLifecycleTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/plugins/VisualStudioPlugin.html</Path>
<Anchor>getLifecycleTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLifecycleTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/plugins/XcodePlugin.html</Path>
<Anchor>getLifecycleTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLifecycleTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>getLifecycleTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLifecycleTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
<Anchor>getLifecycleTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLifecycleTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
<Anchor>getLifecycleTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getLimits()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>getLimits--</Anchor></Token>
<Token><TokenIdentifier><Name>getLineSeparator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>getLineSeparator--</Anchor></Token>
<Token><TokenIdentifier><Name>getLink()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.TasksCollection.html</Path>
<Anchor>getLink--</Anchor></Token>
<Token><TokenIdentifier><Name>getLink()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.TasksCollection.html</Path>
<Anchor>getLink--</Anchor></Token>
<Token><TokenIdentifier><Name>getLink()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.TasksCollection.html</Path>
<Anchor>getLink--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
<Anchor>getLinkage--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftLibrary.html</Path>
<Anchor>getLinkage--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryRequirement.html</Path>
<Anchor>getLinkage--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkedFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getLinkedFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkedResources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getLinkedResources--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkedResources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getLinkedResources--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkedResources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/HierarchicalEclipseProject.html</Path>
<Anchor>getLinkedResources--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkElements()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithLinkUsage.html</Path>
<Anchor>getLinkElements--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinker()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getLinker--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinker()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
<Anchor>getLinker--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinker()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/SwiftcPlatformToolChain.html</Path>
<Anchor>getLinker--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinker()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCppPlatformToolChain.html</Path>
<Anchor>getLinker--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkerArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getLinkerArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithLinkFile.html</Path>
<Anchor>getLinkFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeDependencySet.html</Path>
<Anchor>getLinkFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryBinary.html</Path>
<Anchor>getLinkFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>getLinkLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithExecutable.html</Path>
<Anchor>getLinkLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithSharedLibrary.html</Path>
<Anchor>getLinkLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getLinkLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getLinks--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getLinks--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinksOffline()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getLinksOffline--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithExecutable.html</Path>
<Anchor>getLinkTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithSharedLibrary.html</Path>
<Anchor>getLinkTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBinary.html</Path>
<Anchor>getLinkTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getLinkTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBundle.html</Path>
<Anchor>getLinkTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getListenerManager()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getListenerManager--</Anchor></Token>
<Token><TokenIdentifier><Name>getListeners()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getListeners--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocal()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>getLocal--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocal()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>getLocal--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocale()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getLocale--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocale()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getLocale--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocalState()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getLocalState--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceException.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/ConfigFile.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioSolution.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/XcodeWorkspace.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/IdeWorkspace.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseLinkedResource.html</Path>
<Anchor>getLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocationUri()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>getLocationUri--</Anchor></Token>
<Token><TokenIdentifier><Name>getLocationUri()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseLinkedResource.html</Path>
<Anchor>getLocationUri--</Anchor></Token>
<Token><TokenIdentifier><Name>getLockedDependenciesToUpdate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getLockedDependenciesToUpdate--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogger(Class)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logging.html</Path>
<Anchor>getLogger-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getLogger(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logging.html</Path>
<Anchor>getLogger-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getLogger()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getLogger--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogger()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>getLogger--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogger()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getLogger--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getLogging--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>getLogging--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getLogging--</Anchor></Token>
<Token><TokenIdentifier><Name>getLoggingLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>getLoggingLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLoggingManagerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html</Path>
<Anchor>getLoggingManagerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getLoggingPhases()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>getLoggingPhases--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>getLogLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getLogLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getLogLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getM2Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyPatternRepositoryLayout.html</Path>
<Anchor>getM2Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>getMacros()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getMacros--</Anchor></Token>
<Token><TokenIdentifier><Name>getMacros()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getMacros--</Anchor></Token>
<Token><TokenIdentifier><Name>getMacros()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getMacros--</Anchor></Token>
<Token><TokenIdentifier><Name>getMacros()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PreprocessingTool.html</Path>
<Anchor>getMacros--</Anchor></Token>
<Token><TokenIdentifier><Name>getMain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getMain--</Anchor></Token>
<Token><TokenIdentifier><Name>getMain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>getMain--</Anchor></Token>
<Token><TokenIdentifier><Name>getMainArtifact()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getMainArtifact--</Anchor></Token>
<Token><TokenIdentifier><Name>getMainClassName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>getMainClassName--</Anchor></Token>
<Token><TokenIdentifier><Name>getMainClassName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getMainClassName--</Anchor></Token>
<Token><TokenIdentifier><Name>getMainClassName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getMainClassName--</Anchor></Token>
<Token><TokenIdentifier><Name>getMainSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getMainSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getMajorVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>getMajorVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getManifest()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>getManifest--</Anchor></Token>
<Token><TokenIdentifier><Name>getManifestContentCharset()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>getManifestContentCharset--</Anchor></Token>
<Token><TokenIdentifier><Name>getManifestFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/tasks/GenerateSwiftPackageManagerManifest.html</Path>
<Anchor>getManifestFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getMapping(Collection&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>getMapping-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>getMappings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>getMappings--</Anchor></Token>
<Token><TokenIdentifier><Name>getMatcher()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>getMatcher--</Anchor></Token>
<Token><TokenIdentifier><Name>getMatchingStrategy(Attribute&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributesSchema.html</Path>
<Anchor>getMatchingStrategy-org.gradle.api.attributes.Attribute-</Anchor></Token>
<Token><TokenIdentifier><Name>getMavenPomDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>getMavenPomDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getMavenRepositoryLocator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html</Path>
<Anchor>getMavenRepositoryLocator--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxErrors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getMaxErrors--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxErrors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>getMaxErrors--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxGranularity()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getMaxGranularity--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>getMaxHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getMaxHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getMaxHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getMaxHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getMaxHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaximum()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>getMaximum--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxMemory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getMaxMemory--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxParallelForks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getMaxParallelForks--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxPriority1Violations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getMaxPriority1Violations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxPriority1Violations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>getMaxPriority1Violations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxPriority2Violations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getMaxPriority2Violations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxPriority2Violations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>getMaxPriority2Violations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxPriority3Violations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getMaxPriority3Violations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxPriority3Violations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>getMaxPriority3Violations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxWarnings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getMaxWarnings--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxWarnings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>getMaxWarnings--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxWorkerCount()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/concurrent/ParallelismConfiguration.html</Path>
<Anchor>getMaxWorkerCount--</Anchor></Token>
<Token><TokenIdentifier><Name>getMaxWorkerCount()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getMaxWorkerCount--</Anchor></Token>
<Token><TokenIdentifier><Name>getMemberLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getMemberLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getMemberLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getMemberLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getMemoryInitialSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>getMemoryInitialSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMemoryMaximumSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>getMemoryMaximumSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMergeValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
<Anchor>getMergeValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getMessage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomRelocation.html</Path>
<Anchor>getMessage--</Anchor></Token>
<Token><TokenIdentifier><Name>getMessage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputEvent.html</Path>
<Anchor>getMessage--</Anchor></Token>
<Token><TokenIdentifier><Name>getMessage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/Failure.html</Path>
<Anchor>getMessage--</Anchor></Token>
<Token><TokenIdentifier><Name>getMetadataCharset()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>getMetadataCharset--</Anchor></Token>
<Token><TokenIdentifier><Name>getMetadataCharset()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>getMetadataCharset--</Anchor></Token>
<Token><TokenIdentifier><Name>getMetaInf()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>getMetaInf--</Anchor></Token>
<Token><TokenIdentifier><Name>getMethodName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestOperationDescriptor.html</Path>
<Anchor>getMethodName--</Anchor></Token>
<Token><TokenIdentifier><Name>getMinGranularity()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getMinGranularity--</Anchor></Token>
<Token><TokenIdentifier><Name>getMinHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getMinHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMinHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getMinHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMinHeapSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getMinHeapSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getMinimum()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>getMinimum--</Anchor></Token>
<Token><TokenIdentifier><Name>getMinusConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getMinusConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMinusConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getMinusConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>getMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getModel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getModel--</Anchor></Token>
<Token><TokenIdentifier><Name>getModel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
<Anchor>getModel--</Anchor></Token>
<Token><TokenIdentifier><Name>getModel(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>getModel-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getModel(Model, Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>getModel-org.gradle.tooling.model.Model-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getModel(Class&lt;T&gt;, Class&lt;P&gt;, Action&lt;? super P&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>getModel-java.lang.Class-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>getModel(Model, Class&lt;T&gt;, Class&lt;P&gt;, Action&lt;? super P&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildController.html</Path>
<Anchor>getModel-org.gradle.tooling.model.Model-java.lang.Class-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>getModel(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>getModel-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getModel(Class&lt;T&gt;, ResultHandler&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>getModel-java.lang.Class-org.gradle.tooling.ResultHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>getModelRegistry()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/ComponentReport.html</Path>
<Anchor>getModelRegistry--</Anchor></Token>
<Token><TokenIdentifier><Name>getModelRegistry()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>getModelRegistry--</Anchor></Token>
<Token><TokenIdentifier><Name>getModelRegistry()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>getModelRegistry--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentIdentifier.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentSelector.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRule.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionIdentifier.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyDependency.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginRequest.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>getModule--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getModuleArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getModuleFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getModuleFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleGroup()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getModuleGroup--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getModuleName--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getModuleName--</Anchor></Token>
<Token><TokenIdentifier><Name>getModulePaths()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>getModulePaths--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleRegistry()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getModuleRegistry--</Anchor></Token>
<Token><TokenIdentifier><Name>getModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>getModules--</Anchor></Token>
<Token><TokenIdentifier><Name>getModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getModules--</Anchor></Token>
<Token><TokenIdentifier><Name>getModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getModules--</Anchor></Token>
<Token><TokenIdentifier><Name>getModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getModules--</Anchor></Token>
<Token><TokenIdentifier><Name>getModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaProject.html</Path>
<Anchor>getModules--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleTypeMappings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getModuleTypeMappings--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
<Anchor>getModuleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getModuleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedComponentResult.html</Path>
<Anchor>getModuleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>getModuleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>getModuleVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getModuleVersionIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactIdentifier.html</Path>
<Anchor>getModuleVersionIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getMustRunAfter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getMustRunAfter--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactIdentifier.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/BuildIdentifier.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleIdentifier.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionIdentifier.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionSelector.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifact.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/ArtifactRepository.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/Capability.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/Distribution.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/IncludedBuild.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Named.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/AppliedPlugin.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionsSchema.ExtensionSchema.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/TargetJdk.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorAuthor.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorLicense.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomLicense.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingList.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomOrganization.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestDescriptor.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioProject.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioSolution.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/JavaToolChain.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelElement.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Linkage.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/Architecture.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpec.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Platform.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/VariantComponent.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginId.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatory.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/Signatory.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/Product.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationDescriptor.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/ClasspathAttribute.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseBuildCommand.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseLinkedResource.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Element.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BasicGradleProject.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleModuleVersion.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Task.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/TaskSelector.html</Path>
<Anchor>getName--</Anchor></Token>
<Token><TokenIdentifier><Name>getNamer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getNamer--</Anchor></Token>
<Token><TokenIdentifier><Name>getNamer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
<Anchor>getNamer--</Anchor></Token>
<Token><TokenIdentifier><Name>getNames()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getNames--</Anchor></Token>
<Token><TokenIdentifier><Name>getNames()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
<Anchor>getNames--</Anchor></Token>
<Token><TokenIdentifier><Name>getNamespace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/AppliedPlugin.html</Path>
<Anchor>getNamespace--</Anchor></Token>
<Token><TokenIdentifier><Name>getNamespace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginId.html</Path>
<Anchor>getNamespace--</Anchor></Token>
<Token><TokenIdentifier><Name>getNamingScheme()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getNamingScheme--</Anchor></Token>
<Token><TokenIdentifier><Name>getNativeLibraryLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>getNativeLibraryLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getNatures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getNatures--</Anchor></Token>
<Token><TokenIdentifier><Name>getNatures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getNatures--</Anchor></Token>
<Token><TokenIdentifier><Name>getNoMatchingTestErrorReasons()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getNoMatchingTestErrorReasons--</Anchor></Token>
<Token><TokenIdentifier><Name>getNoMatchingTestErrorReasons()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getNoMatchingTestErrorReasons--</Anchor></Token>
<Token><TokenIdentifier><Name>getNoQualifiers()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getNoQualifiers--</Anchor></Token>
<Token><TokenIdentifier><Name>getNormalization()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getNormalization--</Anchor></Token>
<Token><TokenIdentifier><Name>getNoSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>getNoSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjcCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getObjcCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjcCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
<Anchor>getObjcCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjcppCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getObjcppCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjcppCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
<Anchor>getObjcppCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>getObjectFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFileDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>getObjectFileDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFileDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getObjectFileDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjectFileDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getObjectFileDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getObjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithObjectFiles.html</Path>
<Anchor>getObjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getObjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/UnexportMainSymbol.html</Path>
<Anchor>getObjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getOmitVisitors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getOmitVisitors--</Anchor></Token>
<Token><TokenIdentifier><Name>getOmitVisitors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getOmitVisitors--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperatingSystem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/NativePlatform.html</Path>
<Anchor>getOperatingSystem--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperatingSystemFamily()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppPlatform.html</Path>
<Anchor>getOperatingSystemFamily--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperatingSystemFamily()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftPlatform.html</Path>
<Anchor>getOperatingSystemFamily--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperatingSystems()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getOperatingSystems--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperatingSystems()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>getOperatingSystems--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperationLoggerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>getOperationLoggerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperationLoggerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getOperationLoggerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperationLoggerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getOperationLoggerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperationLoggerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getOperationLoggerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOperationLoggerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>getOperationLoggerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptimizationOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>getOptimizationOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptimized()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getOptimized--</Anchor></Token>
<Token><TokenIdentifier><Name>getOption()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOptionFileOption.html</Path>
<Anchor>getOption--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptionFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getOptionFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptionFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getOptionFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>getOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>getOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>getOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptionsFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getOptionsFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptsEnvironmentVar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getOptsEnvironmentVar--</Anchor></Token>
<Token><TokenIdentifier><Name>getOptsEnvironmentVar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getOptsEnvironmentVar--</Anchor></Token>
<Token><TokenIdentifier><Name>getOrElse(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Provider.html</Path>
<Anchor>getOrElse-T-</Anchor></Token>
<Token><TokenIdentifier><Name>getOrganisation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyDependency.html</Path>
<Anchor>getOrganisation--</Anchor></Token>
<Token><TokenIdentifier><Name>getOrganisation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>getOrganisation--</Anchor></Token>
<Token><TokenIdentifier><Name>getOrganization()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getOrganization--</Anchor></Token>
<Token><TokenIdentifier><Name>getOrganization()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getOrganization--</Anchor></Token>
<Token><TokenIdentifier><Name>getOrganizationUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getOrganizationUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getOrganizationUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getOrganizationUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getOrNull()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Provider.html</Path>
<Anchor>getOrNull--</Anchor></Token>
<Token><TokenIdentifier><Name>getOtherArchives()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingList.html</Path>
<Anchor>getOtherArchives--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutcome()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildTask.html</Path>
<Anchor>getOutcome--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutgoing()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getOutgoing--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>getOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildResult.html</Path>
<Anchor>getOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseSourceDirectory.html</Path>
<Anchor>getOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>getOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
<Anchor>getOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaCompilerOutput.html</Path>
<Anchor>getOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/ArtifactTransform.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/UnexportMainSymbol.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>getOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateSolutionFileTask.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/ApiJar.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/StripSymbols.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getOutputFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getOutputLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getOutputLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputLocation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getOutputLocation--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getOutputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentWithOutputs.html</Path>
<Anchor>getOutputs--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/DirectoryReport.html</Path>
<Anchor>getOutputType--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
<Anchor>getOutputType--</Anchor></Token>
<Token><TokenIdentifier><Name>getOutputType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/SingleFileReport.html</Path>
<Anchor>getOutputType--</Anchor></Token>
<Token><TokenIdentifier><Name>getOverview()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getOverview--</Anchor></Token>
<Token><TokenIdentifier><Name>getOverview()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getOverview--</Anchor></Token>
<Token><TokenIdentifier><Name>getOverviewText()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getOverviewText--</Anchor></Token>
<Token><TokenIdentifier><Name>getPackage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/tasks/GenerateSwiftPackageManagerManifest.html</Path>
<Anchor>getPackage--</Anchor></Token>
<Token><TokenIdentifier><Name>getPackagelistLoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOfflineLink.html</Path>
<Anchor>getPackagelistLoc--</Anchor></Token>
<Token><TokenIdentifier><Name>getPackages()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.Link.html</Path>
<Anchor>getPackages--</Anchor></Token>
<Token><TokenIdentifier><Name>getPackaging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getPackaging--</Anchor></Token>
<Token><TokenIdentifier><Name>getPackaging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getPackaging--</Anchor></Token>
<Token><TokenIdentifier><Name>getPackaging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>getPackaging--</Anchor></Token>
<Token><TokenIdentifier><Name>getParallel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getParallel--</Anchor></Token>
<Token><TokenIdentifier><Name>getParameterizedTypeDefinition()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>getParameterizedTypeDefinition--</Anchor></Token>
<Token><TokenIdentifier><Name>getParameterType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ParameterizedToolingModelBuilder.html</Path>
<Anchor>getParameterType--</Anchor></Token>
<Token><TokenIdentifier><Name>getParams()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ActionConfiguration.html</Path>
<Anchor>getParams--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestDescriptor.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationDescriptor.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/HierarchicalEclipseProject.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BasicGradleProject.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/HierarchicalElement.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getParent--</Anchor></Token>
<Token><TokenIdentifier><Name>getParentArtifacts(ResolvedDependency)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getParentArtifacts-org.gradle.api.artifacts.ResolvedDependency-</Anchor></Token>
<Token><TokenIdentifier><Name>getParentName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/LanguageSourceSet.html</Path>
<Anchor>getParentName--</Anchor></Token>
<Token><TokenIdentifier><Name>getParents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
<Anchor>getParents--</Anchor></Token>
<Token><TokenIdentifier><Name>getPassword()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/PasswordCredentials.html</Path>
<Anchor>getPassword--</Anchor></Token>
<Token><TokenIdentifier><Name>getPassword()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/PasswordCredentials.html</Path>
<Anchor>getPassword--</Anchor></Token>
<Token><TokenIdentifier><Name>getPassword()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>getPassword--</Anchor></Token>
<Token><TokenIdentifier><Name>getPassword()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCacheCredentials.html</Path>
<Anchor>getPassword--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/LocalJava.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCompatibleToolChain.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/Swiftc.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarModule.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/FileReference.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildTask.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseClasspathContainer.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseOutputLocation.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProjectDependency.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseSourceDirectory.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BasicGradleProject.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Task.html</Path>
<Anchor>getPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPathFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getPathFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getPathFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getPathFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getPaths()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>getPaths--</Anchor></Token>
<Token><TokenIdentifier><Name>getPathString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>getPathString--</Anchor></Token>
<Token><TokenIdentifier><Name>getPathVariables()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getPathVariables--</Anchor></Token>
<Token><TokenIdentifier><Name>getPathVariables()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getPathVariables--</Anchor></Token>
<Token><TokenIdentifier><Name>getPathVariables()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getPathVariables--</Anchor></Token>
<Token><TokenIdentifier><Name>getPattern()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>getPattern--</Anchor></Token>
<Token><TokenIdentifier><Name>getPattern()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/AccessRule.html</Path>
<Anchor>getPattern--</Anchor></Token>
<Token><TokenIdentifier><Name>getPatterns()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryTree.html</Path>
<Anchor>getPatterns--</Anchor></Token>
<Token><TokenIdentifier><Name>getPatternSetFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>getPatternSetFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/tasks/PlatformJavaCompile.html</Path>
<Anchor>getPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/PlatformScalaCompile.html</Path>
<Anchor>getPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/NativePlatformToolChain.html</Path>
<Anchor>getPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlay()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>getPlay--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlayPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>getPlayPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlayRun()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>getPlayRun--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlayTest()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>getPlayTest--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlayVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/platform/PlayPlatform.html</Path>
<Anchor>getPlayVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlugin(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/Convention.html</Path>
<Anchor>getPlugin-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getPlugin(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>getPlugin-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getPlugin(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>getPlugin-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>getPluginClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getPluginClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPluginClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>getPluginClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPluginClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>getPluginClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPluginManagement()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getPluginManagement--</Anchor></Token>
<Token><TokenIdentifier><Name>getPluginManager()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginAware.html</Path>
<Anchor>getPluginManager--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlugins()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/Convention.html</Path>
<Anchor>getPlugins--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlugins()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginAware.html</Path>
<Anchor>getPlugins--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlugins()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>getPlugins--</Anchor></Token>
<Token><TokenIdentifier><Name>getPluginSourceSet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>getPluginSourceSet--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlusConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getPlusConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getPlusConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getPlusConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getPmdClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getPmdClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getPom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>getPom--</Anchor></Token>
<Token><TokenIdentifier><Name>getPom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>getPom--</Anchor></Token>
<Token><TokenIdentifier><Name>getPom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>getPom--</Anchor></Token>
<Token><TokenIdentifier><Name>getPomArtifact()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getPomArtifact--</Anchor></Token>
<Token><TokenIdentifier><Name>getPort()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/HttpFileServer.html</Path>
<Anchor>getPort--</Anchor></Token>
<Token><TokenIdentifier><Name>getPort()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServer.html</Path>
<Anchor>getPort--</Anchor></Token>
<Token><TokenIdentifier><Name>getPort()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getPort--</Anchor></Token>
<Token><TokenIdentifier><Name>getPost()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingList.html</Path>
<Anchor>getPost--</Anchor></Token>
<Token><TokenIdentifier><Name>getPreCompiledHeader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/DependentSourceSet.html</Path>
<Anchor>getPreCompiledHeader--</Anchor></Token>
<Token><TokenIdentifier><Name>getPreCompiledHeader()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeSourceCompileTask.html</Path>
<Anchor>getPreCompiledHeader--</Anchor></Token>
<Token><TokenIdentifier><Name>getPreferredVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VersionConstraint.html</Path>
<Anchor>getPreferredVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getPrefixHeaderFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/PrefixHeaderFileGenerateTask.html</Path>
<Anchor>getPrefixHeaderFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getPreserve()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>getPreserve--</Anchor></Token>
<Token><TokenIdentifier><Name>getPreserveOrder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getPreserveOrder--</Anchor></Token>
<Token><TokenIdentifier><Name>getPriority()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMapping.html</Path>
<Anchor>getPriority--</Anchor></Token>
<Token><TokenIdentifier><Name>getPrivateHeaderDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getPrivateHeaderDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getPrivateHeaders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getPrivateHeaders--</Anchor></Token>
<Token><TokenIdentifier><Name>getProblem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/UnresolvedDependency.html</Path>
<Anchor>getProblem--</Anchor></Token>
<Token><TokenIdentifier><Name>getProcessBuilderFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getProcessBuilderFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getProcessResourcesTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getProcessResourcesTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getProducerValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityCheckDetails.html</Path>
<Anchor>getProducerValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getProducts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/Package.html</Path>
<Anchor>getProducts--</Anchor></Token>
<Token><TokenIdentifier><Name>getProgress()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/StatusEvent.html</Path>
<Anchor>getProgress--</Anchor></Token>
<Token><TokenIdentifier><Name>getProgressLoggerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>getProgressLoggerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getProgressLoggerFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getProgressLoggerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPluginConvention.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/XcodeExtension.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleTask.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
<Anchor>getProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectCacheDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getProjectCacheDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/HierarchicalEclipseProject.html</Path>
<Anchor>getProjectDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDependencyPublicationResolver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
<Anchor>getProjectDependencyPublicationResolver--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/IncludedBuild.html</Path>
<Anchor>getProjectDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>getProjectDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>getProjectDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getProjectDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getProjectDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getProjectDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>getProjectDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>getProjectDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/HierarchicalEclipseProject.html</Path>
<Anchor>getProjectDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BasicGradleProject.html</Path>
<Anchor>getProjectDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getProjectDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioProject.html</Path>
<Anchor>getProjectFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BasicGradleProject.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BuildInvocations.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradlePublication.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/ProjectPublications.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/HasGradleProject.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Launchable.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectIdentifier()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ProjectModel.html</Path>
<Anchor>getProjectIdentifier--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectJdkName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>getProjectJdkName--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectLayoutRegistry()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>getProjectLayoutRegistry--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getProjectLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>getProjectLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectModel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseProject.html</Path>
<Anchor>getProjectModel--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ProjectComponentIdentifier.html</Path>
<Anchor>getProjectName--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectNatures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProject.html</Path>
<Anchor>getProjectNatures--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryBinaryIdentifier.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryComponentSelector.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ProjectComponentIdentifier.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ProjectComponentSelector.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryRequirement.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ComponentSpec.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/LibraryBinaryDependencySpec.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ProjectDependencySpec.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/TaskExecutionRequest.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ProjectIdentifier.html</Path>
<Anchor>getProjectPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getProjectProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectReportDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPluginConvention.html</Path>
<Anchor>getProjectReportDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectReportDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPluginConvention.html</Path>
<Anchor>getProjectReportDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPluginConvention.html</Path>
<Anchor>getProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>getProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>getProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioExtension.html</Path>
<Anchor>getProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradleBuild.html</Path>
<Anchor>getProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectScopedName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getProjectScopedName--</Anchor></Token>
<Token><TokenIdentifier><Name>getProjectTaskLister()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
<Anchor>getProjectTaskLister--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getPropertiesFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getPropertiesFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getPropertyListTransformer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertyListGeneratorTask.html</Path>
<Anchor>getPropertyListTransformer--</Anchor></Token>
<Token><TokenIdentifier><Name>getProviders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getProviders--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublication()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
<Anchor>getPublication--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublication()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html</Path>
<Anchor>getPublication--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublication()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
<Anchor>getPublication--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicationInternal()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html</Path>
<Anchor>getPublicationInternal--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublications()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublishingExtension.html</Path>
<Anchor>getPublications--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublications()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/GenerateModuleMetadata.html</Path>
<Anchor>getPublications--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublications()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/ProjectPublications.html</Path>
<Anchor>getPublications--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicationServices()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>getPublicationServices--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicHeaderDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
<Anchor>getPublicHeaderDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicHeaderFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
<Anchor>getPublicHeaderFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicHeaders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
<Anchor>getPublicHeaders--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionsSchema.ExtensionSchema.html</Path>
<Anchor>getPublicType--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/HasPublicType.html</Path>
<Anchor>getPublicType--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublicType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getPublicType--</Anchor></Token>
<Token><TokenIdentifier><Name>getPublishedCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/IncrementalCompileOptions.html</Path>
<Anchor>getPublishedCode--</Anchor></Token>
<Token><TokenIdentifier><Name>getQualifiedPropertyName(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>getQualifiedPropertyName-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getQuiet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>getQuiet--</Anchor></Token>
<Token><TokenIdentifier><Name>getRcCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getRcCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getRcCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCppPlatformToolChain.html</Path>
<Anchor>getRcCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getReason()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>getReason--</Anchor></Token>
<Token><TokenIdentifier><Name>getReason()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraint.html</Path>
<Anchor>getReason--</Anchor></Token>
<Token><TokenIdentifier><Name>getReason()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>getReason--</Anchor></Token>
<Token><TokenIdentifier><Name>getReferencedProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getReferencedProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getReferencedProjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getReferencedProjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getReferences()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>getReferences--</Anchor></Token>
<Token><TokenIdentifier><Name>getRejectedVersions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VersionConstraint.html</Path>
<Anchor>getRejectedVersions--</Anchor></Token>
<Token><TokenIdentifier><Name>getRelativeClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getRelativeClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRelativePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>getRelativePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRelativePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>getRelativePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRelativeSourcePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>getRelativeSourcePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRelocatedObjects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/UnexportMainSymbol.html</Path>
<Anchor>getRelocatedObjects--</Anchor></Token>
<Token><TokenIdentifier><Name>getRelPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>getRelPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRemote()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>getRemote--</Anchor></Token>
<Token><TokenIdentifier><Name>getRemoveUnusedEntriesAfterDays()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
<Anchor>getRemoveUnusedEntriesAfterDays--</Anchor></Token>
<Token><TokenIdentifier><Name>getRenderer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>getRenderer--</Anchor></Token>
<Token><TokenIdentifier><Name>getRenderer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>getRenderer--</Anchor></Token>
<Token><TokenIdentifier><Name>getRenderer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/ProjectReportTask.html</Path>
<Anchor>getRenderer--</Anchor></Token>
<Token><TokenIdentifier><Name>getRenderer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/PropertyReportTask.html</Path>
<Anchor>getRenderer--</Anchor></Token>
<Token><TokenIdentifier><Name>getRenderer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
<Anchor>getRenderer--</Anchor></Token>
<Token><TokenIdentifier><Name>getReplacedBy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentModuleMetadata.html</Path>
<Anchor>getReplacedBy--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepoName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VersionControlSpec.html</Path>
<Anchor>getRepoName--</Anchor></Token>
<Token><TokenIdentifier><Name>getReportDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>getReportDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getReportFormat()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>getReportFormat--</Anchor></Token>
<Token><TokenIdentifier><Name>getReportLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getReportLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getReportLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getReportLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Reporting.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReport.html</Path>
<Anchor>getReports--</Anchor></Token>
<Token><TokenIdentifier><Name>getReportsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>getReportsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getReportsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>getReportsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepositories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>getRepositories--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepositories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getRepositories--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepositories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublishingExtension.html</Path>
<Anchor>getRepositories--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepositories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>getRepositories--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepositories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginManagementSpec.html</Path>
<Anchor>getRepositories--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepository()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
<Anchor>getRepository--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepository()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
<Anchor>getRepository--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepository()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenRepository.html</Path>
<Anchor>getRepository--</Anchor></Token>
<Token><TokenIdentifier><Name>getRepositoryTransportFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenRepository.html</Path>
<Anchor>getRepositoryTransportFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getRequested()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolveDetails.html</Path>
<Anchor>getRequested--</Anchor></Token>
<Token><TokenIdentifier><Name>getRequested()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitution.html</Path>
<Anchor>getRequested--</Anchor></Token>
<Token><TokenIdentifier><Name>getRequested()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/DependencyResult.html</Path>
<Anchor>getRequested--</Anchor></Token>
<Token><TokenIdentifier><Name>getRequested()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginResolveDetails.html</Path>
<Anchor>getRequested--</Anchor></Token>
<Token><TokenIdentifier><Name>getRequested()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VcsMapping.html</Path>
<Anchor>getRequested--</Anchor></Token>
<Token><TokenIdentifier><Name>getResolutionResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
<Anchor>getResolutionResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getResolutionStrategy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getResolutionStrategy--</Anchor></Token>
<Token><TokenIdentifier><Name>getResolutionStrategy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginManagementSpec.html</Path>
<Anchor>getResolutionStrategy--</Anchor></Token>
<Token><TokenIdentifier><Name>getResolve()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>getResolve--</Anchor></Token>
<Token><TokenIdentifier><Name>getResolvedArtifacts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>getResolvedArtifacts--</Anchor></Token>
<Token><TokenIdentifier><Name>getResolvedComponents()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ArtifactResolutionResult.html</Path>
<Anchor>getResolvedComponents--</Anchor></Token>
<Token><TokenIdentifier><Name>getResolvedConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getResolvedConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getResource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>getResource--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getResourceDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/JvmClasses.html</Path>
<Anchor>getResourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getResourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceFilters()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>getResourceFilters--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceFilters()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>getResourceFilters--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceFolders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getResourceFolders--</Anchor></Token>
<Token><TokenIdentifier><Name>getResources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getResources--</Anchor></Token>
<Token><TokenIdentifier><Name>getResources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>getResources--</Anchor></Token>
<Token><TokenIdentifier><Name>getResources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getResources--</Anchor></Token>
<Token><TokenIdentifier><Name>getResources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getResources--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourcesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>getResourcesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourcesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>getResourcesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceUrl(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/HttpFileServer.html</Path>
<Anchor>getResourceUrl-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getResourceUrl(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServer.html</Path>
<Anchor>getResourceUrl-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataSupplierDetails.html</Path>
<Anchor>getResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>getResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/FinishEvent.html</Path>
<Anchor>getResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskFinishEvent.html</Path>
<Anchor>getResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getResult()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestFinishEvent.html</Path>
<Anchor>getResult--</Anchor></Token>
<Token><TokenIdentifier><Name>getResultType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getResultType--</Anchor></Token>
<Token><TokenIdentifier><Name>getRevision()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyDependency.html</Path>
<Anchor>getRevision--</Anchor></Token>
<Token><TokenIdentifier><Name>getRevision()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>getRevision--</Anchor></Token>
<Token><TokenIdentifier><Name>getRhinoClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>getRhinoClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRhinoClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>getRhinoClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRhinoOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>getRhinoOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getRoleName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarSecurityRole.html</Path>
<Anchor>getRoleName--</Anchor></Token>
<Token><TokenIdentifier><Name>getRoles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getRoles--</Anchor></Token>
<Token><TokenIdentifier><Name>getRoles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getRoles--</Anchor></Token>
<Token><TokenIdentifier><Name>getRoot()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
<Anchor>getRoot--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getRootConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getRootDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getRootDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/TaskExecutionRequest.html</Path>
<Anchor>getRootDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/BuildIdentifier.html</Path>
<Anchor>getRootDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VersionControlSpec.html</Path>
<Anchor>getRootDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getRootDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getRootProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getRootProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getRootProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradleBuild.html</Path>
<Anchor>getRootProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getRootSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Copy.html</Path>
<Anchor>getRootSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getRootSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>getRootSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getRulePriority()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getRulePriority--</Anchor></Token>
<Token><TokenIdentifier><Name>getRulePriority()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>getRulePriority--</Anchor></Token>
<Token><TokenIdentifier><Name>getRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRuleContainer.html</Path>
<Anchor>getRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>getRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
<Anchor>getRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRulesContainer.html</Path>
<Anchor>getRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuleSetConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getRuleSetConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuleSetConfig()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>getRuleSetConfig--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuleSetFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getRuleSetFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuleSetFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>getRuleSetFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuleSets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getRuleSets--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuleSets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>getRuleSets--</Anchor></Token>
<Token><TokenIdentifier><Name>getRun()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteBinarySpec.JvmTestSuiteTasks.html</Path>
<Anchor>getRun--</Anchor></Token>
<Token><TokenIdentifier><Name>getRun()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteTaskCollection.html</Path>
<Anchor>getRun--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>getRunScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunScriptFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getRunScriptFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunScriptFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBinary.html</Path>
<Anchor>getRunScriptFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunScriptFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>getRunScriptFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunScriptFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>getRunScriptFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/CppTestExecutable.html</Path>
<Anchor>getRunTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/TestComponent.html</Path>
<Anchor>getRunTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getRunTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBinary.html</Path>
<Anchor>getRunTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getRuntimeClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteBinarySpec.html</Path>
<Anchor>getRuntimeClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/normalization/InputNormalizationHandler.html</Path>
<Anchor>getRuntimeClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeClasspathConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getRuntimeClasspathConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getRuntimeConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeElements()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithRuntimeUsage.html</Path>
<Anchor>getRuntimeElements--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeElementsConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getRuntimeElementsConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithRuntimeFile.html</Path>
<Anchor>getRuntimeFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeDependencySet.html</Path>
<Anchor>getRuntimeFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryBinary.html</Path>
<Anchor>getRuntimeFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>getRuntimeLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithInstallation.html</Path>
<Anchor>getRuntimeLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getRuntimeLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getRuntimeOnlyConfigurationName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getRuntimeOnlyConfigurationName--</Anchor></Token>
<Token><TokenIdentifier><Name>getScala()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaSourceSet.html</Path>
<Anchor>getScala--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>getScalaClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>getScalaClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaCompatibilityVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/ScalaPlatform.html</Path>
<Anchor>getScalaCompatibilityVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaCompileOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>getScalaCompileOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaCompileOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>getScalaCompileOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaDocOptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>getScalaDocOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/platform/PlayPlatform.html</Path>
<Anchor>getScalaPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getScalaPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaVersion(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaRuntime.html</Path>
<Anchor>getScalaVersion-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>getScalaVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/ScalaPlatform.html</Path>
<Anchor>getScalaVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getSchema()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionContainer.html</Path>
<Anchor>getSchema--</Anchor></Token>
<Token><TokenIdentifier><Name>getScope()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMapping.html</Path>
<Anchor>getScope--</Anchor></Token>
<Token><TokenIdentifier><Name>getScope()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Dependency.html</Path>
<Anchor>getScope--</Anchor></Token>
<Token><TokenIdentifier><Name>getScope()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>getScope--</Anchor></Token>
<Token><TokenIdentifier><Name>getScope()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>getScope--</Anchor></Token>
<Token><TokenIdentifier><Name>getScope()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaDependency.html</Path>
<Anchor>getScope--</Anchor></Token>
<Token><TokenIdentifier><Name>getScope()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaDependencyScope.html</Path>
<Anchor>getScope--</Anchor></Token>
<Token><TokenIdentifier><Name>getScopeMappings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getScopeMappings--</Anchor></Token>
<Token><TokenIdentifier><Name>getScopes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getScopes--</Anchor></Token>
<Token><TokenIdentifier><Name>getScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>getScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getScriptArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>getScriptArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getScriptFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>getScriptFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getScriptRelPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
<Anchor>getScriptRelPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getSecretKey()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/AwsCredentials.html</Path>
<Anchor>getSecretKey--</Anchor></Token>
<Token><TokenIdentifier><Name>getSection()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
<Anchor>getSection--</Anchor></Token>
<Token><TokenIdentifier><Name>getSections()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>getSections--</Anchor></Token>
<Token><TokenIdentifier><Name>getSecurityRoles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getSecurityRoles--</Anchor></Token>
<Token><TokenIdentifier><Name>getSegments()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>getSegments--</Anchor></Token>
<Token><TokenIdentifier><Name>getSelected()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedDependencyResult.html</Path>
<Anchor>getSelected--</Anchor></Token>
<Token><TokenIdentifier><Name>getSelectionReason()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedComponentResult.html</Path>
<Anchor>getSelectionReason--</Anchor></Token>
<Token><TokenIdentifier><Name>getSelector()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/UnresolvedDependency.html</Path>
<Anchor>getSelector--</Anchor></Token>
<Token><TokenIdentifier><Name>getSessionId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>getSessionId--</Anchor></Token>
<Token><TokenIdentifier><Name>getSessionToken()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/AwsCredentials.html</Path>
<Anchor>getSessionToken--</Anchor></Token>
<Token><TokenIdentifier><Name>getSettings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenResolver.html</Path>
<Anchor>getSettings--</Anchor></Token>
<Token><TokenIdentifier><Name>getSettings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getSettings--</Anchor></Token>
<Token><TokenIdentifier><Name>getSettingsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getSettingsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getSettingsFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getSettingsFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getShared()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibrarySpec.html</Path>
<Anchor>getShared--</Anchor></Token>
<Token><TokenIdentifier><Name>getSharedLibraryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinary.html</Path>
<Anchor>getSharedLibraryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSharedLibraryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.html</Path>
<Anchor>getSharedLibraryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSharedLibraryLinkFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinary.html</Path>
<Anchor>getSharedLibraryLinkFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSharedLibraryLinkFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.html</Path>
<Anchor>getSharedLibraryLinkFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getShouldRunAfter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getShouldRunAfter--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowAll()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>getShowAll--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowCauses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getShowCauses--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowExceptions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getShowExceptions--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowProgress()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getShowProgress--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowStacktrace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>getShowStacktrace--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowStacktrace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getShowStacktrace--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowStackTraces()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getShowStackTraces--</Anchor></Token>
<Token><TokenIdentifier><Name>getShowStandardStreams()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getShowStandardStreams--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>getSignatories--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getSignatory--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatory(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryProvider.html</Path>
<Anchor>getSignatory-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatory(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/SignatoryProvider.html</Path>
<Anchor>getSignatory-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getSignatory--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignatureSpec.html</Path>
<Anchor>getSignatory--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>getSignatory--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>getSignatory--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getSignatureFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>getSignatureFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getSignatures--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>getSignatures--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureSpec()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getSignatureSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getSignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getSignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignatureSpec.html</Path>
<Anchor>getSignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>getSignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>getSignatureType--</Anchor></Token>
<Token><TokenIdentifier><Name>getSignatureTypes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>getSignatureTypes--</Anchor></Token>
<Token><TokenIdentifier><Name>getSimpleName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>getSimpleName--</Anchor></Token>
<Token><TokenIdentifier><Name>getSingleEntryLibraries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getSingleEntryLibraries--</Anchor></Token>
<Token><TokenIdentifier><Name>getSingleFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>getSingleFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSingleSignature()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>getSingleSignature--</Anchor></Token>
<Token><TokenIdentifier><Name>getSingleSignature()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>getSingleSignature--</Anchor></Token>
<Token><TokenIdentifier><Name>getSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>getSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getSize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheEntryWriter.html</Path>
<Anchor>getSize--</Anchor></Token>
<Token><TokenIdentifier><Name>getSkipMessage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>getSkipMessage--</Anchor></Token>
<Token><TokenIdentifier><Name>getSkipMessage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskSkippedResult.html</Path>
<Anchor>getSkipMessage--</Anchor></Token>
<Token><TokenIdentifier><Name>getSkipped()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>getSkipped--</Anchor></Token>
<Token><TokenIdentifier><Name>getSkippedTestCount()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getSkippedTestCount--</Anchor></Token>
<Token><TokenIdentifier><Name>getSnapshotRepository()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
<Anchor>getSnapshotRepository--</Anchor></Token>
<Token><TokenIdentifier><Name>getSolution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateSolutionFileTask.html</Path>
<Anchor>getSolution--</Anchor></Token>
<Token><TokenIdentifier><Name>getSolution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioRootExtension.html</Path>
<Anchor>getSolution--</Anchor></Token>
<Token><TokenIdentifier><Name>getSolutionFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioSolution.html</Path>
<Anchor>getSolutionFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/LanguageSourceSet.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ExternalDependency.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaSingleEntryLibraryDependency.html</Path>
<Anchor>getSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceBuild()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>getSourceBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getSourceCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>getSourceCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getSourceCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>getSourceCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getSourceCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>getSourceCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceControl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getSourceControl--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/GenerateCUnitLauncher.html</Path>
<Anchor>getSourceDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>getSourceDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>getSourceDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/HierarchicalEclipseProject.html</Path>
<Anchor>getSourceDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getSourceDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>getSourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getSourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>getSourceFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>getSourceFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradleScript.html</Path>
<Anchor>getSourceFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>getSourceFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>getSourceFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>getSourceFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceFolders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getSourceFolders--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceLanguageLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseJavaSourceSettings.html</Path>
<Anchor>getSourceLanguageLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>getSourceName--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceNames()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>getSourceNames--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceNames()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getSourceNames--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourcePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>getSourcePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourcepath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>getSourcepath--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourcePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>getSourcePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourcePath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>getSourcePath--</Anchor></Token>
<Token><TokenIdentifier><Name>getSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getSources--</Anchor></Token>
<Token><TokenIdentifier><Name>getSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinarySpec.html</Path>
<Anchor>getSources--</Anchor></Token>
<Token><TokenIdentifier><Name>getSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/component/BaseComponentSpec.html</Path>
<Anchor>getSources--</Anchor></Token>
<Token><TokenIdentifier><Name>getSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/SourceComponentSpec.html</Path>
<Anchor>getSources--</Anchor></Token>
<Token><TokenIdentifier><Name>getSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>getSources--</Anchor></Token>
<Token><TokenIdentifier><Name>getSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>getSources--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceSets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getSourceSets--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceSets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>getSourceSets--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceSets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>getSourceSets--</Anchor></Token>
<Token><TokenIdentifier><Name>getSourceURI()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>getSourceURI--</Anchor></Token>
<Token><TokenIdentifier><Name>getSpecs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
<Anchor>getSpecs--</Anchor></Token>
<Token><TokenIdentifier><Name>getSrcDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>getSrcDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getSrcDirTrees()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>getSrcDirTrees--</Anchor></Token>
<Token><TokenIdentifier><Name>getStackTraceFilters()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>getStackTraceFilters--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardErrorCaptureLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingManager.html</Path>
<Anchor>getStandardErrorCaptureLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardInput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getStandardInput--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardInput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getStandardInput--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardInput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>getStandardInput--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getStandardOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getStandardOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>getStandardOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>getStandardOutputCaptureLevel()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingManager.html</Path>
<Anchor>getStandardOutputCaptureLevel--</Anchor></Token>
<Token><TokenIdentifier><Name>getStartParameter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>getStartParameter--</Anchor></Token>
<Token><TokenIdentifier><Name>getStartParameter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getStartParameter--</Anchor></Token>
<Token><TokenIdentifier><Name>getStartParameter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>getStartParameter--</Anchor></Token>
<Token><TokenIdentifier><Name>getStartTime()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getStartTime--</Anchor></Token>
<Token><TokenIdentifier><Name>getStartTime()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationResult.html</Path>
<Anchor>getStartTime--</Anchor></Token>
<Token><TokenIdentifier><Name>getState()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getState--</Anchor></Token>
<Token><TokenIdentifier><Name>getState()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getState--</Anchor></Token>
<Token><TokenIdentifier><Name>getState()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getState--</Anchor></Token>
<Token><TokenIdentifier><Name>getStatic()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibrarySpec.html</Path>
<Anchor>getStatic--</Anchor></Token>
<Token><TokenIdentifier><Name>getStaticLibArchiver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getStaticLibArchiver--</Anchor></Token>
<Token><TokenIdentifier><Name>getStaticLibArchiver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccPlatformToolChain.html</Path>
<Anchor>getStaticLibArchiver--</Anchor></Token>
<Token><TokenIdentifier><Name>getStaticLibArchiver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/SwiftcPlatformToolChain.html</Path>
<Anchor>getStaticLibArchiver--</Anchor></Token>
<Token><TokenIdentifier><Name>getStaticLibArchiver()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCppPlatformToolChain.html</Path>
<Anchor>getStaticLibArchiver--</Anchor></Token>
<Token><TokenIdentifier><Name>getStaticLibArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>getStaticLibArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getStaticLibraryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinary.html</Path>
<Anchor>getStaticLibraryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getStaticLibraryFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinarySpec.html</Path>
<Anchor>getStaticLibraryFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getStatus()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadata.html</Path>
<Anchor>getStatus--</Anchor></Token>
<Token><TokenIdentifier><Name>getStatus()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getStatus--</Anchor></Token>
<Token><TokenIdentifier><Name>getStatus()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>getStatus--</Anchor></Token>
<Token><TokenIdentifier><Name>getStatusScheme()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadata.html</Path>
<Anchor>getStatusScheme--</Anchor></Token>
<Token><TokenIdentifier><Name>getStripper()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/SwiftcPlatformToolChain.html</Path>
<Anchor>getStripper--</Anchor></Token>
<Token><TokenIdentifier><Name>getStubDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>getStubDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getStylesheet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/CustomizableHtmlReport.html</Path>
<Anchor>getStylesheet--</Anchor></Token>
<Token><TokenIdentifier><Name>getStyleSheet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getStyleSheet--</Anchor></Token>
<Token><TokenIdentifier><Name>getStylesheetFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getStylesheetFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSubprojects()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getSubprojects--</Anchor></Token>
<Token><TokenIdentifier><Name>getSubscribe()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingList.html</Path>
<Anchor>getSubscribe--</Anchor></Token>
<Token><TokenIdentifier><Name>getSuccessfulTestCount()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getSuccessfulTestCount--</Anchor></Token>
<Token><TokenIdentifier><Name>getSuiteName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getSuiteName--</Anchor></Token>
<Token><TokenIdentifier><Name>getSuiteName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestOperationDescriptor.html</Path>
<Anchor>getSuiteName--</Anchor></Token>
<Token><TokenIdentifier><Name>getSuites(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getSuites-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>getSuiteXmlBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getSuiteXmlBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>getSuiteXmlFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getSuiteXmlFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getSuiteXmlWriter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getSuiteXmlWriter--</Anchor></Token>
<Token><TokenIdentifier><Name>getSupportedExtensions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Compression.html</Path>
<Anchor>getSupportedExtensions--</Anchor></Token>
<Token><TokenIdentifier><Name>getSwiftCompiler()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/SwiftcPlatformToolChain.html</Path>
<Anchor>getSwiftCompiler--</Anchor></Token>
<Token><TokenIdentifier><Name>getSwiftSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getSwiftSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSwiftSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>getSwiftSource--</Anchor></Token>
<Token><TokenIdentifier><Name>getSwiftStdlibToolLocator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>getSwiftStdlibToolLocator--</Anchor></Token>
<Token><TokenIdentifier><Name>getSymbolExtractor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/SwiftcPlatformToolChain.html</Path>
<Anchor>getSymbolExtractor--</Anchor></Token>
<Token><TokenIdentifier><Name>getSymbolFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ExtractSymbols.html</Path>
<Anchor>getSymbolFile--</Anchor></Token>
<Token><TokenIdentifier><Name>getSymbolicName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getSymbolicName--</Anchor></Token>
<Token><TokenIdentifier><Name>getSystem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomCiManagement.html</Path>
<Anchor>getSystem--</Anchor></Token>
<Token><TokenIdentifier><Name>getSystem()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomIssueManagement.html</Path>
<Anchor>getSystem--</Anchor></Token>
<Token><TokenIdentifier><Name>getSystemIncludes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getSystemIncludes--</Anchor></Token>
<Token><TokenIdentifier><Name>getSystemProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getSystemProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getSystemProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getSystemProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getSystemProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>getSystemProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>getSystemPropertiesArgs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getSystemPropertiesArgs--</Anchor></Token>
<Token><TokenIdentifier><Name>getTag()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomScm.html</Path>
<Anchor>getTag--</Anchor></Token>
<Token><TokenIdentifier><Name>getTagletPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getTagletPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaglets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getTaglets--</Anchor></Token>
<Token><TokenIdentifier><Name>getTags()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getTags--</Anchor></Token>
<Token><TokenIdentifier><Name>getTarget()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolveDetails.html</Path>
<Anchor>getTarget--</Anchor></Token>
<Token><TokenIdentifier><Name>getTarget()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>getTarget--</Anchor></Token>
<Token><TokenIdentifier><Name>getTarget()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginResolveDetails.html</Path>
<Anchor>getTarget--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetBuild()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>getTargetBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetBytecodeVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getTargetBytecodeVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetBytecodeVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getTargetBytecodeVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetBytecodeVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseJavaSourceSettings.html</Path>
<Anchor>getTargetBytecodeVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetBytecodeVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaJavaLanguageSettings.html</Path>
<Anchor>getTargetBytecodeVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getTargetCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>getTargetCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/platform/JavaPlatform.html</Path>
<Anchor>getTargetCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetCompatibility()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>getTargetCompatibility--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetConfiguration()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>getTargetConfiguration--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>getTargetFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetJdk()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>getTargetJdk--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetJdk()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>getTargetJdk--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetModuleName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModuleDependency.html</Path>
<Anchor>getTargetModuleName--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithNativeRuntime.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinary.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ExtractSymbols.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/StripSymbols.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getTargetPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProjectDependency.html</Path>
<Anchor>getTargetProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetSizeInMB()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
<Anchor>getTargetSizeInMB--</Anchor></Token>
<Token><TokenIdentifier><Name>getTargetVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>getTargetVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getTask()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskExecutionException.html</Path>
<Anchor>getTask--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>getTaskConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyReportTask.html</Path>
<Anchor>getTaskConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getTaskDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskDependencyFromProjectDependency(boolean, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getTaskDependencyFromProjectDependency-boolean-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskFileVarFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getTaskFileVarFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskGraph()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>getTaskGraph--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskName(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>getTaskName-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskNames()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getTaskNames--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskPath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskOperationDescriptor.html</Path>
<Anchor>getTaskPath--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskRequests()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getTaskRequests--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteBinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinarySpec.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildResult.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/BuildableElement.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BuildInvocations.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
<Anchor>getTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>getTasksByName(String, boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getTasksByName-java.lang.String-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskSelectors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/BuildInvocations.html</Path>
<Anchor>getTaskSelectors--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>getTaskType--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>getTaskType--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>getTaskType--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>getTaskType--</Anchor></Token>
<Token><TokenIdentifier><Name>getTaskType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>getTaskType--</Anchor></Token>
<Token><TokenIdentifier><Name>getTempDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>getTempDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTemplate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/TemplateBasedScriptGenerator.html</Path>
<Anchor>getTemplate--</Anchor></Token>
<Token><TokenIdentifier><Name>getTemplateImports()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlTemplateFormat.html</Path>
<Anchor>getTemplateImports--</Anchor></Token>
<Token><TokenIdentifier><Name>getTemporaryDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>getTemporaryDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/CppTestSuite.html</Path>
<Anchor>getTestBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/TestSuiteComponent.html</Path>
<Anchor>getTestBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestSuite.html</Path>
<Anchor>getTestBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestClassesDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getTestClassesDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestClassesDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getTestClassesDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestCount()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
<Anchor>getTestCount--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getTestDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestedBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteBinarySpec.html</Path>
<Anchor>getTestedBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestedBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
<Anchor>getTestedBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestedBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteBinarySpec.html</Path>
<Anchor>getTestedBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestedComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteSpec.html</Path>
<Anchor>getTestedComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestedComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteSpec.html</Path>
<Anchor>getTestedComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestedComponent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteSpec.html</Path>
<Anchor>getTestedComponent--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestFramework()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getTestFramework--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestFramework()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>getTestFramework--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestInstallDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>getTestInstallDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestLogging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getTestLogging--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getTestName--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getTestOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getTestOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestOutputDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaCompilerOutput.html</Path>
<Anchor>getTestOutputDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestReportDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getTestReportDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestReportDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getTestReportDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestResourceDirectories()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
<Anchor>getTestResourceDirectories--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestResourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getTestResourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestResourceFolders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getTestResourceFolders--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestResultDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
<Anchor>getTestResultDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestResultsDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getTestResultsDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestResultsDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>getTestResultsDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSourceDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>getTestSourceDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSourceFolders()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>getTestSourceFolders--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSourceSets()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>getTestSourceSets--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSuite()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JUnitTestSuiteBinarySpec.html</Path>
<Anchor>getTestSuite--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSuite()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteBinarySpec.html</Path>
<Anchor>getTestSuite--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSuite()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/CUnitTestSuiteBinarySpec.html</Path>
<Anchor>getTestSuite--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSuite()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/GoogleTestTestSuiteBinarySpec.html</Path>
<Anchor>getTestSuite--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSuite()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
<Anchor>getTestSuite--</Anchor></Token>
<Token><TokenIdentifier><Name>getTestSuite()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteBinarySpec.html</Path>
<Anchor>getTestSuite--</Anchor></Token>
<Token><TokenIdentifier><Name>getText()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcReports.html</Path>
<Anchor>getText--</Anchor></Token>
<Token><TokenIdentifier><Name>getText()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsReports.html</Path>
<Anchor>getText--</Anchor></Token>
<Token><TokenIdentifier><Name>getText()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependReports.html</Path>
<Anchor>getText--</Anchor></Token>
<Token><TokenIdentifier><Name>getText()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorDescription.html</Path>
<Anchor>getText--</Anchor></Token>
<Token><TokenIdentifier><Name>getText()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceHandler.html</Path>
<Anchor>getText--</Anchor></Token>
<Token><TokenIdentifier><Name>getText()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/TextProvider.html</Path>
<Anchor>getText--</Anchor></Token>
<Token><TokenIdentifier><Name>getTextOutputFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/ComponentReport.html</Path>
<Anchor>getTextOutputFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTextOutputFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>getTextOutputFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTextOutputFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>getTextOutputFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTextOutputFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>getTextOutputFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTextOutputFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/BuildEnvironmentReportTask.html</Path>
<Anchor>getTextOutputFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTextOutputFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>getTextOutputFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getTextOutputFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>getTextOutputFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getThreadCount()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getThreadCount--</Anchor></Token>
<Token><TokenIdentifier><Name>getTimezone()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getTimezone--</Anchor></Token>
<Token><TokenIdentifier><Name>getTimezone()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getTimezone--</Anchor></Token>
<Token><TokenIdentifier><Name>getTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>getTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getTo()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransform.html</Path>
<Anchor>getTo--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithNativeRuntime.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/PlatformScalaCompile.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableFileSpec.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ExtractSymbols.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/StripSymbols.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolChain()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>getToolChain--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstylePlugin.html</Path>
<Anchor>getToolName--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcPlugin.html</Path>
<Anchor>getToolName--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsPlugin.html</Path>
<Anchor>getToolName--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>getToolName--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>getToolName--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>getToolVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getToolVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>getToolVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getTop()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getTop--</Anchor></Token>
<Token><TokenIdentifier><Name>getToSign()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getToSign--</Anchor></Token>
<Token><TokenIdentifier><Name>getToSignArtifact()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getToSignArtifact--</Anchor></Token>
<Token><TokenIdentifier><Name>getTotal()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/StatusEvent.html</Path>
<Anchor>getTotal--</Anchor></Token>
<Token><TokenIdentifier><Name>getTransformer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>getTransformer--</Anchor></Token>
<Token><TokenIdentifier><Name>getTransformer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesFileContentMerger.html</Path>
<Anchor>getTransformer--</Anchor></Token>
<Token><TokenIdentifier><Name>getTransformer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesGeneratorTask.html</Path>
<Anchor>getTransformer--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactIdentifier.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifact.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ArtifactResult.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/compile/CompilerVersion.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getType()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseLinkedResource.html</Path>
<Anchor>getType--</Anchor></Token>
<Token><TokenIdentifier><Name>getTypeForExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureTypeProvider.html</Path>
<Anchor>getTypeForExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getTypeForExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureTypeProvider.html</Path>
<Anchor>getTypeForExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>getUniqueId()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VersionControlSpec.html</Path>
<Anchor>getUniqueId--</Anchor></Token>
<Token><TokenIdentifier><Name>getUnit()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/StatusEvent.html</Path>
<Anchor>getUnit--</Anchor></Token>
<Token><TokenIdentifier><Name>getUnixScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getUnixScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getUnixStartScriptGenerator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getUnixStartScriptGenerator--</Anchor></Token>
<Token><TokenIdentifier><Name>getUnresolvedModuleDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
<Anchor>getUnresolvedModuleDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>getUnsubscribe()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingList.html</Path>
<Anchor>getUnsubscribe--</Anchor></Token>
<Token><TokenIdentifier><Name>getUploadTaskName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>getUploadTaskName--</Anchor></Token>
<Token><TokenIdentifier><Name>getUpperBound()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>getUpperBound--</Anchor></Token>
<Token><TokenIdentifier><Name>getUpToDate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>getUpToDate--</Anchor></Token>
<Token><TokenIdentifier><Name>getURI()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/Resource.html</Path>
<Anchor>getURI--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorAuthor.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorLicense.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomCiManagement.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomIssueManagement.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomLicense.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomOrganization.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomScm.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.Link.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUrl()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/git/GitVersionControlSpec.html</Path>
<Anchor>getUrl--</Anchor></Token>
<Token><TokenIdentifier><Name>getUseDefaultListeners()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>getUseDefaultListeners--</Anchor></Token>
<Token><TokenIdentifier><Name>getUsername()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/PasswordCredentials.html</Path>
<Anchor>getUsername--</Anchor></Token>
<Token><TokenIdentifier><Name>getUsername()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/PasswordCredentials.html</Path>
<Anchor>getUsername--</Anchor></Token>
<Token><TokenIdentifier><Name>getUsername()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>getUsername--</Anchor></Token>
<Token><TokenIdentifier><Name>getUsername()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCacheCredentials.html</Path>
<Anchor>getUsername--</Anchor></Token>
<Token><TokenIdentifier><Name>getUserTemplateFormats()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
<Anchor>getUserTemplateFormats--</Anchor></Token>
<Token><TokenIdentifier><Name>getUserTemplateFormats()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>getUserTemplateFormats--</Anchor></Token>
<Token><TokenIdentifier><Name>getValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
<Anchor>getValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/OptionLessJavadocOptionFileOption.html</Path>
<Anchor>getValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>getValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>getValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/ClasspathAttribute.html</Path>
<Anchor>getValue--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariant()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryBinaryIdentifier.html</Path>
<Anchor>getVariant--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariant()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryComponentSelector.html</Path>
<Anchor>getVariant--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariant()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedArtifactResult.html</Path>
<Anchor>getVariant--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariant()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedComponentResult.html</Path>
<Anchor>getVariant--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariant()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/LibraryBinaryDependencySpec.html</Path>
<Anchor>getVariant--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariants()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
<Anchor>getVariants--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariants()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/ComponentWithVariants.html</Path>
<Anchor>getVariants--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariants()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/component/BaseComponentSpec.html</Path>
<Anchor>getVariants--</Anchor></Token>
<Token><TokenIdentifier><Name>getVariants()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/VariantComponent.html</Path>
<Anchor>getVariants--</Anchor></Token>
<Token><TokenIdentifier><Name>getVcs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getVcs--</Anchor></Token>
<Token><TokenIdentifier><Name>getVcs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>getVcs--</Anchor></Token>
<Token><TokenIdentifier><Name>getVcsMappings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/SourceControl.html</Path>
<Anchor>getVcsMappings--</Anchor></Token>
<Token><TokenIdentifier><Name>getVendor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getVendor--</Anchor></Token>
<Token><TokenIdentifier><Name>getVendor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/compile/CompilerVersion.html</Path>
<Anchor>getVendor--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentIdentifier.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentSelector.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Dependency.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionIdentifier.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionSelector.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/Capability.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenDependency.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomRelocation.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/JavaToolChain.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/compile/CompilerVersion.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftVersion.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpec.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginRequest.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleModuleVersion.html</Path>
<Anchor>getVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionComparator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>getVersionComparator--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionComparator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>getVersionComparator--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionConstraint()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentSelector.html</Path>
<Anchor>getVersionConstraint--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionConstraint()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>getVersionConstraint--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionConstraint()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionSelector.html</Path>
<Anchor>getVersionConstraint--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionParser()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>getVersionParser--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionParser()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>getVersionParser--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionRangeMapper()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>getVersionRangeMapper--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionSelectorScheme()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>getVersionSelectorScheme--</Anchor></Token>
<Token><TokenIdentifier><Name>getVersionSelectorScheme()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>getVersionSelectorScheme--</Anchor></Token>
<Token><TokenIdentifier><Name>getViolationRules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoCoverageVerification.html</Path>
<Anchor>getViolationRules--</Anchor></Token>
<Token><TokenIdentifier><Name>getVisitors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getVisitors--</Anchor></Token>
<Token><TokenIdentifier><Name>getVisitors()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>getVisitors--</Anchor></Token>
<Token><TokenIdentifier><Name>getVisualStudioProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>getVisualStudioProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getVisualStudioProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>getVisualStudioProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getWarn()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>getWarn--</Anchor></Token>
<Token><TokenIdentifier><Name>getWarningMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>getWarningMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getWarningMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>getWarningMode--</Anchor></Token>
<Token><TokenIdentifier><Name>getWbModuleEntries()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>getWbModuleEntries--</Anchor></Token>
<Token><TokenIdentifier><Name>getWebAppDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPluginConvention.html</Path>
<Anchor>getWebAppDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getWebAppDirName()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPluginConvention.html</Path>
<Anchor>getWebAppDirName--</Anchor></Token>
<Token><TokenIdentifier><Name>getWebInf()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>getWebInf--</Anchor></Token>
<Token><TokenIdentifier><Name>getWebXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>getWebXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getWhenMerged()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>getWhenMerged--</Anchor></Token>
<Token><TokenIdentifier><Name>getWildcards()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>getWildcards--</Anchor></Token>
<Token><TokenIdentifier><Name>getWildcards()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>getWildcards--</Anchor></Token>
<Token><TokenIdentifier><Name>getWindowsScript()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getWindowsScript--</Anchor></Token>
<Token><TokenIdentifier><Name>getWindowsSdkDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCpp.html</Path>
<Anchor>getWindowsSdkDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getWindowsStartScriptGenerator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>getWindowsStartScriptGenerator--</Anchor></Token>
<Token><TokenIdentifier><Name>getWindowTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>getWindowTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getWindowTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>getWindowTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getWindowTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>getWindowTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getWindowTitle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>getWindowTitle--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkerProcessBuilderFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>getWorkerProcessBuilderFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkerProcessBuilderFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>getWorkerProcessBuilderFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkerProcessBuilderFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>getWorkerProcessBuilderFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkerProcessBuilderFactory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>getWorkerProcessBuilderFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkingDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>getWorkingDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkingDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>getWorkingDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkingDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>getWorkingDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkingDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>getWorkingDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkingDir()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>getWorkingDir--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkingDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>getWorkingDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkspace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/XcodeRootExtension.html</Path>
<Anchor>getWorkspace--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkspace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaWorkspace.html</Path>
<Anchor>getWorkspace--</Anchor></Token>
<Token><TokenIdentifier><Name>getWorkspace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>getWorkspace--</Anchor></Token>
<Token><TokenIdentifier><Name>getWtp()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>getWtp--</Anchor></Token>
<Token><TokenIdentifier><Name>getXcodeProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
<Anchor>getXcodeProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getXcodeProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeProjectFileTask.html</Path>
<Anchor>getXcodeProject--</Anchor></Token>
<Token><TokenIdentifier><Name>getXcodeProjectLocations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeWorkspaceFileTask.html</Path>
<Anchor>getXcodeProjectLocations--</Anchor></Token>
<Token><TokenIdentifier><Name>getXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleReports.html</Path>
<Anchor>getXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcReports.html</Path>
<Anchor>getXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsReports.html</Path>
<Anchor>getXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependReports.html</Path>
<Anchor>getXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdReports.html</Path>
<Anchor>getXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getXml()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</Path>
<Anchor>getXml--</Anchor></Token>
<Token><TokenIdentifier><Name>getXmlTransformer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlFileContentMerger.html</Path>
<Anchor>getXmlTransformer--</Anchor></Token>
<Token><TokenIdentifier><Name>getXmlTransformer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlGeneratorTask.html</Path>
<Anchor>getXmlTransformer--</Anchor></Token>
<Token><TokenIdentifier><Name>getZincClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>getZincClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>GitVersionControlSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/git/GitVersionControlSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>google()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>google--</Anchor></Token>
<Token><TokenIdentifier><Name>GOOGLE_APIS_REPO_URL</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>GOOGLE_APIS_REPO_URL</Anchor></Token>
<Token><TokenIdentifier><Name>GOOGLE_URL</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>GOOGLE_URL</Anchor></Token>
<Token><TokenIdentifier><Name>googleApis()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>googleApis--</Anchor></Token>
<Token><TokenIdentifier><Name>googleApis(Action&lt;? super IvyArtifactRepository&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>googleApis-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>GoogleTestConventionPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/plugins/GoogleTestConventionPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>GoogleTestConventionPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/plugins/GoogleTestConventionPlugin.html</Path>
<Anchor>GoogleTestConventionPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>GoogleTestPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/plugins/GoogleTestPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>GoogleTestPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/plugins/GoogleTestPlugin.html</Path>
<Anchor>GoogleTestPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>GoogleTestTestSuiteBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/GoogleTestTestSuiteBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>GoogleTestTestSuiteSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/GoogleTestTestSuiteSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>Gradle</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
</Token>
<Token><TokenIdentifier><Name>gradle()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>gradle--</Anchor></Token>
<Token><TokenIdentifier><Name>gradle(Action&lt;? super MavenArtifactRepository&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>gradle-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>GRADLE_ARTIFACT_PATTERN</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>GRADLE_ARTIFACT_PATTERN</Anchor></Token>
<Token><TokenIdentifier><Name>GRADLE_IVY_PATTERN</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>GRADLE_IVY_PATTERN</Anchor></Token>
<Token><TokenIdentifier><Name>GRADLE_PROPERTIES</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>GRADLE_PROPERTIES</Anchor></Token>
<Token><TokenIdentifier><Name>GRADLE_PUBLIC_JAVASCRIPT_REPO_URL</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>GRADLE_PUBLIC_JAVASCRIPT_REPO_URL</Anchor></Token>
<Token><TokenIdentifier><Name>GRADLE_USER_HOME_PROPERTY_KEY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>GRADLE_USER_HOME_PROPERTY_KEY</Anchor></Token>
<Token><TokenIdentifier><Name>gradleApi()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>gradleApi--</Anchor></Token>
<Token><TokenIdentifier><Name>GradleBuild</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleBuild()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>GradleBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>GradleBuild</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradleBuild.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleBuildInvocationSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleConnectionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnectionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleConnectionException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnectionException.html</Path>
<Anchor>GradleConnectionException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>GradleConnectionException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnectionException.html</Path>
<Anchor>GradleConnectionException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>GradleConnector</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleConnector()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>GradleConnector--</Anchor></Token>
<Token><TokenIdentifier><Name>GradleEnvironment</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/GradleEnvironment.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/GradleException.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/GradleException.html</Path>
<Anchor>GradleException--</Anchor></Token>
<Token><TokenIdentifier><Name>GradleException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/GradleException.html</Path>
<Anchor>GradleException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>GradleException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/GradleException.html</Path>
<Anchor>GradleException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>gradleHomeDir</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>gradleHomeDir</Anchor></Token>
<Token><TokenIdentifier><Name>gradleMetadata()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.MetadataSources.html</Path>
<Anchor>gradleMetadata--</Anchor></Token>
<Token><TokenIdentifier><Name>gradleMetadata()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.MetadataSources.html</Path>
<Anchor>gradleMetadata--</Anchor></Token>
<Token><TokenIdentifier><Name>GradleModuleVersion</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleModuleVersion.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradlePluginDevelopmentExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradlePluginDevelopmentExtension(Project, SourceSet, SourceSet)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>GradlePluginDevelopmentExtension-org.gradle.api.Project-org.gradle.api.tasks.SourceSet-org.gradle.api.tasks.SourceSet-</Anchor></Token>
<Token><TokenIdentifier><Name>GradlePluginDevelopmentExtension(Project, SourceSet, SourceSet[])</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>GradlePluginDevelopmentExtension-org.gradle.api.Project-org.gradle.api.tasks.SourceSet-org.gradle.api.tasks.SourceSet:A-</Anchor></Token>
<Token><TokenIdentifier><Name>gradlePluginPortal()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>gradlePluginPortal--</Anchor></Token>
<Token><TokenIdentifier><Name>GradleProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradlePublication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradlePublication.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleRunner</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleRunner()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>GradleRunner--</Anchor></Token>
<Token><TokenIdentifier><Name>GradleScript</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/GradleScript.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleScriptException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/GradleScriptException.html</Path>
</Token>
<Token><TokenIdentifier><Name>GradleScriptException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/GradleScriptException.html</Path>
<Anchor>GradleScriptException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>GradleTask</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/GradleTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>gradleTestKit()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>gradleTestKit--</Anchor></Token>
<Token><TokenIdentifier><Name>graphPopulated(TaskExecutionGraph)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraphListener.html</Path>
<Anchor>graphPopulated-org.gradle.api.execution.TaskExecutionGraph-</Anchor></Token>
<Token><TokenIdentifier><Name>groovy(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovySourceSet.html</Path>
<Anchor>groovy-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>groovy(Action&lt;? super SourceDirectorySet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovySourceSet.html</Path>
<Anchor>groovy-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>GROOVY_RUNTIME_EXTENSION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyBasePlugin.html</Path>
<Anchor>GROOVY_RUNTIME_EXTENSION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>GroovyBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>GroovyBasePlugin(SourceDirectorySetFactory, ModuleRegistry)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyBasePlugin.html</Path>
<Anchor>GroovyBasePlugin-org.gradle.api.internal.file.SourceDirectorySetFactory-org.gradle.api.internal.classpath.ModuleRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>GroovyCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>GroovyCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>GroovyCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>GroovyCompileOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>GroovyCompileOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>GroovyCompileOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>Groovydoc</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
</Token>
<Token><TokenIdentifier><Name>Groovydoc()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>Groovydoc--</Anchor></Token>
<Token><TokenIdentifier><Name>Groovydoc.Link</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.Link.html</Path>
</Token>
<Token><TokenIdentifier><Name>GROOVYDOC_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyPlugin.html</Path>
<Anchor>GROOVYDOC_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>GroovyForkOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyForkOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>GroovyForkOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyForkOptions.html</Path>
<Anchor>GroovyForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>GroovyMavenDeployer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/GroovyMavenDeployer.html</Path>
</Token>
<Token><TokenIdentifier><Name>GroovyPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>GroovyPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/GroovyPlugin.html</Path>
<Anchor>GroovyPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>GroovyRuntime</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovyRuntime.html</Path>
</Token>
<Token><TokenIdentifier><Name>GroovyRuntime(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovyRuntime.html</Path>
<Anchor>GroovyRuntime-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>GroovySourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovySourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>group(Map&lt;String, List&lt;String&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>group-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>group(String, List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>group-java.lang.String-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>group(String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>group-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>group(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecContainer.html</Path>
<Anchor>group-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>group(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpecBuilder.html</Path>
<Anchor>group-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>GROUP_KEY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRule.html</Path>
<Anchor>GROUP_KEY</Anchor></Token>
<Token><TokenIdentifier><Name>groupsFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>groupsFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>gzip(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceHandler.html</Path>
<Anchor>gzip-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>has(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.html</Path>
<Anchor>has-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>hasAttribute(Attribute&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributesSchema.html</Path>
<Anchor>hasAttribute-org.gradle.api.attributes.Attribute-</Anchor></Token>
<Token><TokenIdentifier><Name>HasAttributes</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/HasAttributes.html</Path>
</Token>
<Token><TokenIdentifier><Name>hasBuildDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildableComponentSpec.html</Path>
<Anchor>hasBuildDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>hasCodependentSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>hasCodependentSources--</Anchor></Token>
<Token><TokenIdentifier><Name>HasConfigurableAttributes</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/HasConfigurableAttributes.html</Path>
</Token>
<Token><TokenIdentifier><Name>hasError()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>hasError--</Anchor></Token>
<Token><TokenIdentifier><Name>HasGradleProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/HasGradleProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMapping.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Namer.Comparator.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.Link.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOfflineLink.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaLanguageLevel.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>hashCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>hashCode--</Anchor></Token>
<Token><TokenIdentifier><Name>HasImplicitReceiver</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/HasImplicitReceiver.html</Path>
</Token>
<Token><TokenIdentifier><Name>HasMultipleValues</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/HasMultipleValues.html</Path>
</Token>
<Token><TokenIdentifier><Name>hasPlugin(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>hasPlugin-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>hasPlugin(Class&lt;? extends Plugin&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>hasPlugin-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>hasPlugin(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginManager.html</Path>
<Anchor>hasPlugin-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>hasProperty(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>hasProperty-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>hasProperty(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>hasProperty-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>HasPublicType</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/HasPublicType.html</Path>
</Token>
<Token><TokenIdentifier><Name>hasTask(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>hasTask-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>hasTask(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>hasTask-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>hasTypeForExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureTypeProvider.html</Path>
<Anchor>hasTypeForExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>hasTypeForExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureTypeProvider.html</Path>
<Anchor>hasTypeForExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>header(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>header-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>header(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>header-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>HeaderExportingSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/HeaderExportingSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>HELP_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>HELP_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>helpFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>helpFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>HelpTasksPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>HelpTasksPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>HelpTasksPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>HierarchicalEclipseProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/HierarchicalEclipseProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>HierarchicalElement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/HierarchicalElement.html</Path>
</Token>
<Token><TokenIdentifier><Name>HTML_DEPENDENCY_REPORT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
<Anchor>HTML_DEPENDENCY_REPORT</Anchor></Token>
<Token><TokenIdentifier><Name>HtmlDependencyReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>HtmlDependencyReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>HtmlDependencyReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>HttpBuildCache</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
</Token>
<Token><TokenIdentifier><Name>HttpBuildCache()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>HttpBuildCache--</Anchor></Token>
<Token><TokenIdentifier><Name>HttpBuildCacheCredentials</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCacheCredentials.html</Path>
</Token>
<Token><TokenIdentifier><Name>HttpBuildCacheCredentials()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCacheCredentials.html</Path>
<Anchor>HttpBuildCacheCredentials--</Anchor></Token>
<Token><TokenIdentifier><Name>HttpFileServer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/HttpFileServer.html</Path>
</Token>
<Token><TokenIdentifier><Name>HttpFileServerFactory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/HttpFileServerFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>id(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/definition/InjectedPluginDependencies.html</Path>
<Anchor>id-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>id(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginDependenciesSpec.html</Path>
<Anchor>id-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>IdeaCompilerOutput</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaCompilerOutput.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaContentRoot</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaContentRoot.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaDependencyScope</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaDependencyScope.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaJavaLanguageSettings</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaJavaLanguageSettings.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaLanguageLevel</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaLanguageLevel.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaLanguageLevel(Object)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaLanguageLevel.html</Path>
<Anchor>IdeaLanguageLevel-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>IdeaLanguageLevel</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaLanguageLevel.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaModel</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaModel()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>IdeaModel--</Anchor></Token>
<Token><TokenIdentifier><Name>IdeaModule</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaModule(Project, IdeaModuleIml)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>IdeaModule-org.gradle.api.Project-org.gradle.plugins.ide.idea.model.IdeaModuleIml-</Anchor></Token>
<Token><TokenIdentifier><Name>IdeaModule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaModuleDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModuleDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaModuleIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaModuleIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaModuleIml</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModuleIml.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaModuleIml(XmlTransformer, File)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModuleIml.html</Path>
<Anchor>IdeaModuleIml-org.gradle.internal.xml.XmlTransformer-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>IdeaPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaPlugin(Instantiator, UniqueProjectNameProvider, IdeArtifactRegistry, ProjectStateRegistry)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
<Anchor>IdeaPlugin-org.gradle.internal.reflect.Instantiator-org.gradle.plugins.ide.internal.configurer.UniqueProjectNameProvider-org.gradle.plugins.ide.internal.IdeArtifactRegistry-org.gradle.api.internal.project.ProjectStateRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>IdeaProject</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaProject(Project, XmlFileContentMerger)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>IdeaProject-org.gradle.api.Project-org.gradle.plugins.ide.api.XmlFileContentMerger-</Anchor></Token>
<Token><TokenIdentifier><Name>IdeaProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaSingleEntryLibraryDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaSingleEntryLibraryDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaSourceDirectory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaSourceDirectory.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaWorkspace</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaWorkspace.html</Path>
</Token>
<Token><TokenIdentifier><Name>IdeaWorkspace()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaWorkspace.html</Path>
<Anchor>IdeaWorkspace--</Anchor></Token>
<Token><TokenIdentifier><Name>IdeWorkspace</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/IdeWorkspace.html</Path>
</Token>
<Token><TokenIdentifier><Name>ignore(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/normalization/RuntimeClasspathNormalization.html</Path>
<Anchor>ignore-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>IllegalDependencyNotation</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/IllegalDependencyNotation.html</Path>
</Token>
<Token><TokenIdentifier><Name>IllegalDependencyNotation()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/IllegalDependencyNotation.html</Path>
<Anchor>IllegalDependencyNotation--</Anchor></Token>
<Token><TokenIdentifier><Name>IllegalDependencyNotation(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/IllegalDependencyNotation.html</Path>
<Anchor>IllegalDependencyNotation-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>IllegalDependencyNotation(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/IllegalDependencyNotation.html</Path>
<Anchor>IllegalDependencyNotation-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>iml(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>iml-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>iml(Action&lt;? super IdeaModuleIml&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>iml-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ImmutableViolationException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.ImmutableViolationException.html</Path>
<Anchor>ImmutableViolationException--</Anchor></Token>
<Token><TokenIdentifier><Name>implementation(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentDependencies.html</Path>
<Anchor>implementation-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>implementation(Object, Action&lt;? super ExternalModuleDependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ComponentDependencies.html</Path>
<Anchor>implementation-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>IMPLEMENTATION_CLASSPATH_PROP_KEY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>IMPLEMENTATION_CLASSPATH_PROP_KEY</Anchor></Token>
<Token><TokenIdentifier><Name>IMPLEMENTATION_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>IMPLEMENTATION_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>importBuild(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>importBuild-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>importBuild(Object, Transformer&lt;? extends String, ? super String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>importBuild-java.lang.Object-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>include(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>include-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>include-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>include-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>include-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>include(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>include-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>include(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>include-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>include-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>include-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>include-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>include(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>include-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>include-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>include-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>include-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>include(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>include-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>include-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>include-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>include-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>include(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>include-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>include-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>include-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>include-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>include(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>include-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Iterable)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>include-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Spec&lt;FileTreeElement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>include-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>include(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>include-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>includeBuild(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>includeBuild-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>includeBuild(Object, Action&lt;ConfigurableIncludedBuild&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>includeBuild-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>includeBuild(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>includeBuild-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>includeCategories(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
<Anchor>includeCategories-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>IncludedBuild</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/IncludedBuild.html</Path>
</Token>
<Token><TokenIdentifier><Name>includedBuild(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>includedBuild-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>includeEngines(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>includeEngines-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>includeFlat(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>includeFlat-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>includeGroups(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>includeGroups-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>includes(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>includes-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>includes(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>includes-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>includes(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>includes-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>includeSpecs(Iterable&lt;Spec&lt;FileTreeElement&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>includeSpecs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>includeTags(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>includeTags-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>includeTest(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFilter.html</Path>
<Anchor>includeTest-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>includeTestsMatching(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFilter.html</Path>
<Anchor>includeTestsMatching-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>incompatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityCheckDetails.html</Path>
<Anchor>incompatible--</Anchor></Token>
<Token><TokenIdentifier><Name>IncrementalCompileOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/IncrementalCompileOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>IncrementalCompileOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/IncrementalCompileOptions.html</Path>
<Anchor>IncrementalCompileOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>IncrementalTaskInputs</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/IncrementalTaskInputs.html</Path>
</Token>
<Token><TokenIdentifier><Name>Incubating</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Incubating.html</Path>
</Token>
<Token><TokenIdentifier><Name>inferGroovyClasspath(Iterable&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GroovyRuntime.html</Path>
<Anchor>inferGroovyClasspath-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>inferScalaClasspath(Iterable&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaRuntime.html</Path>
<Anchor>inferScalaClasspath-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>info(String, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>info-java.lang.String-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>info(Action&lt;TestLogging&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>info-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>INHERITED</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>INHERITED</Anchor></Token>
<Token><TokenIdentifier><Name>InitBuild</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
</Token>
<Token><TokenIdentifier><Name>InitBuild()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>InitBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>initGradleCommand()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>initGradleCommand--</Anchor></Token>
<Token><TokenIdentifier><Name>InjectedPluginDependencies</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/definition/InjectedPluginDependencies.html</Path>
</Token>
<Token><TokenIdentifier><Name>InjectedPluginDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/definition/InjectedPluginDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>Input</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Input.html</Path>
</Token>
<Token><TokenIdentifier><Name>InputDirectory</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/InputDirectory.html</Path>
</Token>
<Token><TokenIdentifier><Name>InputFile</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/InputFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>InputFileDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/InputFileDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>InputFiles</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/InputFiles.html</Path>
</Token>
<Token><TokenIdentifier><Name>InputNormalization</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/normalization/InputNormalization.html</Path>
</Token>
<Token><TokenIdentifier><Name>InputNormalizationHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/normalization/InputNormalizationHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>install()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>install--</Anchor></Token>
<Token><TokenIdentifier><Name>INSTALL_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>INSTALL_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>InstalledJdk</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/java/InstalledJdk.html</Path>
</Token>
<Token><TokenIdentifier><Name>InstallExecutable</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>InstallExecutable(WorkerLeaseService)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>InstallExecutable-org.gradle.internal.work.WorkerLeaseService-</Anchor></Token>
<Token><TokenIdentifier><Name>InstallXCTestBundle</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
</Token>
<Token><TokenIdentifier><Name>InstallXCTestBundle()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/InstallXCTestBundle.html</Path>
<Anchor>InstallXCTestBundle--</Anchor></Token>
<Token><TokenIdentifier><Name>INSTANCE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Named.Namer.html</Path>
<Anchor>INSTANCE</Anchor></Token>
<Token><TokenIdentifier><Name>instantiator</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
<Anchor>instantiator</Anchor></Token>
<Token><TokenIdentifier><Name>instruction(String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>instruction-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>instructionFirst(String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>instructionFirst-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>instructionReplace(String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>instructionReplace-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>instructionValue(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>instructionValue-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>IntermediateResultHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/IntermediateResultHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>Internal</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Internal.html</Path>
</Token>
<Token><TokenIdentifier><Name>internalView(Class&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/TypeBuilder.html</Path>
<Anchor>internalView-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>intersect(Spec&lt;? super T&gt;...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>intersect-org.gradle.api.specs.Spec...-</Anchor></Token>
<Token><TokenIdentifier><Name>intersect(Collection&lt;? extends Spec&lt;? super T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>intersect-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>intersect()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>intersect--</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>into-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>into-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>into-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object, Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>into-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>into-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>into-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object, Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>into-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>into-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>into-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>into(Object, Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>into-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidActionClosureException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidActionClosureException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidActionClosureException(Closure&lt;?&gt;, Object)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidActionClosureException.html</Path>
<Anchor>InvalidActionClosureException-groovy.lang.Closure-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidIvyPublicationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/InvalidIvyPublicationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidIvyPublicationException(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/InvalidIvyPublicationException.html</Path>
<Anchor>InvalidIvyPublicationException-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidIvyPublicationException(String, String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/InvalidIvyPublicationException.html</Path>
<Anchor>InvalidIvyPublicationException-java.lang.String-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidMavenPublicationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/InvalidMavenPublicationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidMavenPublicationException(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/InvalidMavenPublicationException.html</Path>
<Anchor>InvalidMavenPublicationException-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidMavenPublicationException(String, String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/InvalidMavenPublicationException.html</Path>
<Anchor>InvalidMavenPublicationException-java.lang.String-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidModelException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/InvalidModelException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidModelException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/InvalidModelException.html</Path>
<Anchor>InvalidModelException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidModelException(String, Exception)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/InvalidModelException.html</Path>
<Anchor>InvalidModelException-java.lang.String-java.lang.Exception-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidModelRuleDeclarationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleDeclarationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidModelRuleDeclarationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleDeclarationException.html</Path>
<Anchor>InvalidModelRuleDeclarationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidModelRuleDeclarationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleDeclarationException.html</Path>
<Anchor>InvalidModelRuleDeclarationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidModelRuleDeclarationException(ModelRuleDescriptor, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleDeclarationException.html</Path>
<Anchor>InvalidModelRuleDeclarationException-org.gradle.model.internal.core.rule.describe.ModelRuleDescriptor-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidModelRuleDeclarationException(ModelRuleDescriptor, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleDeclarationException.html</Path>
<Anchor>InvalidModelRuleDeclarationException-org.gradle.model.internal.core.rule.describe.ModelRuleDescriptor-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidModelRuleException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidModelRuleException(ModelRuleDescriptor, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/InvalidModelRuleException.html</Path>
<Anchor>InvalidModelRuleException-org.gradle.model.internal.core.rule.describe.ModelRuleDescriptor-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidPluginException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/InvalidPluginException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidPluginException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/InvalidPluginException.html</Path>
<Anchor>InvalidPluginException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidPluginException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/InvalidPluginException.html</Path>
<Anchor>InvalidPluginException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidPluginMetadataException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/InvalidPluginMetadataException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidPluginMetadataException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/InvalidPluginMetadataException.html</Path>
<Anchor>InvalidPluginMetadataException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidRunnerConfigurationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/InvalidRunnerConfigurationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidRunnerConfigurationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/InvalidRunnerConfigurationException.html</Path>
<Anchor>InvalidRunnerConfigurationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidRunnerConfigurationException(String, UnsupportedVersionException)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/InvalidRunnerConfigurationException.html</Path>
<Anchor>InvalidRunnerConfigurationException-java.lang.String-org.gradle.tooling.UnsupportedVersionException-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidUserCodeException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserCodeException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidUserCodeException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserCodeException.html</Path>
<Anchor>InvalidUserCodeException--</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidUserCodeException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserCodeException.html</Path>
<Anchor>InvalidUserCodeException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidUserCodeException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserCodeException.html</Path>
<Anchor>InvalidUserCodeException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidUserDataException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserDataException.html</Path>
</Token>
<Token><TokenIdentifier><Name>InvalidUserDataException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserDataException.html</Path>
<Anchor>InvalidUserDataException--</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidUserDataException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserDataException.html</Path>
<Anchor>InvalidUserDataException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>InvalidUserDataException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/InvalidUserDataException.html</Path>
<Anchor>InvalidUserDataException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ipr(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>ipr-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>ipr(Action&lt;? super XmlFileContentMerger&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>ipr-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>isAdded()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/InputFileDetails.html</Path>
<Anchor>isAdded--</Anchor></Token>
<Token><TokenIdentifier><Name>isAllowUntrustedServer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>isAllowUntrustedServer--</Anchor></Token>
<Token><TokenIdentifier><Name>isAppend()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>isAppend--</Anchor></Token>
<Token><TokenIdentifier><Name>isArray()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isArray--</Anchor></Token>
<Token><TokenIdentifier><Name>isAssertKeyword()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>isAssertKeyword--</Anchor></Token>
<Token><TokenIdentifier><Name>isAssignableFrom(TypeOf&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isAssignableFrom-org.gradle.api.reflect.TypeOf-</Anchor></Token>
<Token><TokenIdentifier><Name>isAssignableFrom(Type)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isAssignableFrom-java.lang.reflect.Type-</Anchor></Token>
<Token><TokenIdentifier><Name>isAuthor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isAuthor--</Anchor></Token>
<Token><TokenIdentifier><Name>isAutomatedPublishing()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>isAutomatedPublishing--</Anchor></Token>
<Token><TokenIdentifier><Name>isBreakIterator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>isBreakIterator--</Anchor></Token>
<Token><TokenIdentifier><Name>isBreakIterator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>isBreakIterator--</Anchor></Token>
<Token><TokenIdentifier><Name>isBuildable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>isBuildable--</Anchor></Token>
<Token><TokenIdentifier><Name>isBuildable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinarySpec.html</Path>
<Anchor>isBuildable--</Anchor></Token>
<Token><TokenIdentifier><Name>isBuildCacheDebugLogging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isBuildCacheDebugLogging--</Anchor></Token>
<Token><TokenIdentifier><Name>isBuildCacheEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isBuildCacheEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isBuildProjectDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isBuildProjectDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>isBuildScan()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isBuildScan--</Anchor></Token>
<Token><TokenIdentifier><Name>isCanBeConsumed()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>isCanBeConsumed--</Anchor></Token>
<Token><TokenIdentifier><Name>isCanBeResolved()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>isCanBeResolved--</Anchor></Token>
<Token><TokenIdentifier><Name>isCancellationRequested()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/CancellationToken.html</Path>
<Anchor>isCancellationRequested--</Anchor></Token>
<Token><TokenIdentifier><Name>isCaseSensitive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>isCaseSensitive--</Anchor></Token>
<Token><TokenIdentifier><Name>isCaseSensitive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>isCaseSensitive--</Anchor></Token>
<Token><TokenIdentifier><Name>isCaseSensitive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>isCaseSensitive--</Anchor></Token>
<Token><TokenIdentifier><Name>isChanging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadata.html</Path>
<Anchor>isChanging--</Anchor></Token>
<Token><TokenIdentifier><Name>isChanging()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalModuleDependency.html</Path>
<Anchor>isChanging--</Anchor></Token>
<Token><TokenIdentifier><Name>isComposite()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestDescriptor.html</Path>
<Anchor>isComposite--</Anchor></Token>
<Token><TokenIdentifier><Name>isCompositeSubstitution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>isCompositeSubstitution--</Anchor></Token>
<Token><TokenIdentifier><Name>isConfigureOnDemand()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isConfigureOnDemand--</Anchor></Token>
<Token><TokenIdentifier><Name>isConflictResolution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>isConflictResolution--</Anchor></Token>
<Token><TokenIdentifier><Name>isConsoleOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>isConsoleOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>isConsoleOutput()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>isConsoleOutput--</Anchor></Token>
<Token><TokenIdentifier><Name>isConstrained()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>isConstrained--</Anchor></Token>
<Token><TokenIdentifier><Name>isContinueOnFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isContinueOnFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>isContinuous()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isContinuous--</Anchor></Token>
<Token><TokenIdentifier><Name>isCurrent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>isCurrent--</Anchor></Token>
<Token><TokenIdentifier><Name>isCurrentBuild()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/BuildIdentifier.html</Path>
<Anchor>isCurrentBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>isDebug()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isDebug--</Anchor></Token>
<Token><TokenIdentifier><Name>isDebug()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>isDebug--</Anchor></Token>
<Token><TokenIdentifier><Name>isDebuggable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithNativeRuntime.html</Path>
<Anchor>isDebuggable--</Anchor></Token>
<Token><TokenIdentifier><Name>isDebuggable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>isDebuggable--</Anchor></Token>
<Token><TokenIdentifier><Name>isDebuggable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>isDebuggable--</Anchor></Token>
<Token><TokenIdentifier><Name>isDebuggable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>isDebuggable--</Anchor></Token>
<Token><TokenIdentifier><Name>isDeferredConfigurable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtensionsSchema.ExtensionSchema.html</Path>
<Anchor>isDeferredConfigurable--</Anchor></Token>
<Token><TokenIdentifier><Name>isDependencyOrderEntry(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>isDependencyOrderEntry-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>isDeprecation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isDeprecation--</Anchor></Token>
<Token><TokenIdentifier><Name>isDeprecation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>isDeprecation--</Anchor></Token>
<Token><TokenIdentifier><Name>isDeprecation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>isDeprecation--</Anchor></Token>
<Token><TokenIdentifier><Name>isDetail()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
<Anchor>isDetail--</Anchor></Token>
<Token><TokenIdentifier><Name>isDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>isDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>isDocFilesSubDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isDocFilesSubDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>isDownloadJavadoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>isDownloadJavadoc--</Anchor></Token>
<Token><TokenIdentifier><Name>isDownloadJavadoc()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>isDownloadJavadoc--</Anchor></Token>
<Token><TokenIdentifier><Name>isDownloadSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>isDownloadSources--</Anchor></Token>
<Token><TokenIdentifier><Name>isDownloadSources()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>isDownloadSources--</Anchor></Token>
<Token><TokenIdentifier><Name>isDryRun()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isDryRun--</Anchor></Token>
<Token><TokenIdentifier><Name>isDumpOnExit()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>isDumpOnExit--</Anchor></Token>
<Token><TokenIdentifier><Name>isDynamicMode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepositoryMetaDataProvider.html</Path>
<Anchor>isDynamicMode--</Anchor></Token>
<Token><TokenIdentifier><Name>isEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeContainer.html</Path>
<Anchor>isEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>isEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>isEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>isEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
<Anchor>isEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>isEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/CompositeSpec.html</Path>
<Anchor>isEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>isEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>isEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>isEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>isEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>isEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecContainer.html</Path>
<Anchor>isEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>isEnabled(LogLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>isEnabled-org.gradle.api.logging.LogLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>isEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
<Anchor>isEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/AbstractBuildCache.html</Path>
<Anchor>isEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCache.html</Path>
<Anchor>isEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>isEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>isEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isExpected()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>isExpected--</Anchor></Token>
<Token><TokenIdentifier><Name>isExported()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>isExported--</Anchor></Token>
<Token><TokenIdentifier><Name>isExported()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>isExported--</Anchor></Token>
<Token><TokenIdentifier><Name>isExported()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>isExported--</Anchor></Token>
<Token><TokenIdentifier><Name>isExported()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseClasspathContainer.html</Path>
<Anchor>isExported--</Anchor></Token>
<Token><TokenIdentifier><Name>isExported()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/EclipseProjectDependency.html</Path>
<Anchor>isExported--</Anchor></Token>
<Token><TokenIdentifier><Name>isExported()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ExternalDependency.html</Path>
<Anchor>isExported--</Anchor></Token>
<Token><TokenIdentifier><Name>isFailOnError()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isFailOnError--</Anchor></Token>
<Token><TokenIdentifier><Name>isFailOnError()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>isFailOnError--</Anchor></Token>
<Token><TokenIdentifier><Name>isFailOnError()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>isFailOnError--</Anchor></Token>
<Token><TokenIdentifier><Name>isFailOnError()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>isFailOnError--</Anchor></Token>
<Token><TokenIdentifier><Name>isFailOnNoMatchingTests()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFilter.html</Path>
<Anchor>isFailOnNoMatchingTests--</Anchor></Token>
<Token><TokenIdentifier><Name>isFailOnViolation()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRulesContainer.html</Path>
<Anchor>isFailOnViolation--</Anchor></Token>
<Token><TokenIdentifier><Name>isFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>isFile--</Anchor></Token>
<Token><TokenIdentifier><Name>isFollowSymlinks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>isFollowSymlinks--</Anchor></Token>
<Token><TokenIdentifier><Name>isForce()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalDependency.html</Path>
<Anchor>isForce--</Anchor></Token>
<Token><TokenIdentifier><Name>isForce()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>isForce--</Anchor></Token>
<Token><TokenIdentifier><Name>isForced()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>isForced--</Anchor></Token>
<Token><TokenIdentifier><Name>isFork()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isFork--</Anchor></Token>
<Token><TokenIdentifier><Name>isFork()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>isFork--</Anchor></Token>
<Token><TokenIdentifier><Name>isFreeBSD()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>isFreeBSD--</Anchor></Token>
<Token><TokenIdentifier><Name>isFromCache()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskSuccessResult.html</Path>
<Anchor>isFromCache--</Anchor></Token>
<Token><TokenIdentifier><Name>isGenerated()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/IdeaSourceDirectory.html</Path>
<Anchor>isGenerated--</Anchor></Token>
<Token><TokenIdentifier><Name>isGenerateReverseRoutes()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>isGenerateReverseRoutes--</Anchor></Token>
<Token><TokenIdentifier><Name>isGroupByInstances()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>isGroupByInstances--</Anchor></Token>
<Token><TokenIdentifier><Name>isIgnoreExitValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>isIgnoreExitValue--</Anchor></Token>
<Token><TokenIdentifier><Name>isIgnoreExitValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>isIgnoreExitValue--</Anchor></Token>
<Token><TokenIdentifier><Name>isIgnoreExitValue()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>isIgnoreExitValue--</Anchor></Token>
<Token><TokenIdentifier><Name>isIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>isIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>isIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>isIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>isIgnoreFailures()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
<Anchor>isIgnoreFailures--</Anchor></Token>
<Token><TokenIdentifier><Name>isIncludeNoLocationClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>isIncludeNoLocationClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>isIncludePrivate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>isIncludePrivate--</Anchor></Token>
<Token><TokenIdentifier><Name>isIncremental()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isIncremental--</Anchor></Token>
<Token><TokenIdentifier><Name>isIncremental()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/IncrementalTaskInputs.html</Path>
<Anchor>isIncremental--</Anchor></Token>
<Token><TokenIdentifier><Name>isInheritOutputDirs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>isInheritOutputDirs--</Anchor></Token>
<Token><TokenIdentifier><Name>isInteractive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isInteractive--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava10()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava10--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava10Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava10Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava11()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava11--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava11Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava11Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava5()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava5--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava5Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava5Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava6()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava6--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava6Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava6Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava7()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava7--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava7Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava7Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava8()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava8--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava8Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava8Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava9()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava9--</Anchor></Token>
<Token><TokenIdentifier><Name>isJava9Compatible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>isJava9Compatible--</Anchor></Token>
<Token><TokenIdentifier><Name>isJavaAnnotationProcessing()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>isJavaAnnotationProcessing--</Anchor></Token>
<Token><TokenIdentifier><Name>isJavaProject()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>isJavaProject--</Anchor></Token>
<Token><TokenIdentifier><Name>isJdk15()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>isJdk15--</Anchor></Token>
<Token><TokenIdentifier><Name>isJmx()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>isJmx--</Anchor></Token>
<Token><TokenIdentifier><Name>isKeepStubs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>isKeepStubs--</Anchor></Token>
<Token><TokenIdentifier><Name>isKeyWords()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isKeyWords--</Anchor></Token>
<Token><TokenIdentifier><Name>isLegacyBinary()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>isLegacyBinary--</Anchor></Token>
<Token><TokenIdentifier><Name>isLegacyLayout()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>isLegacyLayout--</Anchor></Token>
<Token><TokenIdentifier><Name>isLenient()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.ViewConfiguration.html</Path>
<Anchor>isLenient--</Anchor></Token>
<Token><TokenIdentifier><Name>isLifecycleEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>isLifecycleEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isLinkSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isLinkSource--</Anchor></Token>
<Token><TokenIdentifier><Name>isLinux()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>isLinux--</Anchor></Token>
<Token><TokenIdentifier><Name>isLinux()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>isLinux--</Anchor></Token>
<Token><TokenIdentifier><Name>isListFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isListFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>isListFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>isListFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>isListFiles()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>isListFiles--</Anchor></Token>
<Token><TokenIdentifier><Name>isMacOs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>isMacOs--</Anchor></Token>
<Token><TokenIdentifier><Name>isMacOsX()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>isMacOsX--</Anchor></Token>
<Token><TokenIdentifier><Name>isModified()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/InputFileDetails.html</Path>
<Anchor>isModified--</Anchor></Token>
<Token><TokenIdentifier><Name>isNamespaceReverseRouter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>isNamespaceReverseRouter--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoBuildScan()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isNoBuildScan--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoComment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoComment--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoDeprecated()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoDeprecated--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoDeprecatedList()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoDeprecatedList--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoHelp()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoHelp--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoIndex()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoIndex--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoNavBar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoNavBar--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoSince()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoSince--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoTimestamp()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>isNoTimestamp--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoTimestamp()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoTimestamp--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoTree()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isNoTree--</Anchor></Token>
<Token><TokenIdentifier><Name>isNoVersionStamp()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>isNoVersionStamp--</Anchor></Token>
<Token><TokenIdentifier><Name>isOffline()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>isOffline--</Anchor></Token>
<Token><TokenIdentifier><Name>isOffline()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isOffline--</Anchor></Token>
<Token><TokenIdentifier><Name>IsolationMode</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/IsolationMode.html</Path>
</Token>
<Token><TokenIdentifier><Name>isOptimize()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>isOptimize--</Anchor></Token>
<Token><TokenIdentifier><Name>isOptimized()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/ComponentWithNativeRuntime.html</Path>
<Anchor>isOptimized--</Anchor></Token>
<Token><TokenIdentifier><Name>isOptimized()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>isOptimized--</Anchor></Token>
<Token><TokenIdentifier><Name>isOptimized()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>isOptimized--</Anchor></Token>
<Token><TokenIdentifier><Name>isOutputPerTestCase()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/JUnitXmlReport.html</Path>
<Anchor>isOutputPerTestCase--</Anchor></Token>
<Token><TokenIdentifier><Name>isParallelProjectExecutionEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/concurrent/ParallelismConfiguration.html</Path>
<Anchor>isParallelProjectExecutionEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isParallelProjectExecutionEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isParallelProjectExecutionEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isParameterized()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isParameterized--</Anchor></Token>
<Token><TokenIdentifier><Name>isPositionIndependentCode()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>isPositionIndependentCode--</Anchor></Token>
<Token><TokenIdentifier><Name>isPresent()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Provider.html</Path>
<Anchor>isPresent--</Anchor></Token>
<Token><TokenIdentifier><Name>isPreserveFileTimestamps()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>isPreserveFileTimestamps--</Anchor></Token>
<Token><TokenIdentifier><Name>isPreserveOrder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>isPreserveOrder--</Anchor></Token>
<Token><TokenIdentifier><Name>isProfile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isProfile--</Anchor></Token>
<Token><TokenIdentifier><Name>isProjectDependenciesOnly()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>isProjectDependenciesOnly--</Anchor></Token>
<Token><TokenIdentifier><Name>isPublic()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isPublic--</Anchor></Token>
<Token><TokenIdentifier><Name>isPublic()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Launchable.html</Path>
<Anchor>isPublic--</Anchor></Token>
<Token><TokenIdentifier><Name>isPush()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/AbstractBuildCache.html</Path>
<Anchor>isPush--</Anchor></Token>
<Token><TokenIdentifier><Name>isPush()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCache.html</Path>
<Anchor>isPush--</Anchor></Token>
<Token><TokenIdentifier><Name>isQuietEnabled()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>isQuietEnabled--</Anchor></Token>
<Token><TokenIdentifier><Name>isRecompileScripts()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isRecompileScripts--</Anchor></Token>
<Token><TokenIdentifier><Name>isRecursive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>isRecursive--</Anchor></Token>
<Token><TokenIdentifier><Name>isRecursive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>isRecursive--</Anchor></Token>
<Token><TokenIdentifier><Name>isRefreshDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isRefreshDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>isRelativeToPathVariable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/FileReference.html</Path>
<Anchor>isRelativeToPathVariable--</Anchor></Token>
<Token><TokenIdentifier><Name>isRemoved()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/InputFileDetails.html</Path>
<Anchor>isRemoved--</Anchor></Token>
<Token><TokenIdentifier><Name>isReproducibleFileOrder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ReproducibleFileVisitor.html</Path>
<Anchor>isReproducibleFileOrder--</Anchor></Token>
<Token><TokenIdentifier><Name>isReproducibleFileOrder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>isReproducibleFileOrder--</Anchor></Token>
<Token><TokenIdentifier><Name>isRequired()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>isRequired--</Anchor></Token>
<Token><TokenIdentifier><Name>isRequired()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignatureSpec.html</Path>
<Anchor>isRequired--</Anchor></Token>
<Token><TokenIdentifier><Name>isRequired()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>isRequired--</Anchor></Token>
<Token><TokenIdentifier><Name>isRequired()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>isRequired--</Anchor></Token>
<Token><TokenIdentifier><Name>isRerunTasks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isRerunTasks--</Anchor></Token>
<Token><TokenIdentifier><Name>isSatisfiedBy(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/AndSpec.html</Path>
<Anchor>isSatisfiedBy-T-</Anchor></Token>
<Token><TokenIdentifier><Name>isSatisfiedBy(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/NotSpec.html</Path>
<Anchor>isSatisfiedBy-T-</Anchor></Token>
<Token><TokenIdentifier><Name>isSatisfiedBy(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>isSatisfiedBy-T-</Anchor></Token>
<Token><TokenIdentifier><Name>isSatisfiedBy(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Spec.html</Path>
<Anchor>isSatisfiedBy-T-</Anchor></Token>
<Token><TokenIdentifier><Name>isScanForTestClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>isScanForTestClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>isSearchUpwards()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isSearchUpwards--</Anchor></Token>
<Token><TokenIdentifier><Name>isSelectedByRule()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionReason.html</Path>
<Anchor>isSelectedByRule--</Anchor></Token>
<Token><TokenIdentifier><Name>isSerialWarn()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isSerialWarn--</Anchor></Token>
<Token><TokenIdentifier><Name>isShowHidden()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>isShowHidden--</Anchor></Token>
<Token><TokenIdentifier><Name>isShowNonBuildable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>isShowNonBuildable--</Anchor></Token>
<Token><TokenIdentifier><Name>isShowProgress()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>isShowProgress--</Anchor></Token>
<Token><TokenIdentifier><Name>isShowTestSuites()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>isShowTestSuites--</Anchor></Token>
<Token><TokenIdentifier><Name>isShowViolations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>isShowViolations--</Anchor></Token>
<Token><TokenIdentifier><Name>isShowViolations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>isShowViolations--</Anchor></Token>
<Token><TokenIdentifier><Name>isSimple()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isSimple--</Anchor></Token>
<Token><TokenIdentifier><Name>isSkipUnmappedConfs()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>isSkipUnmappedConfs--</Anchor></Token>
<Token><TokenIdentifier><Name>isSolaris()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>isSolaris--</Anchor></Token>
<Token><TokenIdentifier><Name>isSplitIndex()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isSplitIndex--</Anchor></Token>
<Token><TokenIdentifier><Name>issueManagement(Action&lt;? super MavenPomIssueManagement&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>issueManagement-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>isSynthetic()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isSynthetic--</Anchor></Token>
<Token><TokenIdentifier><Name>isTestable()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
<Anchor>isTestable--</Anchor></Token>
<Token><TokenIdentifier><Name>isTrace()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>isTrace--</Anchor></Token>
<Token><TokenIdentifier><Name>isTraceLexer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>isTraceLexer--</Anchor></Token>
<Token><TokenIdentifier><Name>isTraceParser()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>isTraceParser--</Anchor></Token>
<Token><TokenIdentifier><Name>isTraceTreeWalker()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>isTraceTreeWalker--</Anchor></Token>
<Token><TokenIdentifier><Name>isTransitive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>isTransitive--</Anchor></Token>
<Token><TokenIdentifier><Name>isTransitive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>isTransitive--</Anchor></Token>
<Token><TokenIdentifier><Name>isTransitive()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyDependency.html</Path>
<Anchor>isTransitive--</Anchor></Token>
<Token><TokenIdentifier><Name>isUnchecked()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>isUnchecked--</Anchor></Token>
<Token><TokenIdentifier><Name>isUnchecked()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>isUnchecked--</Anchor></Token>
<Token><TokenIdentifier><Name>isUniqueVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
<Anchor>isUniqueVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>isUploadDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>isUploadDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>isUpToDate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskSuccessResult.html</Path>
<Anchor>isUpToDate--</Anchor></Token>
<Token><TokenIdentifier><Name>isUse()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>isUse--</Anchor></Token>
<Token><TokenIdentifier><Name>isUse()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isUse--</Anchor></Token>
<Token><TokenIdentifier><Name>isUseDefaultListeners()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>isUseDefaultListeners--</Anchor></Token>
<Token><TokenIdentifier><Name>isUseEmptySettings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isUseEmptySettings--</Anchor></Token>
<Token><TokenIdentifier><Name>isVerbose()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isVerbose--</Anchor></Token>
<Token><TokenIdentifier><Name>isVerbose()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>isVerbose--</Anchor></Token>
<Token><TokenIdentifier><Name>isVerbose()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>isVerbose--</Anchor></Token>
<Token><TokenIdentifier><Name>isVerbose()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>isVerbose--</Anchor></Token>
<Token><TokenIdentifier><Name>isVerbose()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>isVerbose--</Anchor></Token>
<Token><TokenIdentifier><Name>isVersion()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>isVersion--</Anchor></Token>
<Token><TokenIdentifier><Name>isVisible()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>isVisible--</Anchor></Token>
<Token><TokenIdentifier><Name>isWarnings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>isWarnings--</Anchor></Token>
<Token><TokenIdentifier><Name>isWildcard()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>isWildcard--</Anchor></Token>
<Token><TokenIdentifier><Name>isWindows()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>isWindows--</Anchor></Token>
<Token><TokenIdentifier><Name>isWindows()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
<Anchor>isWindows--</Anchor></Token>
<Token><TokenIdentifier><Name>isWithMessages()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsXmlReport.html</Path>
<Anchor>isWithMessages--</Anchor></Token>
<Token><TokenIdentifier><Name>isWriteDependencyLocks()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>isWriteDependencyLocks--</Anchor></Token>
<Token><TokenIdentifier><Name>isZip64()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>isZip64--</Anchor></Token>
<Token><TokenIdentifier><Name>ivy(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>ivy-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>ivy(Action&lt;? super IvyArtifactRepository&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>ivy-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ivy(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyPatternRepositoryLayout.html</Path>
<Anchor>ivy-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>IVY_ARTIFACT_PATTERN</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>IVY_ARTIFACT_PATTERN</Anchor></Token>
<Token><TokenIdentifier><Name>IvyArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyArtifactRepository</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyArtifactRepository.MetadataSources</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.MetadataSources.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyArtifactRepositoryMetaDataProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepositoryMetaDataProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyArtifactSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifactSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyConfigurationContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyConfigurationContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ivyDescriptor()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.MetadataSources.html</Path>
<Anchor>ivyDescriptor--</Anchor></Token>
<Token><TokenIdentifier><Name>IvyDescriptorArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ivy/IvyDescriptorArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyExtraInfo</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyExtraInfo.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyExtraInfoSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyExtraInfoSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyModule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ivy/IvyModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyModuleDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/IvyModuleDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyModuleDescriptorAuthor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorAuthor.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyModuleDescriptorDescription</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorDescription.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyModuleDescriptorLicense</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorLicense.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyModuleDescriptorSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>ivyPattern(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>ivyPattern-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>IvyPatternRepositoryLayout</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyPatternRepositoryLayout.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyPublication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyPublishPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/plugins/IvyPublishPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>IvyPublishPlugin(Instantiator, ObjectFactory, DependencyMetaDataProvider, FileResolver, ProjectDependencyPublicationResolver, FileCollectionFactory, ImmutableAttributesFactory, FeaturePreviews)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/plugins/IvyPublishPlugin.html</Path>
<Anchor>IvyPublishPlugin-org.gradle.internal.reflect.Instantiator-org.gradle.api.model.ObjectFactory-org.gradle.api.internal.artifacts.configurations.DependencyMetaDataProvider-org.gradle.api.internal.file.FileResolver-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectDependencyPublicationResolver-org.gradle.api.internal.file.FileCollectionFactory-org.gradle.api.internal.attributes.ImmutableAttributesFactory-org.gradle.api.internal.FeaturePreviews-</Anchor></Token>
<Token><TokenIdentifier><Name>iws(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaWorkspace.html</Path>
<Anchor>iws-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>iws(Action&lt;? super XmlFileContentMerger&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaWorkspace.html</Path>
<Anchor>iws-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoBase</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoBase.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoBase()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoBase.html</Path>
<Anchor>JacocoBase--</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoCoverageVerification</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoCoverageVerification.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoCoverageVerification()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoCoverageVerification.html</Path>
<Anchor>JacocoCoverageVerification--</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoLimit</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoMerge</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoMerge()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>JacocoMerge--</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoPlugin(Instantiator)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
<Anchor>JacocoPlugin-org.gradle.internal.reflect.Instantiator-</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoPluginExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoPluginExtension(Project, JacocoAgentJar)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>JacocoPluginExtension-org.gradle.api.Project-org.gradle.internal.jacoco.JacocoAgentJar-</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoReport</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoReport()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReport.html</Path>
<Anchor>JacocoReport--</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoReportBase</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoReportBase()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>JacocoReportBase--</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoReportsContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoTaskExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoTaskExtension(Project, JacocoAgentJar, JavaForkOptions)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>JacocoTaskExtension-org.gradle.api.Project-org.gradle.internal.jacoco.JacocoAgentJar-org.gradle.process.JavaForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>JacocoTaskExtension.Output</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.Output.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoViolationRule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
</Token>
<Token><TokenIdentifier><Name>JacocoViolationRulesContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRulesContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>Jar</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Jar.html</Path>
</Token>
<Token><TokenIdentifier><Name>Jar()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Jar.html</Path>
<Anchor>Jar--</Anchor></Token>
<Token><TokenIdentifier><Name>Jar</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
</Token>
<Token><TokenIdentifier><Name>Jar()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>Jar--</Anchor></Token>
<Token><TokenIdentifier><Name>JAR_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>JAR_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>JAR_TYPE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/ArtifactTypeDefinition.html</Path>
<Anchor>JAR_TYPE</Anchor></Token>
<Token><TokenIdentifier><Name>JarBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JarBinarySpec.TasksCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.TasksCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>JarDirectory</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
</Token>
<Token><TokenIdentifier><Name>JarDirectory(Path, boolean)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>JarDirectory-org.gradle.plugins.ide.idea.model.Path-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>java(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>java-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>java(Action&lt;? super SourceDirectorySet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>java-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>JAVA_API</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>JAVA_API</Anchor></Token>
<Token><TokenIdentifier><Name>JAVA_API_CLASSES</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>JAVA_API_CLASSES</Anchor></Token>
<Token><TokenIdentifier><Name>JAVA_RUNTIME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>JAVA_RUNTIME</Anchor></Token>
<Token><TokenIdentifier><Name>JAVA_RUNTIME_CLASSES</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>JAVA_RUNTIME_CLASSES</Anchor></Token>
<Token><TokenIdentifier><Name>JAVA_RUNTIME_JARS</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>JAVA_RUNTIME_JARS</Anchor></Token>
<Token><TokenIdentifier><Name>JAVA_RUNTIME_RESOURCES</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>JAVA_RUNTIME_RESOURCES</Anchor></Token>
<Token><TokenIdentifier><Name>JavaAppStartScriptGenerationDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/JavaAppStartScriptGenerationDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaBasePlugin(Instantiator, ObjectFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>JavaBasePlugin-org.gradle.internal.reflect.Instantiator-org.gradle.api.model.ObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>JavaCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>JavaCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>Javadoc</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
</Token>
<Token><TokenIdentifier><Name>Javadoc()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>Javadoc--</Anchor></Token>
<Token><TokenIdentifier><Name>JAVADOC_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>JAVADOC_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>JavadocArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/artifact/JavadocArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavadocMemberLevel</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocMemberLevel.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavadocOfflineLink</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOfflineLink.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavadocOfflineLink(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOfflineLink.html</Path>
<Anchor>JavadocOfflineLink-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>JavadocOptionFileOption</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOptionFileOption.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavadocOutputLevel</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOutputLevel.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaEnvironment</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/JavaEnvironment.html</Path>
</Token>
<Token><TokenIdentifier><Name>javaexec(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>javaexec-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>javaexec(Action&lt;? super JavaExecSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>javaexec-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>javaexec(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>javaexec-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>javaexec(Action&lt;? super JavaExecSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>javaexec-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>JavaExec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaExec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>JavaExec--</Anchor></Token>
<Token><TokenIdentifier><Name>JavaExecSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaForkOptions</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaGradlePluginPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/plugins/JavaGradlePluginPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaGradlePluginPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/plugins/JavaGradlePluginPlugin.html</Path>
<Anchor>JavaGradlePluginPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JavaLanguagePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/plugins/JavaLanguagePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaLanguagePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/plugins/JavaLanguagePlugin.html</Path>
<Anchor>JavaLanguagePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JavaLibraryDistributionPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaLibraryDistributionPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaLibraryDistributionPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaLibraryDistributionPlugin.html</Path>
<Anchor>JavaLibraryDistributionPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JavaLibraryPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaLibraryPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaLibraryPlugin(ObjectFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaLibraryPlugin.html</Path>
<Anchor>JavaLibraryPlugin-org.gradle.api.model.ObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>JavaPlatform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/platform/JavaPlatform.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaPlugin(ObjectFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>JavaPlugin-org.gradle.api.model.ObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>JavaPluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaPluginConvention(ProjectInternal, Instantiator)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>JavaPluginConvention-org.gradle.api.internal.project.ProjectInternal-org.gradle.internal.reflect.Instantiator-</Anchor></Token>
<Token><TokenIdentifier><Name>JavaRuntime</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/java/JavaRuntime.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaScriptBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaScriptBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptBasePlugin.html</Path>
<Anchor>JavaScriptBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JavaScriptExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaScriptExtension()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptExtension.html</Path>
<Anchor>JavaScriptExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>JavaScriptMinify</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaScriptMinify()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
<Anchor>JavaScriptMinify--</Anchor></Token>
<Token><TokenIdentifier><Name>JavaScriptRepositoriesExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaScriptRepositoriesExtension(RepositoryHandler)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>JavaScriptRepositoriesExtension-org.gradle.api.artifacts.dsl.RepositoryHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>JavaScriptSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/javascript/JavaScriptSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/JavaSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/JavaToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaToolChainRegistry</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/JavaToolChainRegistry.html</Path>
</Token>
<Token><TokenIdentifier><Name>JavaVersion</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
</Token>
<Token><TokenIdentifier><Name>jcenter(Action&lt;? super MavenArtifactRepository&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>jcenter-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>jcenter()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>jcenter--</Anchor></Token>
<Token><TokenIdentifier><Name>JDepend</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
</Token>
<Token><TokenIdentifier><Name>JDepend()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>JDepend--</Anchor></Token>
<Token><TokenIdentifier><Name>JDependExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>JDependExtension()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependExtension.html</Path>
<Anchor>JDependExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>JDependPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JDependPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependPlugin.html</Path>
<Anchor>JDependPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JDependReports</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDependReports.html</Path>
</Token>
<Token><TokenIdentifier><Name>Jdk</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
</Token>
<Token><TokenIdentifier><Name>Jdk(String, IdeaLanguageLevel)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>Jdk-java.lang.String-org.gradle.plugins.ide.idea.model.IdeaLanguageLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>Jdk(boolean, boolean, String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>Jdk-boolean-boolean-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>jdt(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>jdt-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>jdt(Action&lt;? super EclipseJdt&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>jdt-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Jdt</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Jdt.html</Path>
</Token>
<Token><TokenIdentifier><Name>Jdt(PropertiesTransformer)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Jdt.html</Path>
<Anchor>Jdt-org.gradle.api.internal.PropertiesTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>jFlags(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>jFlags-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>jFlags(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>jFlags-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>JS_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>JS_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>JsHint</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
</Token>
<Token><TokenIdentifier><Name>JsHint()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>JsHint--</Anchor></Token>
<Token><TokenIdentifier><Name>JsHintExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>JsHintExtension()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>JsHintExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>JsHintPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JsHintPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintPlugin.html</Path>
<Anchor>JsHintPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JUnitOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>JUnitOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
<Anchor>JUnitOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>JUnitPlatformOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>JUnitPlatformOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>JUnitPlatformOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>JUnitTestSuiteBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JUnitTestSuiteBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JUnitTestSuitePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JUnitTestSuitePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JUnitTestSuitePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JUnitTestSuitePlugin.html</Path>
<Anchor>JUnitTestSuitePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JUnitTestSuiteSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JUnitTestSuiteSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JUnitXmlReport</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/JUnitXmlReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>JVM_CLASS_DIRECTORY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/ArtifactTypeDefinition.html</Path>
<Anchor>JVM_CLASS_DIRECTORY</Anchor></Token>
<Token><TokenIdentifier><Name>JVM_RESOURCES_DIRECTORY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/ArtifactTypeDefinition.html</Path>
<Anchor>JVM_RESOURCES_DIRECTORY</Anchor></Token>
<Token><TokenIdentifier><Name>JvmApiSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmApiSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>jvmArgs(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>jvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>jvmArgs(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>jvmArgs-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>jvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>jvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>jvmArgs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>jvmArgs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>jvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>jvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>jvmArgs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>jvmArgs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>jvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>jvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>jvmArgs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>jvmArgs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>JvmBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmByteCode</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmByteCode.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmByteCode()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmByteCode.html</Path>
<Anchor>JvmByteCode--</Anchor></Token>
<Token><TokenIdentifier><Name>JvmClasses</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/JvmClasses.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmComponentPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JvmComponentPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmComponentPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JvmComponentPlugin.html</Path>
<Anchor>JvmComponentPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JvmComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmLibrarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmLibrarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmResources</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmResources.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmResources()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmResources.html</Path>
<Anchor>JvmResources--</Anchor></Token>
<Token><TokenIdentifier><Name>JvmResourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/JvmResourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmResourcesPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/plugins/JvmResourcesPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmResourcesPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/plugins/JvmResourcesPlugin.html</Path>
<Anchor>JvmResourcesPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JvmTestKind</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestKind.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmTestOperationDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestOperationDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmTestSuiteBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JvmTestSuiteBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmTestSuiteBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/JvmTestSuiteBasePlugin.html</Path>
<Anchor>JvmTestSuiteBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>JvmTestSuiteBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmTestSuiteBinarySpec.JvmTestSuiteTasks</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteBinarySpec.JvmTestSuiteTasks.html</Path>
</Token>
<Token><TokenIdentifier><Name>JvmTestSuiteSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JvmTestSuiteSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>keySet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeContainer.html</Path>
<Anchor>keySet--</Anchor></Token>
<Token><TokenIdentifier><Name>keySet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>keySet--</Anchor></Token>
<Token><TokenIdentifier><Name>keyWords(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>keyWords-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>keyWords()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>keyWords--</Anchor></Token>
<Token><TokenIdentifier><Name>LanguageBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LanguageBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>LanguageBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LanguageBasePlugin.html</Path>
<Anchor>LanguageBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>LanguageSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/LanguageSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>Launchable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Launchable.html</Path>
</Token>
<Token><TokenIdentifier><Name>layout(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>layout-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>layout(String, Action&lt;? extends RepositoryLayout&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>layout-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>layout(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>layout-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>leftShift(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>leftShift-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>length()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>length--</Anchor></Token>
<Token><TokenIdentifier><Name>lenient(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.ViewConfiguration.html</Path>
<Anchor>lenient-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>LenientConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/LenientConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>lib(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/DependentSourceSet.html</Path>
<Anchor>lib-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>lib(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
<Anchor>lib-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>lib(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>lib-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>lib(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>lib-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>lib(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>lib-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>lib(Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>lib-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>libDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>libDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>libraries(Action&lt;? super NamedDomainObjectContainer&lt;? super NativeLibrarySpec&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentExtension.html</Path>
<Anchor>libraries-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>library(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecContainer.html</Path>
<Anchor>library-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Library</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Library.html</Path>
</Token>
<Token><TokenIdentifier><Name>library(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ProjectDependencySpecBuilder.html</Path>
<Anchor>library-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Library</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Library.html</Path>
</Token>
<Token><TokenIdentifier><Name>Library(Node, FileReferenceFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Library.html</Path>
<Anchor>Library-groovy.util.Node-org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>Library(FileReference)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Library.html</Path>
<Anchor>Library-org.gradle.plugins.ide.eclipse.model.FileReference-</Anchor></Token>
<Token><TokenIdentifier><Name>LibraryBinaryDependencySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/LibraryBinaryDependencySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>LibraryBinaryIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryBinaryIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>LibraryBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/LibraryBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>LibraryComponentSelector</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/LibraryComponentSelector.html</Path>
</Token>
<Token><TokenIdentifier><Name>LibraryDependencies</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/LibraryDependencies.html</Path>
</Token>
<Token><TokenIdentifier><Name>LibrarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/LibrarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>license(Action&lt;? super IvyModuleDescriptorLicense&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>license-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>license(Action&lt;? super MavenPomLicense&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomLicenseSpec.html</Path>
<Anchor>license-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>licenses(Action&lt;? super MavenPomLicenseSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>licenses-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>lifecycle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>lifecycle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>lifecycle(String, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>lifecycle-java.lang.String-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>lifecycle(String, Throwable)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>lifecycle-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>LIFECYCLE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logging.html</Path>
<Anchor>LIFECYCLE</Anchor></Token>
<Token><TokenIdentifier><Name>lifecycle(Action&lt;TestLogging&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>lifecycle-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>LifecycleBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>LifecycleBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>LifecycleBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>limit(Action&lt;? super JacocoLimit&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>limit-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>link(String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>link-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>Link(String, String...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.Link.html</Path>
<Anchor>Link-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>link()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>link--</Anchor></Token>
<Token><TokenIdentifier><Name>link()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>link--</Anchor></Token>
<Token><TokenIdentifier><Name>Link</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
</Token>
<Token><TokenIdentifier><Name>Link(String, String, String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>Link-java.lang.String-java.lang.String-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Linkage</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Linkage.html</Path>
</Token>
<Token><TokenIdentifier><Name>LINKAGE_ATTRIBUTE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>LINKAGE_ATTRIBUTE</Anchor></Token>
<Token><TokenIdentifier><Name>linkedResource(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>linkedResource-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>LinkExecutable</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>LinkExecutable()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkExecutable.html</Path>
<Anchor>LinkExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>LinkMachOBundle</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkMachOBundle.html</Path>
</Token>
<Token><TokenIdentifier><Name>LinkMachOBundle()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkMachOBundle.html</Path>
<Anchor>LinkMachOBundle--</Anchor></Token>
<Token><TokenIdentifier><Name>links(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>links-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>linksFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>linksFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>LinkSharedLibrary</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkSharedLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>LinkSharedLibrary()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkSharedLibrary.html</Path>
<Anchor>LinkSharedLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>linksOffline(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>linksOffline-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>linksOfflineFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>linksOfflineFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>linkSource(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>linkSource-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>linkSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>linkSource--</Anchor></Token>
<Token><TokenIdentifier><Name>LINUX</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>LINUX</Anchor></Token>
<Token><TokenIdentifier><Name>ListenerFailedException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ListenerFailedException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ListenerFailedException(String, List&lt;? extends Throwable&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ListenerFailedException.html</Path>
<Anchor>ListenerFailedException-java.lang.String-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>listProperty(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/model/ObjectFactory.html</Path>
<Anchor>listProperty-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>ListProperty</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/ListProperty.html</Path>
</Token>
<Token><TokenIdentifier><Name>load(BuildCacheKey, BuildCacheEntryReader)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheService.html</Path>
<Anchor>load-org.gradle.caching.BuildCacheKey-org.gradle.caching.BuildCacheEntryReader-</Anchor></Token>
<Token><TokenIdentifier><Name>load(BuildCacheKey, BuildCacheEntryReader)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/MapBasedBuildCacheService.html</Path>
<Anchor>load-org.gradle.caching.BuildCacheKey-org.gradle.caching.BuildCacheEntryReader-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>load-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Properties)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Jdt.html</Path>
<Anchor>load-java.util.Properties-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>load-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>load-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>load-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>load-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>load-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>load(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Workspace.html</Path>
<Anchor>load-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>local(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>local-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>local(Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>local-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>local(Action&lt;? super BuildCache&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>local-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>locale(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>locale-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>locale(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>locale-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>localGroovy()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>localGroovy--</Anchor></Token>
<Token><TokenIdentifier><Name>LocalJava</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/LocalJava.html</Path>
</Token>
<Token><TokenIdentifier><Name>LocalState</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/LocalState.html</Path>
</Token>
<Token><TokenIdentifier><Name>lockAllConfigurations()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyLockingHandler.html</Path>
<Anchor>lockAllConfigurations--</Anchor></Token>
<Token><TokenIdentifier><Name>log(LogLevel, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>log-org.gradle.api.logging.LogLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>log(LogLevel, String, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>log-org.gradle.api.logging.LogLevel-java.lang.String-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>log(LogLevel, String, Throwable)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>log-org.gradle.api.logging.LogLevel-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>Logger</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
</Token>
<Token><TokenIdentifier><Name>LOGGER</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/AbstractScalaCompile.html</Path>
<Anchor>LOGGER</Anchor></Token>
<Token><TokenIdentifier><Name>Logging</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logging.html</Path>
</Token>
<Token><TokenIdentifier><Name>Logging()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logging.html</Path>
<Anchor>Logging--</Anchor></Token>
<Token><TokenIdentifier><Name>LoggingConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>LoggingManager</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingManager.html</Path>
</Token>
<Token><TokenIdentifier><Name>LoggingOutput</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingOutput.html</Path>
</Token>
<Token><TokenIdentifier><Name>LogLevel</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LogLevel.html</Path>
</Token>
<Token><TokenIdentifier><Name>LongRunningOperation</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
</Token>
<Token><TokenIdentifier><Name>MACOS</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>MACOS</Anchor></Token>
<Token><TokenIdentifier><Name>mailingList(Action&lt;? super MavenPomMailingList&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingListSpec.html</Path>
<Anchor>mailingList-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>mailingLists(Action&lt;? super MavenPomMailingListSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>mailingLists-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>MAIN_DISTRIBUTION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/plugins/DistributionPlugin.html</Path>
<Anchor>MAIN_DISTRIBUTION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>MAIN_SOURCE_SET_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>MAIN_SOURCE_SET_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>Managed</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Managed.html</Path>
</Token>
<Token><TokenIdentifier><Name>Manifest</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
</Token>
<Token><TokenIdentifier><Name>manifest()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>manifest--</Anchor></Token>
<Token><TokenIdentifier><Name>manifest(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>manifest-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>manifest(Action&lt;? super Manifest&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>manifest-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>manifest(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Jar.html</Path>
<Anchor>manifest-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>manifest(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>manifest-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>manifest(Action&lt;? super Manifest&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>manifest-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ManifestException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ManifestException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestException.html</Path>
<Anchor>ManifestException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ManifestException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestException.html</Path>
<Anchor>ManifestException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ManifestMergeDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>ManifestMergeSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>map(Transformer&lt;? extends S, ? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Provider.html</Path>
<Anchor>map-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>MapBasedBuildCacheService</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/MapBasedBuildCacheService.html</Path>
</Token>
<Token><TokenIdentifier><Name>MapBasedBuildCacheService(ConcurrentMap&lt;String, byte[]&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/MapBasedBuildCacheService.html</Path>
<Anchor>MapBasedBuildCacheService-java.util.concurrent.ConcurrentMap-</Anchor></Token>
<Token><TokenIdentifier><Name>matcher(Action&lt;? super ResourceFilterMatcher&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>matcher-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>matcher(Action&lt;? super ResourceFilterMatcher&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterMatcher.html</Path>
<Anchor>matcher-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>matchesStrictly(ComponentIdentifier)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ComponentSelector.html</Path>
<Anchor>matchesStrictly-org.gradle.api.artifacts.component.ComponentIdentifier-</Anchor></Token>
<Token><TokenIdentifier><Name>matchesStrictly(ModuleVersionIdentifier)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionSelector.html</Path>
<Anchor>matchesStrictly-org.gradle.api.artifacts.ModuleVersionIdentifier-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>matching-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectSet.html</Path>
<Anchor>matching-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectSet.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Action&lt;? super PatternFilterable&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>matching-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(PatternFilterable)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>matching-org.gradle.api.tasks.util.PatternFilterable-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>matching-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectList.html</Path>
<Anchor>matching-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectList.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectSet.html</Path>
<Anchor>matching-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectSet.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>matching-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>matching-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>matching(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>matching-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>maven(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>maven-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>maven(Action&lt;? super MavenArtifactRepository&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>maven-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>MAVEN_ARTIFACT_PATTERN</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>MAVEN_ARTIFACT_PATTERN</Anchor></Token>
<Token><TokenIdentifier><Name>MAVEN_CENTRAL_URL</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactRepositoryContainer.html</Path>
<Anchor>MAVEN_CENTRAL_URL</Anchor></Token>
<Token><TokenIdentifier><Name>MAVEN_IVY_PATTERN</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>MAVEN_IVY_PATTERN</Anchor></Token>
<Token><TokenIdentifier><Name>MavenArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenArtifactRepository</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenArtifactRepository.MetadataSources</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.MetadataSources.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenArtifactSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifactSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>mavenCentral(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>mavenCentral-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenCentral()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>mavenCentral--</Anchor></Token>
<Token><TokenIdentifier><Name>MavenDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenDeployer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
</Token>
<Token><TokenIdentifier><Name>mavenDeployer()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenDeployer--</Anchor></Token>
<Token><TokenIdentifier><Name>mavenDeployer(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenDeployer-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenDeployer(Action&lt;? super GroovyMavenDeployer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenDeployer-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenDeployer(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenDeployer-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenDeployer(Map&lt;String, ?&gt;, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenDeployer-java.util.Map-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenDeployer(Map&lt;String, ?&gt;, Action&lt;? super GroovyMavenDeployer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenDeployer-java.util.Map-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>MavenDeployment</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployment.html</Path>
</Token>
<Token><TokenIdentifier><Name>mavenInstaller()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenInstaller--</Anchor></Token>
<Token><TokenIdentifier><Name>mavenInstaller(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenInstaller-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenInstaller(Action&lt;? super MavenResolver&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenInstaller-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenInstaller(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenInstaller-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenInstaller(Map&lt;String, ?&gt;, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenInstaller-java.util.Map-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenInstaller(Map&lt;String, ?&gt;, Action&lt;? super MavenResolver&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
<Anchor>mavenInstaller-java.util.Map-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>mavenLocal()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
<Anchor>mavenLocal--</Anchor></Token>
<Token><TokenIdentifier><Name>MavenModule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/maven/MavenModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPlugin(Factory&lt;LoggingManagerInternal&gt;, FileResolver, ProjectPublicationRegistry, ProjectConfigurationActionContainer, MavenSettingsProvider, LocalMavenRepositoryLocator, ImmutableModuleIdentifie</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>MavenPlugin-org.gradle.internal.Factory-org.gradle.api.internal.file.FileResolver-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry-org.gradle.configuration.project.ProjectConfigurationActionContainer-org.gradle.api.internal.artifacts.mvnsettings.MavenSettingsProvider-org.gradle.api.internal.artifacts.mvnsettings.LocalMavenRepositoryLocator-org.gradle.api.internal.artifacts.ImmutableModuleIdentifierFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>MavenPluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPluginConvention(ProjectInternal, MavenFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>MavenPluginConvention-org.gradle.api.internal.project.ProjectInternal-org.gradle.api.publication.maven.internal.MavenFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>MavenPom</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
</Token>
<Token><TokenIdentifier><Name>mavenPom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.MetadataSources.html</Path>
<Anchor>mavenPom--</Anchor></Token>
<Token><TokenIdentifier><Name>MavenPom</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/maven/MavenPomArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomCiManagement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomCiManagement.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomContributor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributor.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomContributorSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomContributorSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomDeveloper</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloper.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomDeveloperSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDeveloperSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomDistributionManagement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDistributionManagement.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomIssueManagement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomIssueManagement.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomLicense</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomLicense.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomLicenseSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomLicenseSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomMailingList</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingList.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomMailingListSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomMailingListSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomOrganization</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomOrganization.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomRelocation</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomRelocation.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPomScm</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomScm.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPublication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPublishPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/plugins/MavenPublishPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenPublishPlugin(Instantiator, ObjectFactory, DependencyMetaDataProvider, FileResolver, ProjectDependencyPublicationResolver, FileCollectionFactory, FeaturePreviews, ImmutableAttributesFactory, Prov</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/plugins/MavenPublishPlugin.html</Path>
<Anchor>MavenPublishPlugin-org.gradle.internal.reflect.Instantiator-org.gradle.api.model.ObjectFactory-org.gradle.api.internal.artifacts.configurations.DependencyMetaDataProvider-org.gradle.api.internal.file.FileResolver-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectDependencyPublicationResolver-org.gradle.api.internal.file.FileCollectionFactory-org.gradle.api.internal.FeaturePreviews-org.gradle.api.internal.attributes.ImmutableAttributesFactory-org.gradle.api.provider.ProviderFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>MavenRepositoryHandlerConvention</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenRepositoryHandlerConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>MavenResolver</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenResolver.html</Path>
</Token>
<Token><TokenIdentifier><Name>maybeCreate(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectContainer.html</Path>
<Anchor>maybeCreate-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>maybeCreate(String, Class&lt;U&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PolymorphicDomainObjectContainer.html</Path>
<Anchor>maybeCreate-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>merge()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>merge--</Anchor></Token>
<Token><TokenIdentifier><Name>mergeXmlClasspath(Classpath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>mergeXmlClasspath-org.gradle.plugins.ide.eclipse.model.Classpath-</Anchor></Token>
<Token><TokenIdentifier><Name>mergeXmlComponent(WtpComponent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>mergeXmlComponent-org.gradle.plugins.ide.eclipse.model.WtpComponent-</Anchor></Token>
<Token><TokenIdentifier><Name>mergeXmlFacet(WtpFacet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>mergeXmlFacet-org.gradle.plugins.ide.eclipse.model.WtpFacet-</Anchor></Token>
<Token><TokenIdentifier><Name>mergeXmlModule(Module)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>mergeXmlModule-org.gradle.plugins.ide.idea.model.Module-</Anchor></Token>
<Token><TokenIdentifier><Name>mergeXmlProject(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>mergeXmlProject-org.gradle.plugins.ide.eclipse.model.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>mergeXmlProject(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>mergeXmlProject-org.gradle.plugins.ide.idea.model.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>mergeXmlWorkspace(Workspace)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaWorkspace.html</Path>
<Anchor>mergeXmlWorkspace-org.gradle.plugins.ide.idea.model.Workspace-</Anchor></Token>
<Token><TokenIdentifier><Name>METADATA_FILE_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>METADATA_FILE_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>metadataSources(Action&lt;? super IvyArtifactRepository.MetadataSources&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>metadataSources-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>metadataSources(Action&lt;? super MavenArtifactRepository.MetadataSources&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>metadataSources-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>metaInf(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>metaInf-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>metaInf(Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>metaInf-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>methodMissing(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>methodMissing-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>MicrosoftVisualCppCompilerPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/MicrosoftVisualCppCompilerPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>MicrosoftVisualCppCompilerPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/MicrosoftVisualCppCompilerPlugin.html</Path>
<Anchor>MicrosoftVisualCppCompilerPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>MinimalJavadocOptions</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>minus(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>minus-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>MissingResourceException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/MissingResourceException.html</Path>
</Token>
<Token><TokenIdentifier><Name>MissingResourceException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/MissingResourceException.html</Path>
<Anchor>MissingResourceException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>MissingResourceException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/MissingResourceException.html</Path>
<Anchor>MissingResourceException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>MissingResourceException(URI, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/MissingResourceException.html</Path>
<Anchor>MissingResourceException-java.net.URI-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>MissingResourceException(URI, String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/MissingResourceException.html</Path>
<Anchor>MissingResourceException-java.net.URI-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>mkdir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>mkdir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>mkdir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>mkdir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>Model</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Model.html</Path>
</Token>
<Token><TokenIdentifier><Name>Model</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Model.html</Path>
</Token>
<Token><TokenIdentifier><Name>model(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>model-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>MODEL_TASK</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>MODEL_TASK</Anchor></Token>
<Token><TokenIdentifier><Name>ModelBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ModelBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelElement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelElement.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelInstantiationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModelInstantiationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelInstantiationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModelInstantiationException.html</Path>
<Anchor>ModelInstantiationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ModelInstantiationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModelInstantiationException.html</Path>
<Anchor>ModelInstantiationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ModelMap</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelReport</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelReport()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>ModelReport--</Anchor></Token>
<Token><TokenIdentifier><Name>ModelReport.Format</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.Format.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelRuleBindingException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelRuleBindingException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelRuleBindingException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelRuleBindingException.html</Path>
<Anchor>ModelRuleBindingException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ModelSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelViewClosedException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelViewClosedException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModelViewClosedException(ModelPath, ModelType&lt;?&gt;, ModelRuleDescriptor)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelViewClosedException.html</Path>
<Anchor>ModelViewClosedException-org.gradle.model.internal.core.ModelPath-org.gradle.model.internal.type.ModelType-org.gradle.model.internal.core.rule.describe.ModelRuleDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>module(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.html</Path>
<Anchor>module-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>module(Object, Action&lt;? super ComponentModuleMetadata&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentModuleMetadataHandler.html</Path>
<Anchor>module-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>module(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>module-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>module(Object, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>module-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>module(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecContainer.html</Path>
<Anchor>module-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>module(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpecBuilder.html</Path>
<Anchor>module-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>module(EarModule, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>module-org.gradle.plugins.ear.descriptor.EarModule-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>module(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>module-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>module(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>module-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>module(Action&lt;? super IdeaModule&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>module-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Module</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
</Token>
<Token><TokenIdentifier><Name>Module(XmlTransformer, PathFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>Module-org.gradle.internal.xml.XmlTransformer-org.gradle.plugins.ide.idea.model.PathFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>MODULE_KEY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExcludeRule.html</Path>
<Anchor>MODULE_KEY</Anchor></Token>
<Token><TokenIdentifier><Name>ModuleComponentIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleComponentSelector</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ModuleComponentSelector.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleDependency</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleDependency(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>ModuleDependency-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ModuleDependencySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleDependencySpecBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpecBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleLibrary</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleLibrary(Collection&lt;? extends Path&gt;, Collection&lt;? extends Path&gt;, Collection&lt;? extends Path&gt;, Collection&lt;JarDirectory&gt;, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>ModuleLibrary-java.util.Collection-java.util.Collection-java.util.Collection-java.util.Collection-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>modules(Action&lt;? super ComponentModuleMetadataHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>modules-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ModuleVersionIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ModuleVersionSelector</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleVersionSelector.html</Path>
</Token>
<Token><TokenIdentifier><Name>MultipleCandidatesDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/MultipleCandidatesDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>mustRunAfter(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>mustRunAfter-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>MutableCapabilitiesMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/MutableCapabilitiesMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>MutableVersionConstraint</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/MutableVersionConstraint.html</Path>
</Token>
<Token><TokenIdentifier><Name>Mutate</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Mutate.html</Path>
</Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrSourceVirtualDirectory.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublishingExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/JavaScriptRepositoriesExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>NAME</Anchor></Token>
<Token><TokenIdentifier><Name>named(Class&lt;T&gt;, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/model/ObjectFactory.html</Path>
<Anchor>named-java.lang.Class-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Named</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Named.html</Path>
</Token>
<Token><TokenIdentifier><Name>named(String, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>named-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>named(String, Class&lt;? extends RuleSource&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>named-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>Named.Namer</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Named.Namer.html</Path>
</Token>
<Token><TokenIdentifier><Name>NamedDomainObjectCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>NamedDomainObjectContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>NamedDomainObjectFactory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>NamedDomainObjectList</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectList.html</Path>
</Token>
<Token><TokenIdentifier><Name>NamedDomainObjectSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>Namer()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.Namer.html</Path>
<Anchor>Namer--</Anchor></Token>
<Token><TokenIdentifier><Name>Namer()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Named.Namer.html</Path>
<Anchor>Namer--</Anchor></Token>
<Token><TokenIdentifier><Name>Namer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Namer.html</Path>
</Token>
<Token><TokenIdentifier><Name>NAMER</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
<Anchor>NAMER</Anchor></Token>
<Token><TokenIdentifier><Name>Namer()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.Namer.html</Path>
<Anchor>Namer--</Anchor></Token>
<Token><TokenIdentifier><Name>Namer.Comparator</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Namer.Comparator.html</Path>
</Token>
<Token><TokenIdentifier><Name>NATIVE_LINK</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>NATIVE_LINK</Anchor></Token>
<Token><TokenIdentifier><Name>NATIVE_RUNTIME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>NATIVE_RUNTIME</Anchor></Token>
<Token><TokenIdentifier><Name>NativeBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/plugins/NativeBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/plugins/NativeBasePlugin.html</Path>
<Anchor>NativeBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>NativeBinariesTestPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/plugins/NativeBinariesTestPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeBinariesTestPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/plugins/NativeBinariesTestPlugin.html</Path>
<Anchor>NativeBinariesTestPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>NativeBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeComponentExtension</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeComponentModelPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/plugins/NativeComponentModelPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeComponentModelPlugin(Instantiator)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/plugins/NativeComponentModelPlugin.html</Path>
<Anchor>NativeComponentModelPlugin-org.gradle.internal.reflect.Instantiator-</Anchor></Token>
<Token><TokenIdentifier><Name>NativeComponentPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/plugins/NativeComponentPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeComponentPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/plugins/NativeComponentPlugin.html</Path>
<Anchor>NativeComponentPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>NativeComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeDependencySet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeDependencySet.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeExecutable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeExecutableBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeExecutableBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeExecutableBinarySpec.TasksCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableBinarySpec.TasksCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeExecutableFileSpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableFileSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeExecutableFileSpec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableFileSpec.html</Path>
<Anchor>NativeExecutableFileSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>NativeExecutableSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeInstallationSpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeInstallationSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeInstallationSpec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeInstallationSpec.html</Path>
<Anchor>NativeInstallationSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>NativeLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeLibraryBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeLibraryBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeLibraryRequirement</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryRequirement.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeLibrarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibrarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativePlatform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/NativePlatform.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativePlatformToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/NativePlatformToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeResourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/NativeResourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeTestingBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/plugins/NativeTestingBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeTestingBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/plugins/NativeTestingBasePlugin.html</Path>
<Anchor>NativeTestingBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>NativeTestSuiteBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeTestSuiteBinarySpec.TasksCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteBinarySpec.TasksCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeTestSuiteSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/NativeTestSuiteSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/NativeToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>NativeToolChainRegistry</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/NativeToolChainRegistry.html</Path>
</Token>
<Token><TokenIdentifier><Name>natures(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>natures-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>negate(Spec&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>negate-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>Nested</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Nested.html</Path>
</Token>
<Token><TokenIdentifier><Name>newBuild()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>newBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>newBuild()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>newBuild--</Anchor></Token>
<Token><TokenIdentifier><Name>newCancellationTokenSource()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>newCancellationTokenSource--</Anchor></Token>
<Token><TokenIdentifier><Name>newConnector()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>newConnector--</Anchor></Token>
<Token><TokenIdentifier><Name>newDirectoryVar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>newDirectoryVar--</Anchor></Token>
<Token><TokenIdentifier><Name>newFileVar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
<Anchor>newFileVar--</Anchor></Token>
<Token><TokenIdentifier><Name>newInputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DefaultTask.html</Path>
<Anchor>newInputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>newInputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DefaultTask.html</Path>
<Anchor>newInputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>newInstance(Class&lt;? extends T&gt;, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/model/ObjectFactory.html</Path>
<Anchor>newInstance-java.lang.Class-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>newInstance()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>newInstance--</Anchor></Token>
<Token><TokenIdentifier><Name>newOutputDirectory()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DefaultTask.html</Path>
<Anchor>newOutputDirectory--</Anchor></Token>
<Token><TokenIdentifier><Name>newOutputFile()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DefaultTask.html</Path>
<Anchor>newOutputFile--</Anchor></Token>
<Token><TokenIdentifier><Name>newTestLauncher()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
<Anchor>newTestLauncher--</Anchor></Token>
<Token><TokenIdentifier><Name>noComment(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noComment-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noComment()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noComment--</Anchor></Token>
<Token><TokenIdentifier><Name>noDeprecated(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noDeprecated-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noDeprecated()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noDeprecated--</Anchor></Token>
<Token><TokenIdentifier><Name>noDeprecatedList(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noDeprecatedList-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noDeprecatedList()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noDeprecatedList--</Anchor></Token>
<Token><TokenIdentifier><Name>noHelp(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noHelp-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noHelp()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noHelp--</Anchor></Token>
<Token><TokenIdentifier><Name>noIndex(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noIndex-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noIndex()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noIndex--</Anchor></Token>
<Token><TokenIdentifier><Name>noNavBar(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noNavBar-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noNavBar()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noNavBar--</Anchor></Token>
<Token><TokenIdentifier><Name>NonExtensible</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NonExtensible.html</Path>
</Token>
<Token><TokenIdentifier><Name>NonNullApi</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NonNullApi.html</Path>
</Token>
<Token><TokenIdentifier><Name>noQualifier(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noQualifier-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>noQualifiers(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noQualifiers-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>normalization(Action&lt;? super InputNormalizationHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>normalization-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>normalizeKeyId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>normalizeKeyId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>normalizePath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>normalizePath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>noSince(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noSince-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noSince()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noSince--</Anchor></Token>
<Token><TokenIdentifier><Name>noTimestamp</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noTimestamp</Anchor></Token>
<Token><TokenIdentifier><Name>noTimestamp(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noTimestamp-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noTimestamp()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noTimestamp--</Anchor></Token>
<Token><TokenIdentifier><Name>noTree(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noTree-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>noTree()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>noTree--</Anchor></Token>
<Token><TokenIdentifier><Name>NotSpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/NotSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>NotSpec(Spec&lt;? super T&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/NotSpec.html</Path>
<Anchor>NotSpec-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>Nullable</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Nullable.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectConfigurationAction</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ObjectConfigurationAction.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectFactory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/model/ObjectFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectFile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/ObjectFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectFile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/ObjectFile.html</Path>
<Anchor>ObjectFile--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectFilesToBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ObjectFilesToBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectInstantiationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/ObjectInstantiationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectInstantiationException(Class&lt;?&gt;, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/ObjectInstantiationException.html</Path>
<Anchor>ObjectInstantiationException-java.lang.Class-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/tasks/ObjectiveCCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/tasks/ObjectiveCCompile.html</Path>
<Anchor>ObjectiveCCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCLangPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/plugins/ObjectiveCLangPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCLangPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/plugins/ObjectiveCLangPlugin.html</Path>
<Anchor>ObjectiveCLangPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/plugins/ObjectiveCPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/plugins/ObjectiveCPlugin.html</Path>
<Anchor>ObjectiveCPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCppCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/tasks/ObjectiveCppCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCppCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/tasks/ObjectiveCppCompile.html</Path>
<Anchor>ObjectiveCppCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCppLangPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/plugins/ObjectiveCppLangPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCppLangPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/plugins/ObjectiveCppLangPlugin.html</Path>
<Anchor>ObjectiveCppLangPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCppPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/plugins/ObjectiveCppPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCppPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/plugins/ObjectiveCppPlugin.html</Path>
<Anchor>ObjectiveCppPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCppPreCompiledHeaderCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/tasks/ObjectiveCppPreCompiledHeaderCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCppPreCompiledHeaderCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/tasks/ObjectiveCppPreCompiledHeaderCompile.html</Path>
<Anchor>ObjectiveCppPreCompiledHeaderCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCppSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/ObjectiveCppSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCPreCompiledHeaderCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/tasks/ObjectiveCPreCompiledHeaderCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ObjectiveCPreCompiledHeaderCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/tasks/ObjectiveCPreCompiledHeaderCompile.html</Path>
<Anchor>ObjectiveCPreCompiledHeaderCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>ObjectiveCSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/ObjectiveCSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>of(String, Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
<Anchor>of-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>of(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
<Anchor>of-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>onApply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/plugins/VisualStudioPlugin.html</Path>
<Anchor>onApply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>onApply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/plugins/XcodePlugin.html</Path>
<Anchor>onApply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>onApply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>onApply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>onApply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
<Anchor>onApply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>onApply(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
<Anchor>onApply-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>onComplete(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/IntermediateResultHandler.html</Path>
<Anchor>onComplete-T-</Anchor></Token>
<Token><TokenIdentifier><Name>onComplete(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ResultHandler.html</Path>
<Anchor>onComplete-T-</Anchor></Token>
<Token><TokenIdentifier><Name>onFailure(GradleConnectionException)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ResultHandler.html</Path>
<Anchor>onFailure-org.gradle.tooling.GradleConnectionException-</Anchor></Token>
<Token><TokenIdentifier><Name>onlyIf(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>onlyIf-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>onlyIf(Spec&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>onlyIf-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>onOutput(CharSequence)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/StandardOutputListener.html</Path>
<Anchor>onOutput-java.lang.CharSequence-</Anchor></Token>
<Token><TokenIdentifier><Name>onOutput(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>onOutput-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>onOutput(TestDescriptor, TestOutputEvent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputListener.html</Path>
<Anchor>onOutput-org.gradle.api.tasks.testing.TestDescriptor-org.gradle.api.tasks.testing.TestOutputEvent-</Anchor></Token>
<Token><TokenIdentifier><Name>open()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTreeElement.html</Path>
<Anchor>open--</Anchor></Token>
<Token><TokenIdentifier><Name>OPERATING_SYSTEM_ATTRIBUTE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>OPERATING_SYSTEM_ATTRIBUTE</Anchor></Token>
<Token><TokenIdentifier><Name>operatingSystem(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/NativePlatform.html</Path>
<Anchor>operatingSystem-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>OperatingSystem</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/OperatingSystem.html</Path>
</Token>
<Token><TokenIdentifier><Name>OperatingSystemFamily</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
</Token>
<Token><TokenIdentifier><Name>OperatingSystemFamily()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>OperatingSystemFamily--</Anchor></Token>
<Token><TokenIdentifier><Name>OperationDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>OperationResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>OperationType</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationType.html</Path>
</Token>
<Token><TokenIdentifier><Name>OPTIMIZED_ATTRIBUTE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppBinary.html</Path>
<Anchor>OPTIMIZED_ATTRIBUTE</Anchor></Token>
<Token><TokenIdentifier><Name>Option</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/options/Option.html</Path>
</Token>
<Token><TokenIdentifier><Name>Optional</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Optional.html</Path>
</Token>
<Token><TokenIdentifier><Name>optional()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>optional--</Anchor></Token>
<Token><TokenIdentifier><Name>optional(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>optional-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>optional(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>optional-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>optional()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>optional--</Anchor></Token>
<Token><TokenIdentifier><Name>optional(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>optional-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>optionFile</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>optionFile</Anchor></Token>
<Token><TokenIdentifier><Name>optionFiles(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>optionFiles-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>optionFiles(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>optionFiles-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>OptionLessJavadocOptionFileOption</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/OptionLessJavadocOptionFileOption.html</Path>
</Token>
<Token><TokenIdentifier><Name>optionMap()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractOptions.html</Path>
<Anchor>optionMap--</Anchor></Token>
<Token><TokenIdentifier><Name>optionMap()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>optionMap--</Anchor></Token>
<Token><TokenIdentifier><Name>optionMap()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>optionMap--</Anchor></Token>
<Token><TokenIdentifier><Name>options(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>options-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>options(Action&lt;? super MinimalJavadocOptions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>options-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>options(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>options-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>options(Action&lt;? super TestFrameworkOptions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>options-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>options(Action&lt;CoffeeScriptCompileOptions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>options-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>options(Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>options-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>OptionValues</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/options/OptionValues.html</Path>
</Token>
<Token><TokenIdentifier><Name>or(Spec&lt;? super T&gt;...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>or-org.gradle.api.specs.Spec...-</Anchor></Token>
<Token><TokenIdentifier><Name>ordered(Comparator&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeMatchingStrategy.html</Path>
<Anchor>ordered-java.util.Comparator-</Anchor></Token>
<Token><TokenIdentifier><Name>ordered(boolean, Comparator&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/AttributeMatchingStrategy.html</Path>
<Anchor>ordered-boolean-java.util.Comparator-</Anchor></Token>
<Token><TokenIdentifier><Name>ordered(Comparator&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityRuleChain.html</Path>
<Anchor>ordered-java.util.Comparator-</Anchor></Token>
<Token><TokenIdentifier><Name>org.gradle</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.component</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.dsl</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.ivy</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ivy/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.maven</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.query</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.repositories</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.result</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.transform</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.artifacts.type</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/type/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.attributes</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.capabilities</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.component</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.credentials</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.distribution</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.distribution.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.dsl</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/dsl/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.execution</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.file</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.initialization</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.initialization.definition</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/definition/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.initialization.dsl</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.invocation</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.java.archives</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.logging</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.logging.configuration</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.model</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/model/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.plugins.announce</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.plugins.antlr</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.plugins.buildcomparison.gradle</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.plugins.osgi</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.plugins.quality</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.plugins.scala</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.provider</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.ivy</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.ivy.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.ivy.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.maven</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.maven.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.maven.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.publish.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.reflect</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.reporting</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.reporting.components</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.reporting.dependencies</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.reporting.dependents</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.reporting.model</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.reporting.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.resources</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.specs</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.ant</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.application</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/application/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.bundling</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.compile</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.diagnostics</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.incremental</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.javadoc</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.options</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/options/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.scala</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.testing</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.testing.junit</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.testing.junitplatform</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.testing.logging</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.testing.testng</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.util</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.api.tasks.wrapper</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.authentication</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/authentication/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.authentication.aws</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/authentication/aws/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.authentication.http</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/authentication/http/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.buildinit.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.buildinit.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.caching</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.caching.configuration</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.caching.http</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.caching.local</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.concurrent</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/concurrent/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.external.javadoc</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.ide.visualstudio</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.ide.visualstudio.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.ide.visualstudio.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.ide.xcode</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.ide.xcode.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.ide.xcode.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.ivy</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ivy/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.application.scripts</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.application.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.platform</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/platform/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.tasks.api</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.test</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.jvm.toolchain</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.assembler</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.assembler.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.assembler.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.base</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.base.artifact</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/artifact/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.base.compile</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/compile/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.base.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.base.sources</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/sources/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.c</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.c.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.c.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/c/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.coffeescript</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/coffeescript/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.cpp</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.cpp.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.cpp.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.java</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.java.artifact</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/artifact/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.java.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.java.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.javascript</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/javascript/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.jvm</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.jvm.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.jvm.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.nativeplatform</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.nativeplatform.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.objectivec</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.objectivec.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.objectivec.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivec/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.objectivecpp</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.objectivecpp.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.objectivecpp.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/objectivecpp/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.rc</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.rc.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.rc.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.routes</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/routes/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.scala</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.scala.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.scala.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.scala.toolchain</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/toolchain/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.swift</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.swift.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.swift.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.language.twirl</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.maven</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/maven/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.model</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.platform</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/platform/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.cpp</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.cpp.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cpp/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.cunit</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.cunit.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.cunit.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.googletest</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.googletest.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/googletest/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.xctest</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.xctest.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.test.xctest.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.toolchain</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.nativeplatform.toolchain.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.normalization</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/normalization/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.platform.base</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.platform.base.binary</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.platform.base.component</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/component/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.platform.base.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.play</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.play.distribution</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/distribution/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.play.platform</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/platform/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.play.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.play.plugins.ide</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/ide/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.play.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.play.toolchain</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/toolchain/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugin.devel</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugin.devel.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugin.devel.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugin.management</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugin.use</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ear</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ear.descriptor</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ide</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ide.api</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ide.eclipse</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ide.eclipse.model</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ide.idea</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.ide.idea.model</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.base</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.coffeescript</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.envjs</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.envjs.browser</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.envjs.http</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.envjs.http.simple</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.jshint</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.javascript.rhino</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.signing</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.signing.signatory</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.signing.signatory.pgp</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.signing.type</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.plugins.signing.type.pgp</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/pgp/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.process</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.swiftpm</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.swiftpm.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.swiftpm.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.testfixtures</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.testing.base</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.testing.base.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.testing.jacoco.plugins</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.testing.jacoco.tasks</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.testing.jacoco.tasks.rules</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.testkit.runner</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.events</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.events.task</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.events.test</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.exceptions</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/exceptions/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.model</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.model.build</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/build/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.model.eclipse</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/eclipse/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.model.gradle</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.model.idea</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/idea/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.model.java</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/java/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.tooling.provider.model</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.vcs</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.vcs.git</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/git/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>org.gradle.workers</Name><Type>Package</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/package-summary.html</Path>
</Token>
<Token><TokenIdentifier><Name>organization(Action&lt;? super MavenPomOrganization&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>organization-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>OrSpec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>OrSpec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>OrSpec--</Anchor></Token>
<Token><TokenIdentifier><Name>OrSpec(Spec&lt;? super T&gt;...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>OrSpec-org.gradle.api.specs.Spec...-</Anchor></Token>
<Token><TokenIdentifier><Name>OrSpec(Iterable&lt;? extends Spec&lt;? super T&gt;&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/OrSpec.html</Path>
<Anchor>OrSpec-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>OsgiManifest</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
</Token>
<Token><TokenIdentifier><Name>osgiManifest()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPluginConvention.html</Path>
<Anchor>osgiManifest--</Anchor></Token>
<Token><TokenIdentifier><Name>osgiManifest(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPluginConvention.html</Path>
<Anchor>osgiManifest-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>osgiManifest(Action&lt;? super OsgiManifest&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPluginConvention.html</Path>
<Anchor>osgiManifest-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>OsgiPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>OsgiPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPlugin.html</Path>
<Anchor>OsgiPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>OsgiPluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>OsgiPluginConvention(ProjectInternal)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiPluginConvention.html</Path>
<Anchor>OsgiPluginConvention-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>outgoing(Action&lt;? super ConfigurationPublications&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>outgoing-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>outOfDate(Action&lt;? super InputFileDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/IncrementalTaskInputs.html</Path>
<Anchor>outOfDate-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Output</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
</Token>
<Token><TokenIdentifier><Name>Output(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>Output-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>Output(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>Output-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>OutputDirectories</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/OutputDirectories.html</Path>
</Token>
<Token><TokenIdentifier><Name>OutputDirectory</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/OutputDirectory.html</Path>
</Token>
<Token><TokenIdentifier><Name>OutputFile</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/OutputFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>OutputFiles</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/OutputFiles.html</Path>
</Token>
<Token><TokenIdentifier><Name>overview(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>overview-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>overview(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>overview-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Package</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/Package.html</Path>
</Token>
<Token><TokenIdentifier><Name>ParallelismConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/concurrent/ParallelismConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>ParameterizedToolingModelBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ParameterizedToolingModelBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>parameterizedTypeOf(TypeOf&lt;?&gt;, TypeOf&lt;?&gt;...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>parameterizedTypeOf-org.gradle.api.reflect.TypeOf-org.gradle.api.reflect.TypeOf...-</Anchor></Token>
<Token><TokenIdentifier><Name>params(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ActionConfiguration.html</Path>
<Anchor>params-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>parse(boolean, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>parse-boolean-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>parse(boolean, RelativePath, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>parse-boolean-org.gradle.api.file.RelativePath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PasswordCredentials</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/PasswordCredentials.html</Path>
</Token>
<Token><TokenIdentifier><Name>PasswordCredentials</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/PasswordCredentials.html</Path>
</Token>
<Token><TokenIdentifier><Name>Path</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Path.html</Path>
</Token>
<Token><TokenIdentifier><Name>path(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCompatibleToolChain.html</Path>
<Anchor>path-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>path(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/Swiftc.html</Path>
<Anchor>path-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>path</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>path</Anchor></Token>
<Token><TokenIdentifier><Name>Path</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
</Token>
<Token><TokenIdentifier><Name>Path(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>Path-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Path(String, String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>Path-java.lang.String-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>path(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
<Anchor>path-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>path(File, boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
<Anchor>path-java.io.File-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>path(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
<Anchor>path-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>path(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
<Anchor>path-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PATH_SEPARATOR</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>PATH_SEPARATOR</Anchor></Token>
<Token><TokenIdentifier><Name>PathFactory</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>PathFactory()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
<Anchor>PathFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>PathSensitive</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/PathSensitive.html</Path>
</Token>
<Token><TokenIdentifier><Name>PathSensitivity</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/PathSensitivity.html</Path>
</Token>
<Token><TokenIdentifier><Name>PathValidation</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PathValidation.html</Path>
</Token>
<Token><TokenIdentifier><Name>pathVariables(Map&lt;String, File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>pathVariables-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>pathVariables(Map&lt;String, File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>pathVariables-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>PatternFilterable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
</Token>
<Token><TokenIdentifier><Name>PatternSet</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>PatternSet()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>PatternSet--</Anchor></Token>
<Token><TokenIdentifier><Name>PatternSet(PatternSet)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>PatternSet-org.gradle.api.tasks.util.PatternSet-</Anchor></Token>
<Token><TokenIdentifier><Name>PatternSet(PatternSpecFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>PatternSet-org.gradle.api.tasks.util.internal.PatternSpecFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>performPostEvaluationActions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipsePlugin.html</Path>
<Anchor>performPostEvaluationActions--</Anchor></Token>
<Token><TokenIdentifier><Name>performPostEvaluationActions()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
<Anchor>performPostEvaluationActions--</Anchor></Token>
<Token><TokenIdentifier><Name>PgpKeyId</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
</Token>
<Token><TokenIdentifier><Name>PgpKeyId(long)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>PgpKeyId-long-</Anchor></Token>
<Token><TokenIdentifier><Name>PgpKeyId(PGPPublicKey)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>PgpKeyId-org.bouncycastle.openpgp.PGPPublicKey-</Anchor></Token>
<Token><TokenIdentifier><Name>PgpKeyId(PGPSignature)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>PgpKeyId-org.bouncycastle.openpgp.PGPSignature-</Anchor></Token>
<Token><TokenIdentifier><Name>PgpKeyId(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>PgpKeyId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PgpSignatory</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatory.html</Path>
</Token>
<Token><TokenIdentifier><Name>PgpSignatory(String, PGPSecretKey, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatory.html</Path>
<Anchor>PgpSignatory-java.lang.String-org.bouncycastle.openpgp.PGPSecretKey-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PgpSignatoryFactory</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>PgpSignatoryFactory()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>PgpSignatoryFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>PgpSignatoryProvider</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>PgpSignatoryProvider()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryProvider.html</Path>
<Anchor>PgpSignatoryProvider--</Anchor></Token>
<Token><TokenIdentifier><Name>pickFirst(Comparator&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/DisambiguationRuleChain.html</Path>
<Anchor>pickFirst-java.util.Comparator-</Anchor></Token>
<Token><TokenIdentifier><Name>pickLast(Comparator&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/DisambiguationRuleChain.html</Path>
<Anchor>pickLast-java.util.Comparator-</Anchor></Token>
<Token><TokenIdentifier><Name>Platform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Platform.html</Path>
</Token>
<Token><TokenIdentifier><Name>platform(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationSpec.html</Path>
<Anchor>platform-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>platform(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayPlatformAwareComponentSpec.html</Path>
<Anchor>platform-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>PLATFORM_CONFIGURATION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>PLATFORM_CONFIGURATION</Anchor></Token>
<Token><TokenIdentifier><Name>PlatformAwareComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/PlatformAwareComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlatformContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/PlatformContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlatformJavaCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/tasks/PlatformJavaCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlatformJavaCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/tasks/PlatformJavaCompile.html</Path>
<Anchor>PlatformJavaCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>PlatformScalaCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/PlatformScalaCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlatformScalaCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/PlatformScalaCompile.html</Path>
<Anchor>PlatformScalaCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayApplicationBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayApplicationPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayApplicationPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayApplicationPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayApplicationPlugin.html</Path>
<Anchor>PlayApplicationPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayApplicationSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayCoffeeScriptCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayCoffeeScriptCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayCoffeeScriptCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayCoffeeScriptCompile.html</Path>
<Anchor>PlayCoffeeScriptCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayCoffeeScriptPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayCoffeeScriptPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayCoffeeScriptPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayCoffeeScriptPlugin.html</Path>
<Anchor>PlayCoffeeScriptPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayDistribution</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/distribution/PlayDistribution.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayDistributionContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/distribution/PlayDistributionContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayDistributionPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayDistributionPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayDistributionPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayDistributionPlugin.html</Path>
<Anchor>PlayDistributionPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayIdePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/ide/PlayIdePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayIdePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/ide/PlayIdePlugin.html</Path>
<Anchor>PlayIdePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayJavaScriptPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayJavaScriptPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayJavaScriptPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayJavaScriptPlugin.html</Path>
<Anchor>PlayJavaScriptPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayPlatform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/platform/PlayPlatform.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayPlatformAwareComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayPlatformAwareComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPlugin.html</Path>
<Anchor>PlayPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayPluginConfigurations</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayPluginConfigurations(ConfigurationContainer, DependencyHandler)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>PlayPluginConfigurations-org.gradle.api.artifacts.ConfigurationContainer-org.gradle.api.artifacts.dsl.DependencyHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>PlayRoutesPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayRoutesPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayRoutesPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayRoutesPlugin.html</Path>
<Anchor>PlayRoutesPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayRun</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayRun()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>PlayRun--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayTestPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayTestPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayTestPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayTestPlugin.html</Path>
<Anchor>PlayTestPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PlayToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/toolchain/PlayToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayTwirlPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayTwirlPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PlayTwirlPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayTwirlPlugin.html</Path>
<Anchor>PlayTwirlPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>Plugin</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Plugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>plugin(Class&lt;? extends Plugin&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ObjectConfigurationAction.html</Path>
<Anchor>plugin-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>plugin(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ObjectConfigurationAction.html</Path>
<Anchor>plugin-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PLUGIN_EXTENSION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPlugin.html</Path>
<Anchor>PLUGIN_EXTENSION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>PluginAware</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginAware.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginDeclaration</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginDeclaration(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>PluginDeclaration-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PluginDependenciesSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginDependenciesSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginDependencySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginDependencySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginId</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginId.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginInstantiationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginInstantiationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginInstantiationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginInstantiationException.html</Path>
<Anchor>PluginInstantiationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PluginInstantiationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginInstantiationException.html</Path>
<Anchor>PluginInstantiationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>pluginManagement(Action&lt;? super PluginManagementSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>pluginManagement-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>PluginManagementSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginManagementSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginManager</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginManager.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginRequest</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginRequest.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginResolutionStrategy</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginResolutionStrategy.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginResolveDetails</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginResolveDetails.html</Path>
</Token>
<Token><TokenIdentifier><Name>plugins(Action&lt;? super NamedDomainObjectContainer&lt;PluginDeclaration&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>plugins-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>plugins(Action&lt;? super InjectedPluginDependencies&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VersionControlSpec.html</Path>
<Anchor>plugins-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>pluginSourceSet(SourceSet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>pluginSourceSet-org.gradle.api.tasks.SourceSet-</Anchor></Token>
<Token><TokenIdentifier><Name>PluginUnderTestMetadata</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>PluginUnderTestMetadata()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>PluginUnderTestMetadata--</Anchor></Token>
<Token><TokenIdentifier><Name>plus(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>plus-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>plus(FileTree)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>plus-org.gradle.api.file.FileTree-</Anchor></Token>
<Token><TokenIdentifier><Name>plus(RelativePath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>plus-org.gradle.api.file.RelativePath-</Anchor></Token>
<Token><TokenIdentifier><Name>Pmd</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
</Token>
<Token><TokenIdentifier><Name>Pmd()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>Pmd--</Anchor></Token>
<Token><TokenIdentifier><Name>PmdExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>PmdExtension(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>PmdExtension-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>PmdPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PmdPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdPlugin.html</Path>
<Anchor>PmdPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>PmdReports</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdReports.html</Path>
</Token>
<Token><TokenIdentifier><Name>PolymorphicDomainObjectContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PolymorphicDomainObjectContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>pom(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>pom-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>pom(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>pom-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>pom(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>pom-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>pom(String, Action&lt;? super MavenPom&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>pom-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>pom(Action&lt;? super MavenPom&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>pom-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>pom()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>pom--</Anchor></Token>
<Token><TokenIdentifier><Name>pom(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>pom-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>pom(Action&lt;? super MavenPom&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>pom-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>pom(Action&lt;? super MavenPom&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>pom-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>POM_FILE_ENCODING</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>POM_FILE_ENCODING</Anchor></Token>
<Token><TokenIdentifier><Name>PomFilterContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>PrebuiltLibraries</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltLibraries.html</Path>
</Token>
<Token><TokenIdentifier><Name>PrebuiltLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>PrebuiltSharedLibraryBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltSharedLibraryBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>PrebuiltStaticLibraryBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltStaticLibraryBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>prefer(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/MutableVersionConstraint.html</Path>
<Anchor>prefer-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>preferProjectModules()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>preferProjectModules--</Anchor></Token>
<Token><TokenIdentifier><Name>PrefixHeaderFileGenerateTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/PrefixHeaderFileGenerateTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>PrefixHeaderFileGenerateTask(WorkerExecutor)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/PrefixHeaderFileGenerateTask.html</Path>
<Anchor>PrefixHeaderFileGenerateTask-org.gradle.workers.WorkerExecutor-</Anchor></Token>
<Token><TokenIdentifier><Name>prepareNewBuild(StartParameter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>prepareNewBuild-org.gradle.StartParameter-</Anchor></Token>
<Token><TokenIdentifier><Name>prepareNewInstance(StartParameter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>prepareNewInstance-org.gradle.StartParameter-</Anchor></Token>
<Token><TokenIdentifier><Name>prepend(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>prepend-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>PreprocessingTool</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PreprocessingTool.html</Path>
</Token>
<Token><TokenIdentifier><Name>preserve(Action&lt;? super PatternFilterable&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>preserve-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>privateHeaders(Action&lt;? super ConfigurableFileCollection&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>privateHeaders-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>PROCESS_RESOURCES_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>PROCESS_RESOURCES_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>PROCESS_TEST_RESOURCES_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>PROCESS_TEST_RESOURCES_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ProcessForkOptions</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProcessResources</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/tasks/ProcessResources.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProcessResources()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/jvm/tasks/ProcessResources.html</Path>
<Anchor>ProcessResources--</Anchor></Token>
<Token><TokenIdentifier><Name>Product</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/Product.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProductionComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/ProductionComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProductionCppComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/ProductionCppComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProductionSwiftComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/ProductionSwiftComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProgressEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/ProgressEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProgressEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProgressEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProgressListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/ProgressListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProgressListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProgressListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>project(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.html</Path>
<Anchor>project-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>project(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>project-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>project(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>project-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>project(Action&lt;? super GroovyObject&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>project-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>project(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>project-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>project(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>project-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>Project</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
</Token>
<Token><TokenIdentifier><Name>project(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>project-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>project(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>project-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>project(String, Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>project-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>project(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/DependencySpecContainer.html</Path>
<Anchor>project-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>project(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ProjectDependencySpecBuilder.html</Path>
<Anchor>project-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>project(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>project-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>project(Action&lt;? super EclipseProject&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>project-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Project</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
</Token>
<Token><TokenIdentifier><Name>Project(XmlTransformer)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>Project-org.gradle.internal.xml.XmlTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>project(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>project-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>project(Action&lt;? super IdeaProject&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>project-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Project</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
</Token>
<Token><TokenIdentifier><Name>Project(XmlTransformer, Object)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>Project-org.gradle.internal.xml.XmlTransformer-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>project</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>project</Anchor></Token>
<Token><TokenIdentifier><Name>PROJECT_FILE_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>PROJECT_FILE_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>PROJECT_REPORT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
<Anchor>PROJECT_REPORT</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectBuilder</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectBuilder()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
<Anchor>ProjectBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectComponentIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ProjectComponentIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectComponentSelector</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/component/ProjectComponentSelector.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectConfigurationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectConfigurationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectConfigurationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectConfigurationException.html</Path>
<Anchor>ProjectConfigurationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectConnection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProjectConnection.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ProjectDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectDependency</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ProjectDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectDependency(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ProjectDependency.html</Path>
<Anchor>ProjectDependency-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectDependency(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ProjectDependency.html</Path>
<Anchor>ProjectDependency-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ProjectDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectDependencySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ProjectDependencySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectDependencySpecBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ProjectDependencySpecBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectEvaluationListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectEvaluationListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectIdentifier</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ProjectIdentifier.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectLayout</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ProjectLayout.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectLibrary</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectLibrary()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>ProjectLibrary--</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectModel</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/ProjectModel.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectPublications</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/gradle/ProjectPublications.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectReportsPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectReportsPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
<Anchor>ProjectReportsPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectReportsPluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectReportsPluginConvention(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPluginConvention.html</Path>
<Anchor>ProjectReportsPluginConvention-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/ProjectReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/ProjectReportTask.html</Path>
<Anchor>ProjectReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>projectsEvaluated(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>projectsEvaluated-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsEvaluated(Action&lt;? super Gradle&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>projectsEvaluated-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsEvaluated(Gradle)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildAdapter.html</Path>
<Anchor>projectsEvaluated-org.gradle.api.invocation.Gradle-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsEvaluated(Gradle)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildListener.html</Path>
<Anchor>projectsEvaluated-org.gradle.api.invocation.Gradle-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsLoaded(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>projectsLoaded-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsLoaded(Action&lt;? super Gradle&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>projectsLoaded-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsLoaded(Gradle)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildAdapter.html</Path>
<Anchor>projectsLoaded-org.gradle.api.invocation.Gradle-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsLoaded(Gradle)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildListener.html</Path>
<Anchor>projectsLoaded-org.gradle.api.invocation.Gradle-</Anchor></Token>
<Token><TokenIdentifier><Name>projectsLoaded(BuildAction&lt;T&gt;, IntermediateResultHandler&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.Builder.html</Path>
<Anchor>projectsLoaded-org.gradle.tooling.BuildAction-org.gradle.tooling.IntermediateResultHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>ProjectSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/ProjectSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>ProjectState</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectState.html</Path>
</Token>
<Token><TokenIdentifier><Name>properties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>properties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>properties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>properties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>properties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>properties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>properties(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>properties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>PROPERTIES_TASK</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/HelpTasksPlugin.html</Path>
<Anchor>PROPERTIES_TASK</Anchor></Token>
<Token><TokenIdentifier><Name>PropertiesFileContentMerger</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesFileContentMerger.html</Path>
</Token>
<Token><TokenIdentifier><Name>PropertiesFileContentMerger(PropertiesTransformer)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesFileContentMerger.html</Path>
<Anchor>PropertiesFileContentMerger-org.gradle.api.internal.PropertiesTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>PropertiesGeneratorTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesGeneratorTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>PropertiesGeneratorTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesGeneratorTask.html</Path>
<Anchor>PropertiesGeneratorTask--</Anchor></Token>
<Token><TokenIdentifier><Name>property(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/model/ObjectFactory.html</Path>
<Anchor>property-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>property(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>property-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>property(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>property-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Property</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Property.html</Path>
</Token>
<Token><TokenIdentifier><Name>property(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/ProviderFactory.html</Path>
<Anchor>property-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>property(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>property-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>property(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>property-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>property(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/CompatibilityAdapterForTaskInputs.html</Path>
<Anchor>property-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>property(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>property-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>property(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
<Anchor>property-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>property(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
<Anchor>property-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>property(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>property-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>property(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>property-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>PROPERTY_REPORT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
<Anchor>PROPERTY_REPORT</Anchor></Token>
<Token><TokenIdentifier><Name>PropertyListGeneratorTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertyListGeneratorTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>PropertyListGeneratorTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertyListGeneratorTask.html</Path>
<Anchor>PropertyListGeneratorTask--</Anchor></Token>
<Token><TokenIdentifier><Name>propertyMissing(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>propertyMissing-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>propertyMissing(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryProvider.html</Path>
<Anchor>propertyMissing-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PropertyReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/PropertyReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>PropertyReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/PropertyReportTask.html</Path>
<Anchor>PropertyReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>PropertyState</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/PropertyState.html</Path>
</Token>
<Token><TokenIdentifier><Name>PROVIDED</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>PROVIDED</Anchor></Token>
<Token><TokenIdentifier><Name>PROVIDED_COMPILE_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
<Anchor>PROVIDED_COMPILE_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>PROVIDED_COMPILE_PRIORITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>PROVIDED_COMPILE_PRIORITY</Anchor></Token>
<Token><TokenIdentifier><Name>PROVIDED_RUNTIME_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
<Anchor>PROVIDED_RUNTIME_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>PROVIDED_RUNTIME_PRIORITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>PROVIDED_RUNTIME_PRIORITY</Anchor></Token>
<Token><TokenIdentifier><Name>provider(Callable&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>provider-java.util.concurrent.Callable-</Anchor></Token>
<Token><TokenIdentifier><Name>Provider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Provider.html</Path>
</Token>
<Token><TokenIdentifier><Name>provider(Callable&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/ProviderFactory.html</Path>
<Anchor>provider-java.util.concurrent.Callable-</Anchor></Token>
<Token><TokenIdentifier><Name>provider(Callable&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>provider-java.util.concurrent.Callable-</Anchor></Token>
<Token><TokenIdentifier><Name>ProviderFactory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/ProviderFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublicAssets</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PublicAssets.html</Path>
</Token>
<Token><TokenIdentifier><Name>Publication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/Publication.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublicationArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublicationArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublicationContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublicationContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>publications(Action&lt;? super PublicationContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublishingExtension.html</Path>
<Anchor>publications-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>publicHeaders(Action&lt;? super ConfigurableFileCollection&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppLibrary.html</Path>
<Anchor>publicHeaders-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>publish()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
<Anchor>publish--</Anchor></Token>
<Token><TokenIdentifier><Name>publish()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenLocal.html</Path>
<Anchor>publish--</Anchor></Token>
<Token><TokenIdentifier><Name>publish()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenRepository.html</Path>
<Anchor>publish--</Anchor></Token>
<Token><TokenIdentifier><Name>PUBLISH_LIFECYCLE_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/plugins/PublishingPlugin.html</Path>
<Anchor>PUBLISH_LIFECYCLE_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>PUBLISH_LOCAL_LIFECYCLE_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/plugins/MavenPublishPlugin.html</Path>
<Anchor>PUBLISH_LOCAL_LIFECYCLE_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>PUBLISH_TASK_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/plugins/PublishingPlugin.html</Path>
<Anchor>PUBLISH_TASK_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>PublishableComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/PublishableComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishArtifactSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishArtifactSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishException.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishException.html</Path>
<Anchor>PublishException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>PublishException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/PublishException.html</Path>
<Anchor>PublishException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>PublishFilter</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PublishFilter.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishingExtension</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublishingExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishingPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/plugins/PublishingPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishingPlugin(ArtifactPublicationServices, Instantiator, ProjectPublicationRegistry, FeaturePreviews, DocumentationRegistry)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/plugins/PublishingPlugin.html</Path>
<Anchor>PublishingPlugin-org.gradle.api.internal.artifacts.ArtifactPublicationServices-org.gradle.internal.reflect.Instantiator-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry-org.gradle.api.internal.FeaturePreviews-org.gradle.api.internal.DocumentationRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>PublishToIvyRepository</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishToIvyRepository()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
<Anchor>PublishToIvyRepository--</Anchor></Token>
<Token><TokenIdentifier><Name>PublishToMavenLocal</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenLocal.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishToMavenLocal()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenLocal.html</Path>
<Anchor>PublishToMavenLocal--</Anchor></Token>
<Token><TokenIdentifier><Name>PublishToMavenRepository</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenRepository.html</Path>
</Token>
<Token><TokenIdentifier><Name>PublishToMavenRepository()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenRepository.html</Path>
<Anchor>PublishToMavenRepository--</Anchor></Token>
<Token><TokenIdentifier><Name>put(String, T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>put-java.lang.String-T-</Anchor></Token>
<Token><TokenIdentifier><Name>quiet(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>quiet-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>quiet(String, Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>quiet-java.lang.String-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>quiet(String, Throwable)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logger.html</Path>
<Anchor>quiet-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>QUIET</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/Logging.html</Path>
<Anchor>QUIET</Anchor></Token>
<Token><TokenIdentifier><Name>quiet(Action&lt;TestLogging&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>quiet-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>quiet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>quiet--</Anchor></Token>
<Token><TokenIdentifier><Name>quiet()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>quiet--</Anchor></Token>
<Token><TokenIdentifier><Name>read()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ReadableResource.html</Path>
<Anchor>read--</Anchor></Token>
<Token><TokenIdentifier><Name>ReadableResource</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ReadableResource.html</Path>
</Token>
<Token><TokenIdentifier><Name>readFrom(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheEntryReader.html</Path>
<Anchor>readFrom-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>readFrom(Reader)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>readFrom-java.io.Reader-</Anchor></Token>
<Token><TokenIdentifier><Name>readFrom(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>readFrom-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>ReadOnlyModelViewException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ReadOnlyModelViewException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ReadOnlyModelViewException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ReadOnlyModelViewException.html</Path>
<Anchor>ReadOnlyModelViewException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ReadOnlyModelViewException(ModelPath, ModelType&lt;?&gt;, ModelRuleDescriptor)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ReadOnlyModelViewException.html</Path>
<Anchor>ReadOnlyModelViewException-org.gradle.model.internal.core.ModelPath-org.gradle.model.internal.type.ModelType-org.gradle.model.internal.core.rule.describe.ModelRuleDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>readProperties(Project, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>readProperties-org.gradle.api.Project-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>readProperties(Project, String, String, boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>readProperties-org.gradle.api.Project-java.lang.String-java.lang.String-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>readSecretKey(String, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>readSecretKey-java.lang.String-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>readSecretKey(InputStream, String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>readSecretKey-java.io.InputStream-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>readSecretKey(PGPSecretKeyRingCollection, PgpKeyId, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatoryFactory.html</Path>
<Anchor>readSecretKey-org.bouncycastle.openpgp.PGPSecretKeyRingCollection-org.gradle.plugins.signing.signatory.pgp.PgpKeyId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>referencedProjects(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>referencedProjects-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>register(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskDestroyables.html</Path>
<Anchor>register-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>register(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskLocalState.html</Path>
<Anchor>register-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>register(SignatureType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureTypeProvider.html</Path>
<Anchor>register-org.gradle.plugins.signing.type.SignatureType-</Anchor></Token>
<Token><TokenIdentifier><Name>register(ToolingModelBuilder)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ToolingModelBuilderRegistry.html</Path>
<Anchor>register-org.gradle.tooling.provider.model.ToolingModelBuilder-</Anchor></Token>
<Token><TokenIdentifier><Name>registerBinding(Class&lt;U&gt;, Class&lt;? extends U&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ExtensiblePolymorphicDomainObjectContainer.html</Path>
<Anchor>registerBinding-java.lang.Class-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>registerBuildCacheService(Class&lt;T&gt;, Class&lt;? extends BuildCacheServiceFactory&lt;? super T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>registerBuildCacheService-java.lang.Class-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>registerFactory(Class&lt;U&gt;, NamedDomainObjectFactory&lt;? extends U&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ExtensiblePolymorphicDomainObjectContainer.html</Path>
<Anchor>registerFactory-java.lang.Class-org.gradle.api.NamedDomainObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>registerFactory(Class&lt;U&gt;, Closure&lt;? extends U&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ExtensiblePolymorphicDomainObjectContainer.html</Path>
<Anchor>registerFactory-java.lang.Class-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>registerTransform(Action&lt;? super VariantTransform&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/DependencyHandler.html</Path>
<Anchor>registerTransform-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>RegularFile</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RegularFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>RegularFileProperty</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RegularFileProperty.html</Path>
</Token>
<Token><TokenIdentifier><Name>RegularFileVar</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RegularFileVar.html</Path>
</Token>
<Token><TokenIdentifier><Name>reject(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelection.html</Path>
<Anchor>reject-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>reject(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/MutableVersionConstraint.html</Path>
<Anchor>reject-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>rejectAll()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/MutableVersionConstraint.html</Path>
<Anchor>rejectAll--</Anchor></Token>
<Token><TokenIdentifier><Name>RelativePath</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
</Token>
<Token><TokenIdentifier><Name>RelativePath(boolean, String...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>RelativePath-boolean-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>relativePath(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>relativePath-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>relativePath(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>relativePath-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>relativePath(String, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/PathFactory.html</Path>
<Anchor>relativePath-java.lang.String-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>relativeProjectPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>relativeProjectPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>relocation(Action&lt;? super MavenPomRelocation&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPomDistributionManagement.html</Path>
<Anchor>relocation-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>remote(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>remote-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>remote(Class&lt;T&gt;, Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>remote-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>remote(Action&lt;? super BuildCache&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCacheConfiguration.html</Path>
<Anchor>remote-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>remove(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>remove-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>removeAll(Collection&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>removeAll-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>removeCapability(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/capabilities/MutableCapabilitiesMetadata.html</Path>
<Anchor>removeCapability-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>removed(Action&lt;? super InputFileDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/incremental/IncrementalTaskInputs.html</Path>
<Anchor>removed-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>removeListener(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>removeListener-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>removeProjectEvaluationListener(ProjectEvaluationListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>removeProjectEvaluationListener-org.gradle.api.ProjectEvaluationListener-</Anchor></Token>
<Token><TokenIdentifier><Name>removeStandardErrorListener(StandardOutputListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingOutput.html</Path>
<Anchor>removeStandardErrorListener-org.gradle.api.logging.StandardOutputListener-</Anchor></Token>
<Token><TokenIdentifier><Name>removeStandardOutputListener(StandardOutputListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LoggingOutput.html</Path>
<Anchor>removeStandardOutputListener-org.gradle.api.logging.StandardOutputListener-</Anchor></Token>
<Token><TokenIdentifier><Name>removeTaskExecutionGraphListener(TaskExecutionGraphListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>removeTaskExecutionGraphListener-org.gradle.api.execution.TaskExecutionGraphListener-</Anchor></Token>
<Token><TokenIdentifier><Name>removeTaskExecutionListener(TaskExecutionListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>removeTaskExecutionListener-org.gradle.api.execution.TaskExecutionListener-</Anchor></Token>
<Token><TokenIdentifier><Name>removeTestListener(TestListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>removeTestListener-org.gradle.api.tasks.testing.TestListener-</Anchor></Token>
<Token><TokenIdentifier><Name>removeTestOutputListener(TestOutputListener)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>removeTestOutputListener-org.gradle.api.tasks.testing.TestOutputListener-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>rename-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Transformer&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>rename-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>rename-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Pattern, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>rename-java.util.regex.Pattern-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>rename-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Transformer&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>rename-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>rename-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Pattern, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>rename-java.util.regex.Pattern-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>rename-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Transformer&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>rename-org.gradle.api.Transformer-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>rename-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>rename(Pattern, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>rename-java.util.regex.Pattern-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>replace(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>replace-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>replace(String, Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
<Anchor>replace-java.lang.String-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>replacedBy(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentModuleMetadataDetails.html</Path>
<Anchor>replacedBy-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>replacedBy(Object, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentModuleMetadataDetails.html</Path>
<Anchor>replacedBy-java.lang.Object-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>replaceLastName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>replaceLastName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>replaceSingleDirectory(Set&lt;File&gt;, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>replaceSingleDirectory-java.util.Set-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>report()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/components/ComponentReport.html</Path>
<Anchor>report--</Anchor></Token>
<Token><TokenIdentifier><Name>report()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>report--</Anchor></Token>
<Token><TokenIdentifier><Name>report()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>report--</Anchor></Token>
<Token><TokenIdentifier><Name>Report</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
</Token>
<Token><TokenIdentifier><Name>report()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>report--</Anchor></Token>
<Token><TokenIdentifier><Name>Report.OutputType</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.OutputType.html</Path>
</Token>
<Token><TokenIdentifier><Name>ReportContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>ReportContainer.ImmutableViolationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportContainer.ImmutableViolationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>Reporting</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Reporting.html</Path>
</Token>
<Token><TokenIdentifier><Name>ReportingBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ReportingBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ReportingBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ReportingBasePlugin.html</Path>
<Anchor>ReportingBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ReportingExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>ReportingExtension(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>ReportingExtension-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>reportOn(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
<Anchor>reportOn-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super CheckstyleReports&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super CodeNarcReports&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super FindBugsReports&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super JDependReports&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super PmdReports&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super DependencyReportContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super BuildDashboardReports&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/GenerateBuildDashboard.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Reporting.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Reporting.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super TestTaskReports&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReport.html</Path>
<Anchor>reports-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>reports(Action&lt;? super JacocoReportsContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReport.html</Path>
<Anchor>reports-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>repositories(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
<Anchor>repositories-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>repositories(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>repositories-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>repositories(Action&lt;? super RepositoryHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/PublishingExtension.html</Path>
<Anchor>repositories-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>repositories(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>repositories-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>repositories(Action&lt;? super RepositoryHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>repositories-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Repositories</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Repositories.html</Path>
</Token>
<Token><TokenIdentifier><Name>repositories(Action&lt;? super RepositoryHandler&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginManagementSpec.html</Path>
<Anchor>repositories-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>RepositoryHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/RepositoryHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>RepositoryLayout</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/RepositoryLayout.html</Path>
</Token>
<Token><TokenIdentifier><Name>RepositoryResourceAccessor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/RepositoryResourceAccessor.html</Path>
</Token>
<Token><TokenIdentifier><Name>ReproducibleFileVisitor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ReproducibleFileVisitor.html</Path>
</Token>
<Token><TokenIdentifier><Name>required(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>required-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>ResolutionResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolutionResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>resolutionStrategy(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>resolutionStrategy-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>resolutionStrategy(Action&lt;? super ResolutionStrategy&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>resolutionStrategy-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ResolutionStrategy</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
</Token>
<Token><TokenIdentifier><Name>resolutionStrategy(Action&lt;? super PluginResolutionStrategy&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginManagementSpec.html</Path>
<Anchor>resolutionStrategy-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ResolutionStrategy.SortOrder</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.SortOrder.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolvableDependencies</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvableDependencies.html</Path>
</Token>
<Token><TokenIdentifier><Name>resolve()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>resolve--</Anchor></Token>
<Token><TokenIdentifier><Name>resolve()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/SelfResolvingDependency.html</Path>
<Anchor>resolve--</Anchor></Token>
<Token><TokenIdentifier><Name>resolve(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/SelfResolvingDependency.html</Path>
<Anchor>resolve-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>ResolvedArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolvedArtifactResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedArtifactResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolvedComponentResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedComponentResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolvedConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolvedDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolvedDependencyResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedDependencyResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>resolveDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>resolveDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>resolveDependencies()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>resolveDependencies--</Anchor></Token>
<Token><TokenIdentifier><Name>ResolvedModuleVersion</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedModuleVersion.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolvedVariantResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ResolvedVariantResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolveException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolveException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResolveException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolveException.html</Path>
<Anchor>ResolveException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ResolveException(String, Iterable&lt;? extends Throwable&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolveException.html</Path>
<Anchor>ResolveException-java.lang.String-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>resolveLibrary(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltLibraries.html</Path>
<Anchor>resolveLibrary-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Resource</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/Resource.html</Path>
</Token>
<Token><TokenIdentifier><Name>resource(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>resource-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>ResourceException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceException.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResourceException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceException.html</Path>
<Anchor>ResourceException--</Anchor></Token>
<Token><TokenIdentifier><Name>ResourceException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceException.html</Path>
<Anchor>ResourceException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ResourceException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceException.html</Path>
<Anchor>ResourceException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>ResourceException(URI, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceException.html</Path>
<Anchor>ResourceException-java.net.URI-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>ResourceException(URI, String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceException.html</Path>
<Anchor>ResourceException-java.net.URI-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>resourceFilter(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>resourceFilter-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>resourceFilter(Action&lt;? super ResourceFilter&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>resourceFilter-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ResourceFilter</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResourceFilterAppliesTo</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterAppliesTo.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResourceFilterMatcher</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterMatcher.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResourceFilterType</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterType.html</Path>
</Token>
<Token><TokenIdentifier><Name>ResourceHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/ResourceHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>resources(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>resources-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>resources(Action&lt;? super SourceDirectorySet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>resources-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>ResultHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ResultHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>rethrowFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolvedConfiguration.html</Path>
<Anchor>rethrowFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>rethrowFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ProjectState.html</Path>
<Anchor>rethrowFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>rethrowFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
<Anchor>rethrowFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>rethrowFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildResult.html</Path>
<Anchor>rethrowFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>rethrowFailure()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecResult.html</Path>
<Anchor>rethrowFailure--</Anchor></Token>
<Token><TokenIdentifier><Name>reverseOrdered(Comparator&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/CompatibilityRuleChain.html</Path>
<Anchor>reverseOrdered-java.util.Comparator-</Anchor></Token>
<Token><TokenIdentifier><Name>RHINO_SHELL_MAIN</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>RHINO_SHELL_MAIN</Anchor></Token>
<Token><TokenIdentifier><Name>RhinoExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>RhinoExtension()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>RhinoExtension--</Anchor></Token>
<Token><TokenIdentifier><Name>rhinoOptions(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>rhinoOptions-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>RhinoPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>RhinoPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoPlugin.html</Path>
<Anchor>RhinoPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>RhinoShellExec</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
</Token>
<Token><TokenIdentifier><Name>RhinoShellExec()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>RhinoShellExec--</Anchor></Token>
<Token><TokenIdentifier><Name>rootProject(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>rootProject-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>RoutesCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>RoutesCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>RoutesCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>RoutesSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/routes/RoutesSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>Rule</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Rule.html</Path>
</Token>
<Token><TokenIdentifier><Name>rule(Action&lt;? super JacocoViolationRule&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRulesContainer.html</Path>
<Anchor>rule-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>RuleInput</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/RuleInput.html</Path>
</Token>
<Token><TokenIdentifier><Name>Rules</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Rules.html</Path>
</Token>
<Token><TokenIdentifier><Name>ruleSetFiles(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>ruleSetFiles-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>ruleSets(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>ruleSets-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>RuleSource</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/RuleSource.html</Path>
</Token>
<Token><TokenIdentifier><Name>RuleSource()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/RuleSource.html</Path>
<Anchor>RuleSource--</Anchor></Token>
<Token><TokenIdentifier><Name>RuleTarget</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/RuleTarget.html</Path>
</Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run(ResultHandler&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildActionExecuter.html</Path>
<Anchor>run-org.gradle.tooling.ResultHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run(ResultHandler&lt;? super Void&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/BuildLauncher.html</Path>
<Anchor>run-org.gradle.tooling.ResultHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>run()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>run--</Anchor></Token>
<Token><TokenIdentifier><Name>run(ResultHandler&lt;? super Void&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>run-org.gradle.tooling.ResultHandler-</Anchor></Token>
<Token><TokenIdentifier><Name>RUN_CONFIGURATION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>RUN_CONFIGURATION</Anchor></Token>
<Token><TokenIdentifier><Name>RUN_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayApplicationPlugin.html</Path>
<Anchor>RUN_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>RunTestExecutable</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>RunTestExecutable()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
<Anchor>RunTestExecutable--</Anchor></Token>
<Token><TokenIdentifier><Name>RUNTIME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>RUNTIME</Anchor></Token>
<Token><TokenIdentifier><Name>RUNTIME_CLASSPATH_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>RUNTIME_CLASSPATH_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>RUNTIME_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>RUNTIME_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>RUNTIME_ELEMENTS_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>RUNTIME_ELEMENTS_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>RUNTIME_ONLY_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>RUNTIME_ONLY_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>RUNTIME_PRIORITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>RUNTIME_PRIORITY</Anchor></Token>
<Token><TokenIdentifier><Name>runtimeClasspath(Action&lt;? super RuntimeClasspathNormalization&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/normalization/InputNormalizationHandler.html</Path>
<Anchor>runtimeClasspath-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>RuntimeClasspathNormalization</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/normalization/RuntimeClasspathNormalization.html</Path>
</Token>
<Token><TokenIdentifier><Name>SATISFIES_ALL</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>SATISFIES_ALL</Anchor></Token>
<Token><TokenIdentifier><Name>SATISFIES_NONE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>SATISFIES_NONE</Anchor></Token>
<Token><TokenIdentifier><Name>satisfyAll()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>satisfyAll--</Anchor></Token>
<Token><TokenIdentifier><Name>satisfyNone()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>satisfyNone--</Anchor></Token>
<Token><TokenIdentifier><Name>scala(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaSourceSet.html</Path>
<Anchor>scala-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>scala(Action&lt;? super SourceDirectorySet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaSourceSet.html</Path>
<Anchor>scala-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>SCALA_DOC_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaPlugin.html</Path>
<Anchor>SCALA_DOC_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>SCALA_RUNTIME_EXTENSION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaBasePlugin.html</Path>
<Anchor>SCALA_RUNTIME_EXTENSION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaBasePlugin(SourceDirectorySetFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaBasePlugin.html</Path>
<Anchor>ScalaBasePlugin-org.gradle.api.internal.file.SourceDirectorySetFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>ScalaCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaCompileOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompileOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaCompileOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompileOptions.html</Path>
<Anchor>ScalaCompileOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaDoc</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaDoc()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>ScalaDoc--</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaDocOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaDocOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>ScalaDocOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaForkOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaForkOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaForkOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaForkOptions.html</Path>
<Anchor>ScalaForkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaLanguagePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/plugins/ScalaLanguagePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaLanguagePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/plugins/ScalaLanguagePlugin.html</Path>
<Anchor>ScalaLanguagePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaLanguageSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/ScalaLanguageSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaPlatform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/ScalaPlatform.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaPlugin.html</Path>
<Anchor>ScalaPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaRuntime</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaRuntime.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaRuntime(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaRuntime.html</Path>
<Anchor>ScalaRuntime-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>ScalaSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ScalaSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScalaToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/toolchain/ScalaToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>scm(Action&lt;? super MavenPomScm&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>scm-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Script</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
</Token>
<Token><TokenIdentifier><Name>scriptArgs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>scriptArgs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>ScriptGenerator</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/ScriptGenerator.html</Path>
</Token>
<Token><TokenIdentifier><Name>ScriptHandler</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/dsl/ScriptHandler.html</Path>
</Token>
<Token><TokenIdentifier><Name>securityRole(EarSecurityRole)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>securityRole-org.gradle.plugins.ear.descriptor.EarSecurityRole-</Anchor></Token>
<Token><TokenIdentifier><Name>securityRole(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>securityRole-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>securityRole(Action&lt;? super EarSecurityRole&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>securityRole-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>segmentIterator()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>segmentIterator--</Anchor></Token>
<Token><TokenIdentifier><Name>SelfResolvingDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/SelfResolvingDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>send(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/Announcer.html</Path>
<Anchor>send-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>serialWarn(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>serialWarn-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>serialWarn()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>serialWarn--</Anchor></Token>
<Token><TokenIdentifier><Name>set(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DirectoryProperty.html</Path>
<Anchor>set-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>set(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RegularFileProperty.html</Path>
<Anchor>set-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>set(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.html</Path>
<Anchor>set-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>set(Iterable&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/HasMultipleValues.html</Path>
<Anchor>set-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>set(Provider&lt;? extends Iterable&lt;? extends T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/HasMultipleValues.html</Path>
<Anchor>set-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>set(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Property.html</Path>
<Anchor>set-T-</Anchor></Token>
<Token><TokenIdentifier><Name>set(Provider&lt;? extends T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/Property.html</Path>
<Anchor>set-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setAccessKey(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/AwsCredentials.html</Path>
<Anchor>setAccessKey-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setAccessRules(Set&lt;AccessRule&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>setAccessRules-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setActions(List&lt;Action&lt;? super Task&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setActions-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAdditionalClassDirs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>setAdditionalClassDirs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setAdditionalImports(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
<Anchor>setAdditionalImports-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAdditionalImports(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>setAdditionalImports-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAdditionalImports(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>setAdditionalImports-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAdditionalParameters(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setAdditionalParameters-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAdditionalParameters(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setAdditionalParameters-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAdditionalSourceDirs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>setAdditionalSourceDirs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setAddress(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setAddress-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setAllJvmArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setAllJvmArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAllJvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setAllJvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setAllJvmArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setAllJvmArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAllJvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setAllJvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setAllJvmArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setAllJvmArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAllJvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setAllJvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setAllowUntrustedServer(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>setAllowUntrustedServer-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setAltDeployDescriptor(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarModule.html</Path>
<Anchor>setAltDeployDescriptor-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setAnalysisFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/IncrementalCompileOptions.html</Path>
<Anchor>setAnalysisFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setAnnotationProcessorGeneratedSourcesDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setAnnotationProcessorGeneratedSourcesDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setAnnotationProcessorGeneratedSourcesDirectory(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setAnnotationProcessorGeneratedSourcesDirectory-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setAnnotationProcessorPath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setAnnotationProcessorPath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setAnnotationProcessorPath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>setAnnotationProcessorPath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setAnnouncerFactory(AnnouncerFactory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>setAnnouncerFactory-org.gradle.api.plugins.announce.internal.AnnouncerFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>setAntGroovydoc(AntGroovydoc)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setAntGroovydoc-org.gradle.api.internal.tasks.AntGroovydoc-</Anchor></Token>
<Token><TokenIdentifier><Name>setAntlrClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setAntlrClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setApiJarFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>setApiJarFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setAppDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>setAppDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setAppend(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setAppend-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setAppendix(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setAppendix-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setApplicationDefaultJvmArgs(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>setApplicationDefaultJvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setApplicationDistribution(CopySpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>setApplicationDistribution-org.gradle.api.file.CopySpec-</Anchor></Token>
<Token><TokenIdentifier><Name>setApplicationJar(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>setApplicationJar-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setApplicationName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>setApplicationName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setApplicationName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setApplicationName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setApplicationName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setApplicationName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setAppliesTo(ResourceFilterAppliesTo)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>setAppliesTo-org.gradle.plugins.ide.eclipse.model.ResourceFilterAppliesTo-</Anchor></Token>
<Token><TokenIdentifier><Name>setArchiveBase(Wrapper.PathBase)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setArchiveBase-org.gradle.api.tasks.wrapper.Wrapper.PathBase-</Anchor></Token>
<Token><TokenIdentifier><Name>setArchiveName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setArchiveName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setArchivePath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setArchivePath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setArchivesBaseName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>setArchivesBaseName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>setArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>setArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>setArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>setArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArguments(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setArguments-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setArguments(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>setArguments-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArguments(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>setArguments-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setArguments(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterMatcher.html</Path>
<Anchor>setArguments-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setArtifactId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>setArtifactId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setArtifactId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>setArtifactId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setArtifacts(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>setArtifacts-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArtifacts(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>setArtifacts-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setArtifactUrls(Set&lt;URI&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>setArtifactUrls-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setArtifactUrls(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>setArtifactUrls-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setAssemblerArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>setAssemblerArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setAssertKeyword(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>setAssertKeyword-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setAssetsDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>setAssetsDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setAssetsJar(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>setAssetsJar-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setAuthor(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setAuthor-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setAutomatedPublishing(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>setAutomatedPublishing-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBaseDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>setBaseDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setBaseDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ReportingExtension.html</Path>
<Anchor>setBaseDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setBaseDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>setBaseDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setBaseName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/Distribution.html</Path>
<Anchor>setBaseName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBaseName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setBaseName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBaseName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeComponentSpec.html</Path>
<Anchor>setBaseName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBeforeMerged(MutableActionSet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>setBeforeMerged-org.gradle.internal.MutableActionSet-</Anchor></Token>
<Token><TokenIdentifier><Name>setBinResultsDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>setBinResultsDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setBootClasspath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setBootClasspath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBootClasspath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setBootClasspath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setBootClasspath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setBootClasspath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setBootstrapClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setBootstrapClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setBootstrapClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setBootstrapClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setBootstrapClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setBootstrapClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setBootstrapClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setBootstrapClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setBottom(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setBottom-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBottom(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setBottom-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBranch(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/MutableVersionConstraint.html</Path>
<Anchor>setBranch-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBranch(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>setBranch-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBreakIterator(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setBreakIterator-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBreakIterator(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setBreakIterator-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildable(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>setBuildable-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildCacheDebugLogging(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setBuildCacheDebugLogging-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildCacheEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setBuildCacheEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildCommands(List&lt;BuildCommand&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>setBuildCommands-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildCommands(List&lt;BuildCommand&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>setBuildCommands-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setBuildDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setBuildDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>setBuildFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildFile(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>setBuildFile-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setBuildFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildFileName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>setBuildFileName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildProjectDependencies(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setBuildProjectDependencies-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildScan(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setBuildScan-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuildTask(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/BuildableComponentSpec.html</Path>
<Anchor>setBuildTask-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuiltBy(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
<Anchor>setBuiltBy-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setBuiltBy(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileTree.html</Path>
<Anchor>setBuiltBy-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setCanBeConsumed(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>setCanBeConsumed-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setCanBeResolved(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>setCanBeResolved-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setCaseSensitive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>setCaseSensitive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setCaseSensitive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setCaseSensitive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setCaseSensitive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>setCaseSensitive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setChanging(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataDetails.html</Path>
<Anchor>setChanging-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setChanging(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalModuleDependency.html</Path>
<Anchor>setChanging-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setChangingClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>setChangingClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setCharSet(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setCharSet-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setCheckstyleClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setCheckstyleClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setCheckTask(Task)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/CheckableComponentSpec.html</Path>
<Anchor>setCheckTask-org.gradle.api.Task-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassDirectories(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>setClassDirectories-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassDumpDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setClassDumpDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasses(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setClasses-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasses(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>setClasses-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasses(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>setClasses-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasses(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>setClasses-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDeployPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setClassesDeployPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setClassesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>setClassesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>setClassesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>setClassesDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>setClassesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/JvmClasses.html</Path>
<Anchor>setClassesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassesDirs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>setClassesDirs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassFolders(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setClassFolders-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassifier(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurablePublishArtifact.html</Path>
<Anchor>setClassifier-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassifier(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>setClassifier-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassifier(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>setClassifier-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassifier(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifact.html</Path>
<Anchor>setClassifier-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassifier(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setClassifier-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setClassifier(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>setClassifier-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>setClasspath-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setClasspath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setClasspath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(EclipseClasspath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseClasspath.html</Path>
<Anchor>setClasspath-org.gradle.plugins.ide.eclipse.model.EclipseClasspath-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(EclipseClasspath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>setClasspath-org.gradle.plugins.ide.eclipse.model.EclipseClasspath-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>setClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setClasspath(Iterable&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>setClasspath-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setCodenarcClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setCodenarcClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setCoffeeScriptJs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>setCoffeeScriptJs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setCoffeeScriptJs(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>setCoffeeScriptJs-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setCoffeeScriptJs(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>setCoffeeScriptJs-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setCoffeeScriptJsNotation(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayCoffeeScriptCompile.html</Path>
<Anchor>setCoffeeScriptJsNotation-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setColorOutput(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setColorOutput-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setColorOutput(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setColorOutput-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setCommandLine(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setCommandLine-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setCommandLine(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setCommandLine-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setCommandLine(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setCommandLine-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>setCommandLine(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>setCommandLine-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setCommandLine(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>setCommandLine-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>setCommandLine(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ExecSpec.html</Path>
<Anchor>setCommandLine-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setComment(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>setComment-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setComment(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>setComment-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setComment(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>setComment-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompilationClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setCompilationClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompileClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>setCompileClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompiler(Compiler&lt;GroovyJavaJointCompileSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>setCompiler-org.gradle.language.base.internal.compile.Compiler-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompiler(Compiler&lt;ScalaJavaJointCompileSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>setCompiler-org.gradle.language.base.internal.compile.Compiler-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompilerArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setCompilerArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompilerArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>setCompilerArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompilerClasspath(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>setCompilerClasspath-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setComponent(EclipseWtpComponent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpComponent.html</Path>
<Anchor>setComponent-org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent-</Anchor></Token>
<Token><TokenIdentifier><Name>setComponent(EclipseWtpComponent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>setComponent-org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent-</Anchor></Token>
<Token><TokenIdentifier><Name>setComponents(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>setComponents-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setCompression(Compression)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Tar.html</Path>
<Anchor>setCompression-org.gradle.api.tasks.bundling.Compression-</Anchor></Token>
<Token><TokenIdentifier><Name>setConf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>setConf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setConf2ScopeMappings(Conf2ScopeMappingContainer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>setConf2ScopeMappings-org.gradle.api.artifacts.maven.Conf2ScopeMappingContainer-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>setConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>setConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigDir(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setConfigDir-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>setConfigDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigFailurePolicy(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setConfigFailurePolicy-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setConfigFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>setConfigFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setConfigFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>setConfigFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigProperties(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setConfigProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigProperties(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>setConfigProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfiguration(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>setConfiguration-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>setConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfiguration(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>setConfiguration-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>setConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfiguration(Configuration)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>setConfiguration-org.gradle.api.artifacts.Configuration-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigurations(ConfigurationContainer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>setConfigurations-org.gradle.api.artifacts.ConfigurationContainer-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigurations(Set&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>setConfigurations-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigurationScript(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setConfigurationScript-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setConfigureOnDemand(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setConfigureOnDemand-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setConsoleOutput(ConsoleOutput)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>setConsoleOutput-org.gradle.api.logging.configuration.ConsoleOutput-</Anchor></Token>
<Token><TokenIdentifier><Name>setConsoleOutput(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setConsoleOutput-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setConsoleOutput(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>setConsoleOutput-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setConsoleOutput(ConsoleOutput)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setConsoleOutput-org.gradle.api.logging.configuration.ConsoleOutput-</Anchor></Token>
<Token><TokenIdentifier><Name>setContainers(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setContainers-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setContent(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>setContent-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setContent(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>setContent-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setContentCharset(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeSpec.html</Path>
<Anchor>setContentCharset-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setContentPath(Path)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setContentPath-org.gradle.plugins.ide.idea.model.Path-</Anchor></Token>
<Token><TokenIdentifier><Name>setContentRoot(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setContentRoot-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setContextPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setContextPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setContextPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>setContextPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setContextRoot(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarWebModule.html</Path>
<Anchor>setContextRoot-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setContinueOnFailure(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setContinueOnFailure-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setContinuous(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setContinuous-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setCounter(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>setCounter-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setCurrentDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setCurrentDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDate(Date)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>setDate-java.util.Date-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebug(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setDebug-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebug(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setDebug-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebug(TestLogging)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>setDebug-org.gradle.api.tasks.testing.logging.TestLogging-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebug(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setDebug-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebug(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setDebug-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebuggable(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>setDebuggable-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebugLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/DebugOptions.html</Path>
<Anchor>setDebugLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebugLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setDebugLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDebugOptions(DebugOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setDebugOptions-org.gradle.api.tasks.compile.DebugOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeclarations(List&lt;PluginDeclaration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
<Anchor>setDeclarations-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultCharacterEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setDefaultCharacterEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultCharacterEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setDefaultCharacterEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultCharacterEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setDefaultCharacterEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultImports(TwirlImports)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
<Anchor>setDefaultImports-org.gradle.language.twirl.TwirlImports-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultImports(TwirlImports)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>setDefaultImports-org.gradle.language.twirl.TwirlImports-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultJvmOpts(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setDefaultJvmOpts-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultOutputDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setDefaultOutputDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultTasks(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setDefaultTasks-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureTypeProvider.html</Path>
<Anchor>setDefaultType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDefaultType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureTypeProvider.html</Path>
<Anchor>setDefaultType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDelete(Set&lt;Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>setDelete-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setDelete(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>setDelete-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDependencies(List&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>setDependencies-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setDependencies(Set&lt;Dependency&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setDependencies-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setDependencySpec(Spec&lt;DependencyResult&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>setDependencySpec-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>setDependencySpec(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/DependencyInsightReportTask.html</Path>
<Anchor>setDependencySpec-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDependsOn(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setDependsOn-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeploymentDescriptor(DeploymentDescriptor)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>setDeploymentDescriptor-org.gradle.plugins.ear.descriptor.DeploymentDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeploymentDescriptor(DeploymentDescriptor)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>setDeploymentDescriptor-org.gradle.plugins.ear.descriptor.DeploymentDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeployName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setDeployName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeployName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>setDeployName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeployPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>setDeployPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeployPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>setDeployPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeprecation(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setDeprecation-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeprecation(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setDeprecation-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDeprecation(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setDeprecation-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescription(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>setDescription-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescription(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setDescription-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescription(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setDescription-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescription(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setDescription-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescription(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>setDescription-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescription(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setDescription-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescription(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarSecurityRole.html</Path>
<Anchor>setDescription-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescriptor(IvyModuleDescriptorSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>setDescriptor-org.gradle.api.publish.ivy.IvyModuleDescriptorSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>setDescriptorDestination(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>setDescriptorDestination-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestination(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>setDestination-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestination(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/GenerateIvyDescriptor.html</Path>
<Anchor>setDestination-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestination(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>setDestination-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestination(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>setDestination-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestination(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ConfigurableReport.html</Path>
<Anchor>setDestination-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestination(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ConfigurableReport.html</Path>
<Anchor>setDestination-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestination(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ConfigurableReport.html</Path>
<Anchor>setDestination-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>setDestinationDir-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Copy.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>setDestinationDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>setDestinationDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setDestinationDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setDestinationDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationFile(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setDestinationFile-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setDestinationFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>setDestinationFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDestinationFile(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>setDestinationFile-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setDidWork(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setDidWork-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileTree.html</Path>
<Anchor>setDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>setDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>setDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>setDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDirectory(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
<Anchor>setDirectory-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeInstallationSpec.html</Path>
<Anchor>setDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setDirMode(Integer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>setDirMode-java.lang.Integer-</Anchor></Token>
<Token><TokenIdentifier><Name>setDirMode(Integer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setDirMode-java.lang.Integer-</Anchor></Token>
<Token><TokenIdentifier><Name>setDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/FlatDirectoryArtifactRepository.html</Path>
<Anchor>setDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setDirs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/FlatDirectoryArtifactRepository.html</Path>
<Anchor>setDirs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setDisplayGranularity(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setDisplayGranularity-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setDisplayName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setDisplayName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDisplayName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>setDisplayName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDistributionBase(Wrapper.PathBase)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setDistributionBase-org.gradle.api.tasks.wrapper.Wrapper.PathBase-</Anchor></Token>
<Token><TokenIdentifier><Name>setDistributionPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setDistributionPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDistributionSha256Sum(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setDistributionSha256Sum-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDistributionType(Wrapper.DistributionType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setDistributionType-org.gradle.api.tasks.wrapper.Wrapper.DistributionType-</Anchor></Token>
<Token><TokenIdentifier><Name>setDistributionUrl(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setDistributionUrl-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDistsDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>setDistsDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setDocEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocFilesSubDirs(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setDocFilesSubDirs-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDoclet(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setDoclet-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDoclet(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setDoclet-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocletpath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setDocletpath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocletpath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setDocletpath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocsDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>setDocsDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setDocTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setDocTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setDocTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDocURL(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setDocURL-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDownloadJavadoc(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setDownloadJavadoc-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDownloadJavadoc(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setDownloadJavadoc-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDownloadSources(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setDownloadSources-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDownloadSources(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setDownloadSources-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDryRun(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setDryRun-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDsl(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>setDsl-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setDumpOnExit(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setDumpOnExit-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setDuplicatesStrategy(DuplicatesStrategy)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>setDuplicatesStrategy-org.gradle.api.file.DuplicatesStrategy-</Anchor></Token>
<Token><TokenIdentifier><Name>setDuplicatesStrategy(DuplicatesStrategy)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>setDuplicatesStrategy-org.gradle.api.file.DuplicatesStrategy-</Anchor></Token>
<Token><TokenIdentifier><Name>setDuplicatesStrategy(DuplicatesStrategy)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setDuplicatesStrategy-org.gradle.api.file.DuplicatesStrategy-</Anchor></Token>
<Token><TokenIdentifier><Name>setDynamicMode(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepositoryMetaDataProvider.html</Path>
<Anchor>setDynamicMode-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEffort(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setEffort-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEffort(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setEffort-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setElement(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>setElement-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnableAssertions(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setEnableAssertions-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnableAssertions(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setEnableAssertions-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnableAssertions(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setEnableAssertions-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ConfigurableReport.html</Path>
<Anchor>setEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(Provider&lt;Boolean&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/ConfigurableReport.html</Path>
<Anchor>setEnabled-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.html</Path>
<Anchor>setEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/AbstractBuildCache.html</Path>
<Anchor>setEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCache.html</Path>
<Anchor>setEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>setEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileOptions.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEncoding(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>setEncoding-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setEntries(List&lt;ClasspathEntry&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>setEntries-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setEntryCompression(ZipEntryCompression)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>setEntryCompression-org.gradle.api.tasks.bundling.ZipEntryCompression-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnvironment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setEnvironment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnvironment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setEnvironment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnvironment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setEnvironment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnvironment(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>setEnvironment-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnvironmentVariables(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setEnvironmentVariables-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setEnvironmentVariables(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setEnvironmentVariables-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setError(TestLogging)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>setError-org.gradle.api.tasks.testing.logging.TestLogging-</Anchor></Token>
<Token><TokenIdentifier><Name>setErrorOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setErrorOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setErrorOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setErrorOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setErrorOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>setErrorOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setEvaluator(BrowserEvaluator)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>setEvaluator-org.gradle.plugins.javascript.envjs.browser.BrowserEvaluator-</Anchor></Token>
<Token><TokenIdentifier><Name>setEvents(Set&lt;TestLogEvent&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setEvents-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setEvents(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setEvents-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExceptionFormat(TestExceptionFormat)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setExceptionFormat-org.gradle.api.tasks.testing.logging.TestExceptionFormat-</Anchor></Token>
<Token><TokenIdentifier><Name>setExceptionFormat(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setExceptionFormat-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeBugsFilter(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setExcludeBugsFilter-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeBugsFilter(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setExcludeBugsFilter-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeBugsFilterConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setExcludeBugsFilterConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeBugsFilterConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setExcludeBugsFilterConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeCategories(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
<Anchor>setExcludeCategories-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeClassLoaders(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setExcludeClassLoaders-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setExcludeDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeDocFilesSubDir(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setExcludeDocFilesSubDir-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludedTaskNames(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setExcludedTaskNames-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeEngines(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>setExcludeEngines-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeFilter(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setExcludeFilter-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeFilter(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setExcludeFilter-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeFilterConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setExcludeFilterConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeFilterConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setExcludeFilterConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeFolders(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setExcludeFolders-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeGroups(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setExcludeGroups-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>setExcludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setExcludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>setExcludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setExcludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>setExcludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>setExcludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>setExcludes-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setExcludes-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludes(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>setExcludes-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setExcludeTags(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>setExcludeTags-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setExecutable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setExecutable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>setExecutable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setExecutable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setExecutable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setExecutable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setExecutable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setExecutable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCommandLineToolConfiguration.html</Path>
<Anchor>setExecutable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>setExecutable-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutable(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>setExecutable-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutableDir(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>setExecutableDir-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutableDir(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setExecutableDir-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutionData(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoMerge.html</Path>
<Anchor>setExecutionData-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setExecutionData(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>setExecutionData-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setExitEnvironmentVar(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setExitEnvironmentVar-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExported(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>setExported-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setExported(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>setExported-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setExported(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>setExported-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setExportedPackages(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>setExportedPackages-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExportedPackages(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/ApiJar.html</Path>
<Anchor>setExportedPackages-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtDirs(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setExtDirs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtDirs(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setExtDirs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtendsFrom(Iterable&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>setExtendsFrom-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurablePublishArtifact.html</Path>
<Anchor>setExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>setExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>setExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenArtifact.html</Path>
<Anchor>setExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtension(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>setExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtensionDirs(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setExtensionDirs-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtraArgs(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setExtraArgs-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setExtraArgs(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setExtraArgs-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setFacet(EclipseWtpFacet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseWtpFacet.html</Path>
<Anchor>setFacet-org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet-</Anchor></Token>
<Token><TokenIdentifier><Name>setFacet(EclipseWtpFacet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtp.html</Path>
<Anchor>setFacet-org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet-</Anchor></Token>
<Token><TokenIdentifier><Name>setFacets(List&lt;Facet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpFacet.html</Path>
<Anchor>setFacets-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setFacets(List&lt;Facet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>setFacets-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailFast(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setFailFast-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailOnError(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setFailOnError-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailOnError(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setFailOnError-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailOnError(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setFailOnError-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailOnError(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setFailOnError-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailOnNoMatchingTests(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFilter.html</Path>
<Anchor>setFailOnNoMatchingTests-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailOnViolation(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRulesContainer.html</Path>
<Anchor>setFailOnViolation-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFailOnWarning(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>setFailOnWarning-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableFileSpec.html</Path>
<Anchor>setFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setFile(XmlFileContentMerger)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setFile-org.gradle.plugins.ide.api.XmlFileContentMerger-</Anchor></Token>
<Token><TokenIdentifier><Name>setFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>setFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setFileExtensions(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setFileExtensions-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setFileMode(Integer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopyProcessingSpec.html</Path>
<Anchor>setFileMode-java.lang.Integer-</Anchor></Token>
<Token><TokenIdentifier><Name>setFileMode(Integer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setFileMode-java.lang.Integer-</Anchor></Token>
<Token><TokenIdentifier><Name>setFileName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setFileName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setFilter(PublishFilter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>setFilter-org.gradle.api.artifacts.maven.PublishFilter-</Anchor></Token>
<Token><TokenIdentifier><Name>setFilteringCharset(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>setFilteringCharset-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setFilteringCharset(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setFilteringCharset-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setFinalizedBy(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setFinalizedBy-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setFindbugsClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setFindbugsClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setFollowSymlinks(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DeleteSpec.html</Path>
<Anchor>setFollowSymlinks-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFollowSymlinks(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Delete.html</Path>
<Anchor>setFollowSymlinks-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFooter(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setFooter-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setFooter(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setFooter-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setFooter(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setFooter-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setForce(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalDependency.html</Path>
<Anchor>setForce-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setForce(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setForce-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setForcedModules(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>setForcedModules-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>setFork(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setFork-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setFork(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setFork-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setForkEvery(Long)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setForkEvery-java.lang.Long-</Anchor></Token>
<Token><TokenIdentifier><Name>setForkMode(ForkMode)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>setForkMode-org.gradle.workers.ForkMode-</Anchor></Token>
<Token><TokenIdentifier><Name>setForkOptions(ForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setForkOptions-org.gradle.api.tasks.compile.ForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>setForkOptions(GroovyForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setForkOptions-org.gradle.api.tasks.compile.GroovyForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>setForkOptions(ScalaForkOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setForkOptions-org.gradle.api.tasks.scala.ScalaForkOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>setFormat(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>setFormat-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setFrom(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
<Anchor>setFrom-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setFrom(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/ConfigurableFileCollection.html</Path>
<Anchor>setFrom-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>setGeneratedSourceDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setGeneratedSourceDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setGeneratedSourceFolders(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setGeneratedSourceFolders-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setGenerateReverseRoutes(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>setGenerateReverseRoutes-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setGenerateTo(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModuleIml.html</Path>
<Anchor>setGenerateTo-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setGradleArgs(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>setGradleArgs-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setGradleExe(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>setGradleExe-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setGradleUserHomeDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setGradleUserHomeDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setGradleVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>setGradleVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setGradleVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setGradleVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroovyClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompile.html</Path>
<Anchor>setGroovyClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroovyClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setGroovyClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroup(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setGroup-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroup(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setGroup-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroupByInstances(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setGroupByInstances-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroupId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>setGroupId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroupId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>setGroupId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setGroups(Map&lt;String, List&lt;String&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setGroups-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setHandle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>setHandle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setHeader(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setHeader-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setHeader(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setHeader-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setHeader(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setHeader-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setHeader(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setHeader-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setHeader(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/PrefixHeaderFileGenerateTask.html</Path>
<Anchor>setHeader-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setHeaderDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/GenerateCUnitLauncher.html</Path>
<Anchor>setHeaderDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setHelpFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setHelpFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setHttpPort(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>setHttpPort-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>setId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterMatcher.html</Path>
<Anchor>setId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setIdeaProject(IdeaProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
<Anchor>setIdeaProject-org.gradle.plugins.ide.idea.model.IdeaProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreExitValue(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setIgnoreExitValue-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreExitValue(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setIgnoreExitValue-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreExitValue(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>setIgnoreExitValue-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/VerificationTask.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIgnoreFailures(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>setIgnoreFailures-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setImplementationClass(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/PluginDeclaration.html</Path>
<Anchor>setImplementationClass-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeCategories(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junit/JUnitOptions.html</Path>
<Anchor>setIncludeCategories-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludedBuilds(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setIncludedBuilds-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeEmptyDirs(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>setIncludeEmptyDirs-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeEmptyDirs(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setIncludeEmptyDirs-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeEngines(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>setIncludeEngines-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeFilter(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setIncludeFilter-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeFilter(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setIncludeFilter-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeFilterConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setIncludeFilterConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeFilterConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setIncludeFilterConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeGroups(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setIncludeGroups-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeNoLocationClasses(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setIncludeNoLocationClasses-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludePatterns(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFilter.html</Path>
<Anchor>setIncludePatterns-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludePrivate(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setIncludePrivate-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>setIncludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>setIncludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>setIncludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setIncludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternFilterable.html</Path>
<Anchor>setIncludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/util/PatternSet.html</Path>
<Anchor>setIncludes-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>setIncludes-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setIncludes-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludes(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html</Path>
<Anchor>setIncludes-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncludeTags(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/junitplatform/JUnitPlatformOptions.html</Path>
<Anchor>setIncludeTags-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncremental(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setIncremental-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIncrementalOptions(IncrementalCompileOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setIncrementalOptions-org.gradle.api.tasks.scala.IncrementalCompileOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>setInfo(TestLogging)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>setInfo-org.gradle.api.tasks.testing.logging.TestLogging-</Anchor></Token>
<Token><TokenIdentifier><Name>setInheritOutputDirs(Boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setInheritOutputDirs-java.lang.Boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setInheritOutputDirs(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setInheritOutputDirs-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setInitializeInOrder(Boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setInitializeInOrder-java.lang.Boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setInitScripts(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setInitScripts-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setInjectedRoutesGenerator(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/PlayApplicationSpec.html</Path>
<Anchor>setInjectedRoutesGenerator-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setInjectedRoutesGenerator(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>setInjectedRoutesGenerator-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setInputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>setInputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setInstallDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCpp.html</Path>
<Anchor>setInstallDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setInstallName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/LinkSharedLibrary.html</Path>
<Anchor>setInstallName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setInteractive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setInteractive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setIsolationMode(IsolationMode)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
<Anchor>setIsolationMode-org.gradle.workers.IsolationMode-</Anchor></Token>
<Token><TokenIdentifier><Name>setIws(XmlFileContentMerger)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaWorkspace.html</Path>
<Anchor>setIws-org.gradle.plugins.ide.api.XmlFileContentMerger-</Anchor></Token>
<Token><TokenIdentifier><Name>setJacocoClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoBase.html</Path>
<Anchor>setJacocoClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJarDirectories(Set&lt;JarDirectory&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>setJarDirectories-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setJarFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setJarFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setJarFile(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setJarFile-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setJarFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JarBinarySpec.html</Path>
<Anchor>setJarFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavaAnnotationProcessing(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setJavaAnnotationProcessing-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavadoc(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>setJavadoc-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavadoc(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>setJavadoc-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavadocPath(FileReference)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>setJavadocPath-org.gradle.plugins.ide.eclipse.model.FileReference-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavaHome(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>setJavaHome-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavaHome(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setJavaHome-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavaHome(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setJavaHome-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setJavaRuntimeName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>setJavaRuntimeName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdependClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/JDepend.html</Path>
<Anchor>setJdependClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdk(Jdk)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>setJdk-org.gradle.plugins.ide.idea.model.Jdk-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdk15(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>setJdk15-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdkName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setJdkName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdkName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setJdkName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdkName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setJdkName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdt(EclipseJdt)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseJdt.html</Path>
<Anchor>setJdt-org.gradle.plugins.ide.eclipse.model.EclipseJdt-</Anchor></Token>
<Token><TokenIdentifier><Name>setJdt(EclipseJdt)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>setJdt-org.gradle.plugins.ide.eclipse.model.EclipseJdt-</Anchor></Token>
<Token><TokenIdentifier><Name>setJFlags(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setJFlags-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setJFlags(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setJFlags-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setJmx(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setJmx-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setJs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>setJs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>setJs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>setJs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJsHint(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>setJsHint-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJsHint(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>setJsHint-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setJsonReport(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>setJsonReport-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setJsonReport(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>setJsonReport-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setjUnitVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JUnitTestSuiteBinarySpec.html</Path>
<Anchor>setjUnitVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setjUnitVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/test/JUnitTestSuiteSpec.html</Path>
<Anchor>setjUnitVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setJvmArgs-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setJvmArgs-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>setJvmArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setJvmArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setJvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setJvmArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setJvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setJvmArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArgs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setJvmArgs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArguments(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setJvmArguments-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArguments(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setJvmArguments-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArguments(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setJvmArguments-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>setJvmArguments(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setJvmArguments-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setKeepStubs(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setKeepStubs-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setKeyWords(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setKeyWords-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setKind(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>setKind-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLanguageLevel(IdeaLanguageLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setLanguageLevel-org.gradle.plugins.ide.idea.model.IdeaLanguageLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setLanguageLevel(IdeaLanguageLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setLanguageLevel-org.gradle.plugins.ide.idea.model.IdeaLanguageLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setLanguageLevel(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setLanguageLevel-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setLanguageLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>setLanguageLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLenient(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ArtifactView.ViewConfiguration.html</Path>
<Anchor>setLenient-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaLanguageLevel.html</Path>
<Anchor>setLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibConfigurations(Set&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setLibConfigurations-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibDeployPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setLibDeployPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/Ear.html</Path>
<Anchor>setLibDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/EarPluginConvention.html</Path>
<Anchor>setLibDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibrary(FileReference)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>setLibrary-org.gradle.plugins.ide.eclipse.model.FileReference-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibraryDirectory(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setLibraryDirectory-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>setLibs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/InstallExecutable.html</Path>
<Anchor>setLibs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setLibsDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>setLibsDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLicense(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setLicense-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLifecycle(TestLogging)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>setLifecycle-org.gradle.api.tasks.testing.logging.TestLogging-</Anchor></Token>
<Token><TokenIdentifier><Name>setLifecycleLogLevel(AntBuilder.AntMessagePriority)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>setLifecycleLogLevel-org.gradle.api.AntBuilder.AntMessagePriority-</Anchor></Token>
<Token><TokenIdentifier><Name>setLifecycleLogLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.html</Path>
<Anchor>setLifecycleLogLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLineSeparator(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>setLineSeparator-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLinkedResources(Set&lt;Link&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>setLinkedResources-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setLinkedResources(Set&lt;Link&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>setLinkedResources-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setLinks(Set&lt;Groovydoc.Link&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setLinks-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setLinks(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setLinks-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setLinksOffline(List&lt;JavadocOfflineLink&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setLinksOffline-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setLinkSource(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setLinkSource-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setListeners(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setListeners-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setListFiles(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setListFiles-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setListFiles(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setListFiles-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setListFiles(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setListFiles-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setLocal(Announcer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>setLocal-org.gradle.api.plugins.announce.Announcer-</Anchor></Token>
<Token><TokenIdentifier><Name>setLocale(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setLocale-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLocale(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setLocale-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLocation(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/ConfigFile.html</Path>
<Anchor>setLocation-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setLocation(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>setLocation-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLocationUri(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>setLocationUri-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLockedDependenciesToUpdate(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setLockedDependenciesToUpdate-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setLoggingLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setLoggingLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setLoggingPhases(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setLoggingPhases-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setLogLevel(LogLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>setLogLevel-org.gradle.api.logging.LogLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setLogLevel(LogLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setLogLevel-org.gradle.api.logging.LogLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setM2compatible(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyPatternRepositoryLayout.html</Path>
<Anchor>setM2compatible-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setMacros(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>setMacros-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setMacros(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>setMacros-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setMain(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setMain-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMain(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaExecSpec.html</Path>
<Anchor>setMain-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMainClassName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPluginConvention.html</Path>
<Anchor>setMainClassName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMainClassName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setMainClassName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setManifest(Manifest)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>setManifest-org.gradle.api.java.archives.Manifest-</Anchor></Token>
<Token><TokenIdentifier><Name>setManifestContentCharset(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>setManifestContentCharset-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMavenPomDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>setMavenPomDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setMavenPomDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPluginConvention.html</Path>
<Anchor>setMavenPomDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxErrors(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setMaxErrors-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxErrors(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>setMaxErrors-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxGranularity(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setMaxGranularity-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setMaxHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setMaxHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setMaxHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setMaxHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setMaxHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaximum(BigDecimal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>setMaximum-java.math.BigDecimal-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxMemory(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setMaxMemory-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxParallelForks(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setMaxParallelForks-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxPriority1Violations(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setMaxPriority1Violations-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxPriority1Violations(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>setMaxPriority1Violations-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxPriority2Violations(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setMaxPriority2Violations-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxPriority2Violations(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>setMaxPriority2Violations-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxPriority3Violations(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarc.html</Path>
<Anchor>setMaxPriority3Violations-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxPriority3Violations(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>setMaxPriority3Violations-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxWarnings(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setMaxWarnings-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxWarnings(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>setMaxWarnings-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxWorkerCount(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/concurrent/ParallelismConfiguration.html</Path>
<Anchor>setMaxWorkerCount-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMaxWorkerCount(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setMaxWorkerCount-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMemberLevel(JavadocMemberLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setMemberLevel-org.gradle.external.javadoc.JavadocMemberLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setMemberLevel(JavadocMemberLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setMemberLevel-org.gradle.external.javadoc.JavadocMemberLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setMemoryInitialSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>setMemoryInitialSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMemoryMaximumSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/BaseForkOptions.html</Path>
<Anchor>setMemoryMaximumSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMetadataCharset(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>setMetadataCharset-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMetadataCharset(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/Jar.html</Path>
<Anchor>setMetadataCharset-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMetadataSupplier(Class&lt;? extends ComponentMetadataSupplier&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>setMetadataSupplier-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>setMetadataSupplier(Class&lt;? extends ComponentMetadataSupplier&gt;, Action&lt;? super ActionConfiguration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>setMetadataSupplier-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>setMinGranularity(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setMinGranularity-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setMinHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setMinHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMinHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setMinHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMinHeapSize(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setMinHeapSize-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setMinimum(BigDecimal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>setMinimum-java.math.BigDecimal-</Anchor></Token>
<Token><TokenIdentifier><Name>setMinusConfigurations(Collection&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setMinusConfigurations-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setMinusConfigurations(Set&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setMinusConfigurations-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setMode(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>setMode-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setModel(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>setModel-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setModule(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>setModule-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setModule(IdeaModule)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
<Anchor>setModule-org.gradle.plugins.ide.idea.model.IdeaModule-</Anchor></Token>
<Token><TokenIdentifier><Name>setModule(IdeaModule)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>setModule-org.gradle.plugins.ide.idea.model.IdeaModule-</Anchor></Token>
<Token><TokenIdentifier><Name>setModulePaths(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>setModulePaths-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setModules(Set&lt;EarModule&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setModules-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setModules(List&lt;IdeaModule&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setModules-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setModuleTypeMappings(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setModuleTypeMappings-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setModuleVersion(ModuleVersionIdentifier)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>setModuleVersion-org.gradle.api.artifacts.ModuleVersionIdentifier-</Anchor></Token>
<Token><TokenIdentifier><Name>setModuleVersion(ModuleVersionIdentifier)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>setModuleVersion-org.gradle.api.artifacts.ModuleVersionIdentifier-</Anchor></Token>
<Token><TokenIdentifier><Name>setMustRunAfter(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setMustRunAfter-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurablePublishArtifact.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/ArtifactRepository.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>setName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setNamespaceReverseRouter(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>setNamespaceReverseRouter-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNamingScheme(BinaryNamingScheme)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/binary/BaseBinarySpec.html</Path>
<Anchor>setNamingScheme-org.gradle.platform.base.internal.BinaryNamingScheme-</Anchor></Token>
<Token><TokenIdentifier><Name>setNativeLibraryLocation(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>setNativeLibraryLocation-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setNatures(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>setNatures-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setNatures(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>setNatures-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoBuildScan(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setNoBuildScan-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoComment(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoComment-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoDeprecated(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoDeprecated-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoDeprecatedList(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoDeprecatedList-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoHelp(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoHelp-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoIndex(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoIndex-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoNavBar(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoNavBar-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoQualifiers(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoQualifiers-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoSince(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoSince-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoTimestamp(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setNoTimestamp-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoTimestamp(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoTimestamp-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoTree(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setNoTree-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setNoVersionStamp(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setNoVersionStamp-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setObjectFileDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>setObjectFileDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOffline(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setOffline-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setOffline(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setOffline-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setOmitVisitors(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setOmitVisitors-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setOmitVisitors(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setOmitVisitors-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setOnlyIf(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setOnlyIf-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>setOnlyIf(Spec&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setOnlyIf-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>setOptimizationOptions(Map&lt;String, Boolean&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setOptimizationOptions-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setOptimize(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setOptimize-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setOptimized(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>setOptimized-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setOptionFiles(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setOptionFiles-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setOptionFiles(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setOptionFiles-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setOptions(CoffeeScriptCompileOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>setOptions-org.gradle.plugins.javascript.coffeescript.CoffeeScriptCompileOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>setOptsEnvironmentVar(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setOptsEnvironmentVar-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setOrganisation(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>setOrganisation-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutput(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>setOutput-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutput(JacocoTaskExtension.Output)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setOutput-org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDir(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>setOutputDir-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>setOutputDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setOutputDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>setOutputDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/tasks/RunTestExecutable.html</Path>
<Anchor>setOutputDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setOutputDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDir(Path)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setOutputDir-org.gradle.plugins.ide.idea.model.Path-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/ArtifactTransform.html</Path>
<Anchor>setOutputDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setOutputDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setOutputDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>setOutputDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>setOutputDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
<Anchor>setOutputDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/GeneratePluginDescriptors.html</Path>
<Anchor>setOutputDirectory-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputDirectory(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>setOutputDirectory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>setOutputFile-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/tasks/api/ApiJar.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/GeneratorTask.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaModule.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaProject.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setOutputFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputLevel(JavadocOutputLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setOutputLevel-org.gradle.external.javadoc.JavadocOutputLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputLevel(JavadocOutputLevel)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setOutputLevel-org.gradle.external.javadoc.JavadocOutputLevel-</Anchor></Token>
<Token><TokenIdentifier><Name>setOutputPerTestCase(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/JUnitXmlReport.html</Path>
<Anchor>setOutputPerTestCase-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setOverview(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setOverview-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setOverview(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setOverview-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setOverviewText(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setOverviewText-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setPackaging(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>setPackaging-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPackaging(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>setPackaging-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setParallel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setParallel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setParallelProjectExecutionEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/concurrent/ParallelismConfiguration.html</Path>
<Anchor>setParallelProjectExecutionEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setParallelProjectExecutionEnabled(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setParallelProjectExecutionEnabled-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setParams(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/ActionConfiguration.html</Path>
<Anchor>setParams-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>setPassword(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/PasswordCredentials.html</Path>
<Anchor>setPassword-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPassword(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/PasswordCredentials.html</Path>
<Anchor>setPassword-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPassword(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>setPassword-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPassword(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCacheCredentials.html</Path>
<Anchor>setPassword-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>setPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPath(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/toolchain/LocalJava.html</Path>
<Anchor>setPath-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarModule.html</Path>
<Anchor>setPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>setPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>setPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPath(Path)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>setPath-org.gradle.plugins.ide.idea.model.Path-</Anchor></Token>
<Token><TokenIdentifier><Name>setPathFactory(PathFactory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setPathFactory-org.gradle.plugins.ide.idea.model.PathFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>setPathFactory(PathFactory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setPathFactory-org.gradle.plugins.ide.idea.model.PathFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>setPathVariables(Map&lt;String, File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setPathVariables-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setPathVariables(Map&lt;String, File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setPathVariables-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setPathVariables(Map&lt;String, File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setPathVariables-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setPattern(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>setPattern-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlatform(JavaPlatform)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/java/tasks/PlatformJavaCompile.html</Path>
<Anchor>setPlatform-org.gradle.jvm.platform.JavaPlatform-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlatform(ScalaPlatform)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/PlatformScalaCompile.html</Path>
<Anchor>setPlatform-org.gradle.language.scala.ScalaPlatform-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlatform(PlayPlatform)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/RoutesCompile.html</Path>
<Anchor>setPlatform-org.gradle.play.platform.PlayPlatform-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlatform(PlayPlatform)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>setPlatform-org.gradle.play.platform.PlayPlatform-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlayPlatform(PlayPlatform)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/JavaScriptMinify.html</Path>
<Anchor>setPlayPlatform-org.gradle.play.platform.PlayPlatform-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlayToolProvider(PlayToolProvider)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>setPlayToolProvider-org.gradle.play.internal.toolchain.PlayToolProvider-</Anchor></Token>
<Token><TokenIdentifier><Name>setPluginClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setPluginClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setPluginClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/PluginUnderTestMetadata.html</Path>
<Anchor>setPluginClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlusConfigurations(Collection&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setPlusConfigurations-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setPlusConfigurations(Set&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setPlusConfigurations-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setPmdClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setPmdClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setPom(MavenPom)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/PomFilterContainer.html</Path>
<Anchor>setPom-org.gradle.api.artifacts.maven.MavenPom-</Anchor></Token>
<Token><TokenIdentifier><Name>setPom(MavenPom)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/GenerateMavenPom.html</Path>
<Anchor>setPom-org.gradle.api.publish.maven.MavenPom-</Anchor></Token>
<Token><TokenIdentifier><Name>setPort(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setPort-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setPositionIndependentCode(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>setPositionIndependentCode-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setPreCompiledHeader(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/DependentSourceSet.html</Path>
<Anchor>setPreCompiledHeader-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setPreCompiledHeader(PreCompiledHeader)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeSourceCompileTask.html</Path>
<Anchor>setPreCompiledHeader-org.gradle.nativeplatform.toolchain.internal.PreCompiledHeader-</Anchor></Token>
<Token><TokenIdentifier><Name>setPrefixHeaderFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/PrefixHeaderFileGenerateTask.html</Path>
<Anchor>setPrefixHeaderFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setPreserveFileTimestamps(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setPreserveFileTimestamps-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setPreserveOrder(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setPreserveOrder-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setProfile(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setProfile-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setProject(ProjectInternal)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePluginConvention.html</Path>
<Anchor>setProject-org.gradle.api.internal.project.ProjectInternal-</Anchor></Token>
<Token><TokenIdentifier><Name>setProject(EclipseProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>setProject-org.gradle.plugins.ide.eclipse.model.EclipseProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setProject(IdeaProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>setProject-org.gradle.plugins.ide.idea.model.IdeaProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectCacheDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setProjectCacheDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectDependenciesOnly(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setProjectDependenciesOnly-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/ProjectDescriptor.html</Path>
<Anchor>setProjectDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>setProjectDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setProjectDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectJdkName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>setProjectJdkName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectLayoutRegistry(ProjectLayoutSetupRegistry)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>setProjectLayoutRegistry-org.gradle.buildinit.plugins.internal.ProjectLayoutSetupRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectLibraries(Set&lt;ProjectLibrary&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setProjectLibraries-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectLibraries(Set&lt;ProjectLibrary&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>setProjectLibraries-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectModel(EclipseProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/GenerateEclipseProject.html</Path>
<Anchor>setProjectModel-org.gradle.plugins.ide.eclipse.model.EclipseProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectProperties(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setProjectProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjectReportDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPluginConvention.html</Path>
<Anchor>setProjectReportDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjects(Set&lt;Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependencies/HtmlDependencyReportTask.html</Path>
<Anchor>setProjects-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setProjects(Set&lt;Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractReportTask.html</Path>
<Anchor>setProjects-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setProperties(Map&lt;String, Object&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>setProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setProperties(List&lt;WbProperty&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setProperties-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setProperty(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/model/ObjectFactory.html</Path>
<Anchor>setProperty-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>setProperty(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setProperty-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>SetProperty</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/provider/SetProperty.html</Path>
</Token>
<Token><TokenIdentifier><Name>setProperty(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setProperty-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setPublication(IvyPublication)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
<Anchor>setPublication-org.gradle.api.publish.ivy.IvyPublication-</Anchor></Token>
<Token><TokenIdentifier><Name>setPublication(MavenPublication)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/AbstractPublishToMaven.html</Path>
<Anchor>setPublication-org.gradle.api.publish.maven.MavenPublication-</Anchor></Token>
<Token><TokenIdentifier><Name>setPublishedCode(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/IncrementalCompileOptions.html</Path>
<Anchor>setPublishedCode-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setPush(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/AbstractBuildCache.html</Path>
<Anchor>setPush-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setPush(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/configuration/BuildCache.html</Path>
<Anchor>setPush-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setQuiet(TestLogging)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>setQuiet-org.gradle.api.tasks.testing.logging.TestLogging-</Anchor></Token>
<Token><TokenIdentifier><Name>setRecompileScripts(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setRecompileScripts-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRecursive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>setRecursive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRecursive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>setRecursive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setReferencedProjects(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>setReferencedProjects-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setReferencedProjects(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>setReferencedProjects-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setRefreshDependencies(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setRefreshDependencies-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRelativePath(RelativePath)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCopyDetails.html</Path>
<Anchor>setRelativePath-org.gradle.api.file.RelativePath-</Anchor></Token>
<Token><TokenIdentifier><Name>setRemoveUnusedEntriesAfterDays(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
<Anchor>setRemoveUnusedEntriesAfterDays-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setRenderer(DependencyReportRenderer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/AbstractDependencyReportTask.html</Path>
<Anchor>setRenderer-org.gradle.api.tasks.diagnostics.internal.DependencyReportRenderer-</Anchor></Token>
<Token><TokenIdentifier><Name>setRenderer(DependencyReportRenderer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/BuildEnvironmentReportTask.html</Path>
<Anchor>setRenderer-org.gradle.api.tasks.diagnostics.internal.DependencyReportRenderer-</Anchor></Token>
<Token><TokenIdentifier><Name>setRenderer(PropertyReportRenderer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/PropertyReportTask.html</Path>
<Anchor>setRenderer-org.gradle.api.tasks.diagnostics.internal.PropertyReportRenderer-</Anchor></Token>
<Token><TokenIdentifier><Name>setRenderer(TaskReportRenderer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
<Anchor>setRenderer-org.gradle.api.tasks.diagnostics.internal.TaskReportRenderer-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>setReportDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>setReportDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportFormat(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeNarcExtension.html</Path>
<Anchor>setReportFormat-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setReportLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportLevel(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setReportLevel-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportsDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>setReportsDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportsDir(Provider&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>setReportsDir-org.gradle.api.provider.Provider-</Anchor></Token>
<Token><TokenIdentifier><Name>setReportsDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>setReportsDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setRepository(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
<Anchor>setRepository-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setRepository(IvyArtifactRepository)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/tasks/PublishToIvyRepository.html</Path>
<Anchor>setRepository-org.gradle.api.artifacts.repositories.IvyArtifactRepository-</Anchor></Token>
<Token><TokenIdentifier><Name>setRepository(MavenArtifactRepository)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/tasks/PublishToMavenRepository.html</Path>
<Anchor>setRepository-org.gradle.api.artifacts.repositories.MavenArtifactRepository-</Anchor></Token>
<Token><TokenIdentifier><Name>setReproducibleFileOrder(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setReproducibleFileOrder-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRequired(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>setRequired-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRequired(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignatureSpec.html</Path>
<Anchor>setRequired-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRequired(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>setRequired-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRequired(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>setRequired-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setRequired(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>setRequired-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setRerunTasks(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setRerunTasks-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setResource(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>setResource-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setResource(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>setResource-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setResourceDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setResourceDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setResourceFilters(Set&lt;ResourceFilter&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>setResourceFilters-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setResourceFolders(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setResourceFolders-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setResources(List&lt;WbResource&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setResources-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setResourcesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>setResourcesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setResourcesDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
<Anchor>setResourcesDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setResourcesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>setResourcesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setResult(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>setResult-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setResult(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/browser/BrowserEvaluate.html</Path>
<Anchor>setResult-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setRevision(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyPublication.html</Path>
<Anchor>setRevision-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setRhinoClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>setRhinoClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setRhinoClasspath(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompile.html</Path>
<Anchor>setRhinoClasspath-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setRhinoClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>setRhinoClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setRhinoClasspath(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHint.html</Path>
<Anchor>setRhinoClasspath-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setRhinoClasspathNotation(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayCoffeeScriptCompile.html</Path>
<Anchor>setRhinoClasspathNotation-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setRhinoOptions(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setRhinoOptions-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setRhinoOptions(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setRhinoOptions-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>setRoleName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarSecurityRole.html</Path>
<Anchor>setRoleName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setRootConfigurations(Set&lt;Configuration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setRootConfigurations-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setRootDir(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VersionControlSpec.html</Path>
<Anchor>setRootDir-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setRulePriority(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setRulePriority-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setRulePriority(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>setRulePriority-int-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuleSetConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setRuleSetConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuleSetConfig(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>setRuleSetConfig-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuleSetFiles(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setRuleSetFiles-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuleSetFiles(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>setRuleSetFiles-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuleSets(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setRuleSets-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuleSets(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>setRuleSets-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuntimeClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>setRuntimeClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setRuntimeClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/PlayRun.html</Path>
<Anchor>setRuntimeClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setScalaClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>setScalaClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setScalaClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>setScalaClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setScalaDocOptions(ScalaDocOptions)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>setScalaDocOptions-org.gradle.api.tasks.scala.ScalaDocOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>setScalaPlatform(ScalaPlatform)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setScalaPlatform-org.gradle.language.scala.ScalaPlatform-</Anchor></Token>
<Token><TokenIdentifier><Name>setScanForTestClasses(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setScanForTestClasses-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setScope(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Dependency.html</Path>
<Anchor>setScope-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setScope(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>setScope-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setScope(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>setScope-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setScopes(Map&lt;String, Map&lt;String, Collection&lt;Configuration&gt;&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setScopes-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setScript(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setScript-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setScript(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setScript-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setScriptArgs(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setScriptArgs-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setScriptArgs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoShellExec.html</Path>
<Anchor>setScriptArgs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>setScriptFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setScriptFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setScriptFile(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>setScriptFile-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setSearchUpwards(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setSearchUpwards-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setSecretKey(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/AwsCredentials.html</Path>
<Anchor>setSecretKey-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSecurityRoles(Set&lt;EarSecurityRole&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setSecurityRoles-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setSerialWarn(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setSerialWarn-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setSessionId(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.html</Path>
<Anchor>setSessionId-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSessionToken(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/AwsCredentials.html</Path>
<Anchor>setSessionToken-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSettingsFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setSettingsFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setSharedLibraryFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltSharedLibraryBinary.html</Path>
<Anchor>setSharedLibraryFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setSharedLibraryFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.html</Path>
<Anchor>setSharedLibraryFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setSharedLibraryLinkFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltSharedLibraryBinary.html</Path>
<Anchor>setSharedLibraryLinkFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setSharedLibraryLinkFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.html</Path>
<Anchor>setSharedLibraryLinkFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setShouldRunAfter(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>setShouldRunAfter-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowAll(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>setShowAll-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowCauses(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setShowCauses-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowDetail(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
<Anchor>setShowDetail-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowExceptions(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setShowExceptions-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowHidden(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.html</Path>
<Anchor>setShowHidden-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowNonBuildable(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>setShowNonBuildable-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowProgress(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setShowProgress-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowProgress(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setShowProgress-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowStacktrace(ShowStacktrace)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>setShowStacktrace-org.gradle.api.logging.configuration.ShowStacktrace-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowStacktrace(ShowStacktrace)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setShowStacktrace-org.gradle.api.logging.configuration.ShowStacktrace-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowStackTraces(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setShowStackTraces-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowStandardStreams(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setShowStandardStreams-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowTestSuites(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/dependents/DependentComponentsReport.html</Path>
<Anchor>setShowTestSuites-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowViolations(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Checkstyle.html</Path>
<Anchor>setShowViolations-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setShowViolations(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CheckstyleExtension.html</Path>
<Anchor>setShowViolations-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatories(SignatoryProvider)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>setSignatories-org.gradle.plugins.signing.signatory.SignatoryProvider-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatory(Signatory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>setSignatory-org.gradle.plugins.signing.signatory.Signatory-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatory(Signatory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignatureSpec.html</Path>
<Anchor>setSignatory-org.gradle.plugins.signing.signatory.Signatory-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatory(Signatory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>setSignatory-org.gradle.plugins.signing.signatory.Signatory-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatureSpec(SignatureSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>setSignatureSpec-org.gradle.plugins.signing.SignatureSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatureType(SignatureType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>setSignatureType-org.gradle.plugins.signing.type.SignatureType-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatureType(SignatureType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignatureSpec.html</Path>
<Anchor>setSignatureType-org.gradle.plugins.signing.type.SignatureType-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatureType(SignatureType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>setSignatureType-org.gradle.plugins.signing.type.SignatureType-</Anchor></Token>
<Token><TokenIdentifier><Name>setSignatureTypes(SignatureTypeProvider)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>setSignatureTypes-org.gradle.plugins.signing.type.SignatureTypeProvider-</Anchor></Token>
<Token><TokenIdentifier><Name>setSingleEntryLibraries(Map&lt;String, Iterable&lt;File&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setSingleEntryLibraries-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setSkipUnmappedConfs(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>setSkipUnmappedConfs-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setSnapshotRepository(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
<Anchor>setSnapshotRepository-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(FileTree)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setSource-org.gradle.api.file.FileTree-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setSource-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(FileTree)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>setSource-org.gradle.api.file.FileTree-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>setSource-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setSource-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setSource-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>setSource-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setSource(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptCompileSpec.html</Path>
<Anchor>setSource-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceCompatibility(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>setSourceCompatibility-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceCompatibility(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>setSourceCompatibility-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceCompatibility(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>setSourceCompatibility-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceCompatibility(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>setSourceCompatibility-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceCompatibility(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>setSourceCompatibility-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceCompatibility(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Jdt.html</Path>
<Anchor>setSourceCompatibility-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/cunit/tasks/GenerateCUnitLauncher.html</Path>
<Anchor>setSourceDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceDirectories(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>setSourceDirectories-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseWtpComponent.html</Path>
<Anchor>setSourceDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setSourceDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceFolders(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setSourceFolders-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceNames(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>setSourceNames-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceNames(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setSourceNames-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourcepath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setSourcepath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourcePath(FileReference)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>setSourcePath-org.gradle.plugins.ide.eclipse.model.FileReference-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourcePath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>setSourcePath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSources(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>setSources-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setSources(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>setSources-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceSets(Collection&lt;SourceSet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>setSourceSets-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setSourceSets(Iterable&lt;SourceSet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseClasspath.html</Path>
<Anchor>setSourceSets-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setSplitIndex(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setSplitIndex-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setSrcDirs(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>setSrcDirs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setStackTraceFilters(Set&lt;TestStackTraceFilter&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setStackTraceFilters-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setStackTraceFilters(Iterable&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>setStackTraceFilters-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardError(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setStandardError-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardError(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setStandardError-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardInput(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setStandardInput-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardInput(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setStandardInput-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardInput(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>setStandardInput-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardInput(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setStandardInput-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardInput(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setStandardInput-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setStandardOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setStandardOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/BaseExecSpec.html</Path>
<Anchor>setStandardOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>setStandardOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStandardOutput(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>setStandardOutput-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>setStartParameter(StartParameter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>setStartParameter-org.gradle.StartParameter-</Anchor></Token>
<Token><TokenIdentifier><Name>setStaticLibraryFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/PrebuiltStaticLibraryBinary.html</Path>
<Anchor>setStaticLibraryFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setStaticLibraryFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinarySpec.html</Path>
<Anchor>setStaticLibraryFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setStatus(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataBuilder.html</Path>
<Anchor>setStatus-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setStatus(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataDetails.html</Path>
<Anchor>setStatus-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setStatus(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setStatus-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setStatus(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>setStatus-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setStatusScheme(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataBuilder.html</Path>
<Anchor>setStatusScheme-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setStatusScheme(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataDetails.html</Path>
<Anchor>setStatusScheme-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setStubDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setStubDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setStylesheet(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/CustomizableHtmlReport.html</Path>
<Anchor>setStylesheet-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setStyleSheet(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setStyleSheet-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setStylesheetFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setStylesheetFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setSuiteName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setSuiteName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSuiteXmlBuilder(MarkupBuilder)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setSuiteXmlBuilder-groovy.xml.MarkupBuilder-</Anchor></Token>
<Token><TokenIdentifier><Name>setSuiteXmlFiles(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setSuiteXmlFiles-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setSuiteXmlWriter(StringWriter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setSuiteXmlWriter-java.io.StringWriter-</Anchor></Token>
<Token><TokenIdentifier><Name>setSymbolicName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setSymbolicName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setSystemProperties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setSystemProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setSystemProperties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setSystemProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setSystemProperties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>setSystemProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setSystemPropertiesArgs(Map&lt;String, String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setSystemPropertiesArgs-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>setTagletPath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setTagletPath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setTaglets(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setTaglets-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setTags(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setTags-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setTarget(Target)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/ant/AntTarget.html</Path>
<Anchor>setTarget-org.apache.tools.ant.Target-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetBytecodeVersion(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setTargetBytecodeVersion-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetBytecodeVersion(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setTargetBytecodeVersion-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetCompatibility(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>setTargetCompatibility-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetCompatibility(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>setTargetCompatibility-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetCompatibility(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/AbstractCompile.html</Path>
<Anchor>setTargetCompatibility-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetCompatibility(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/platform/JavaPlatform.html</Path>
<Anchor>setTargetCompatibility-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetCompatibility(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>setTargetCompatibility-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetCompatibility(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseJdt.html</Path>
<Anchor>setTargetCompatibility-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetCompatibility(JavaVersion)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Jdt.html</Path>
<Anchor>setTargetCompatibility-org.gradle.api.JavaVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetConfiguration(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>setTargetConfiguration-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetJdk(TargetJdk)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>setTargetJdk-org.gradle.api.plugins.quality.TargetJdk-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetJdk(TargetJdk)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>setTargetJdk-org.gradle.api.plugins.quality.TargetJdk-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetJdk(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/PmdExtension.html</Path>
<Anchor>setTargetJdk-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetPlatform(JavaPlatform)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>setTargetPlatform-org.gradle.jvm.platform.JavaPlatform-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargets(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCompatibleToolChain.html</Path>
<Anchor>setTargets-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetSizeInMB(long)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/local/DirectoryBuildCache.html</Path>
<Anchor>setTargetSizeInMB-long-</Anchor></Token>
<Token><TokenIdentifier><Name>setTargetVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>setTargetVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTaskNames(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setTaskNames-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setTaskRequests(Iterable&lt;? extends TaskExecutionRequest&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setTaskRequests-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setTasks(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/GradleBuildInvocationSpec.html</Path>
<Anchor>setTasks-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setTasks(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>setTasks-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setTasks(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/GradleBuild.html</Path>
<Anchor>setTasks-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setTempDir(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/ForkOptions.html</Path>
<Anchor>setTempDir-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTemplate(TextResource)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/TemplateBasedScriptGenerator.html</Path>
<Anchor>setTemplate-org.gradle.api.resources.TextResource-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestClassesDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setTestClassesDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestClassesDirs(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setTestClassesDirs-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestedComponent(ComponentSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteSpec.html</Path>
<Anchor>setTestedComponent-org.gradle.platform.base.ComponentSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestFramework(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>setTestFramework-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setTestName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestNameIncludePatterns(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>setTestNameIncludePatterns-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestNameIncludePatterns(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setTestNameIncludePatterns-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestNameIncludePatterns(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>setTestNameIncludePatterns-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestOutputDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setTestOutputDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestOutputDir(Path)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setTestOutputDir-org.gradle.plugins.ide.idea.model.Path-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestReportDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>setTestReportDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestResourceDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setTestResourceDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestResourceFolders(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setTestResourceFolders-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestResultDirs(Iterable&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
<Anchor>setTestResultDirs-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestResultsDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>setTestResultsDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestSourceDirs(Set&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModule.html</Path>
<Anchor>setTestSourceDirs-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setTestSourceFolders(Set&lt;Path&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>setTestSourceFolders-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setText(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/TextProvider.html</Path>
<Anchor>setText-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setThreadCount(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setThreadCount-int-</Anchor></Token>
<Token><TokenIdentifier><Name>Settings</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
</Token>
<Token><TokenIdentifier><Name>settingsEvaluated(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>settingsEvaluated-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>settingsEvaluated(Action&lt;? super Settings&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>settingsEvaluated-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>settingsEvaluated(Settings)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildAdapter.html</Path>
<Anchor>settingsEvaluated-org.gradle.api.initialization.Settings-</Anchor></Token>
<Token><TokenIdentifier><Name>settingsEvaluated(Settings)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/BuildListener.html</Path>
<Anchor>settingsEvaluated-org.gradle.api.initialization.Settings-</Anchor></Token>
<Token><TokenIdentifier><Name>setTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDoc.html</Path>
<Anchor>setTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setToolChain(JavaToolChain)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/JavaCompile.html</Path>
<Anchor>setToolChain-org.gradle.jvm.toolchain.JavaToolChain-</Anchor></Token>
<Token><TokenIdentifier><Name>setToolChain(JavaToolChain)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setToolChain-org.gradle.jvm.toolchain.JavaToolChain-</Anchor></Token>
<Token><TokenIdentifier><Name>setToolChain(JavaToolChain)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/JvmBinarySpec.html</Path>
<Anchor>setToolChain-org.gradle.jvm.toolchain.JavaToolChain-</Anchor></Token>
<Token><TokenIdentifier><Name>setToolChain(NativeToolChain)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeExecutableFileSpec.html</Path>
<Anchor>setToolChain-org.gradle.nativeplatform.toolchain.NativeToolChain-</Anchor></Token>
<Token><TokenIdentifier><Name>setToolChain(PlayToolChain)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>setToolChain-org.gradle.play.toolchain.PlayToolChain-</Anchor></Token>
<Token><TokenIdentifier><Name>setToolVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/CodeQualityExtension.html</Path>
<Anchor>setToolVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setToolVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>setToolVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTop(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setTop-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setTrace(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setTrace-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setTraceLexer(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setTraceLexer-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setTraceParser(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setTraceParser-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setTraceTreeWalker(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/antlr/AntlrTask.html</Path>
<Anchor>setTraceTreeWalker-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setTransformer(PropertiesTransformer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesFileContentMerger.html</Path>
<Anchor>setTransformer-org.gradle.api.internal.PropertiesTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>setTransitive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>setTransitive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setTransitive(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ModuleDependency.html</Path>
<Anchor>setTransitive-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurablePublishArtifact.html</Path>
<Anchor>setType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>setType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyArtifact.html</Path>
<Anchor>setType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>setType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(Facet.FacetType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>setType-org.gradle.plugins.ide.eclipse.model.Facet.FacetType-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>setType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(ResourceFilterType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilter.html</Path>
<Anchor>setType-org.gradle.plugins.ide.eclipse.model.ResourceFilterType-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ProjectLibrary.html</Path>
<Anchor>setType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setType(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>setType-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUnchecked(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setUnchecked-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setUnchecked(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/scala/tasks/BaseScalaCompileOptions.html</Path>
<Anchor>setUnchecked-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setUniqueVersion(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenDeployer.html</Path>
<Anchor>setUniqueVersion-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setUnixStartScriptGenerator(ScriptGenerator)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setUnixStartScriptGenerator-org.gradle.jvm.application.scripts.ScriptGenerator-</Anchor></Token>
<Token><TokenIdentifier><Name>setUploadDescriptor(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>setUploadDescriptor-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setupProjectLayout()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/tasks/InitBuild.html</Path>
<Anchor>setupProjectLayout--</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyArtifact.html</Path>
<Anchor>setUrl-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(URI)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>setUrl-java.net.URI-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/IvyArtifactRepository.html</Path>
<Anchor>setUrl-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(URI)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>setUrl-java.net.URI-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/MavenArtifactRepository.html</Path>
<Anchor>setUrl-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>setUrl-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(URL)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>setUrl-java.net.URL-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(URI)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCache.html</Path>
<Anchor>setUrl-java.net.URI-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(URI)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/git/GitVersionControlSpec.html</Path>
<Anchor>setUrl-java.net.URI-</Anchor></Token>
<Token><TokenIdentifier><Name>setUrl(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/git/GitVersionControlSpec.html</Path>
<Anchor>setUrl-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUse(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setUse-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setUse(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setUse-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setUseDefaultListeners(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>setUseDefaultListeners-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setUsername(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/PasswordCredentials.html</Path>
<Anchor>setUsername-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUsername(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/credentials/PasswordCredentials.html</Path>
<Anchor>setUsername-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUsername(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/announce/AnnouncePluginExtension.html</Path>
<Anchor>setUsername-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUsername(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/http/HttpBuildCacheCredentials.html</Path>
<Anchor>setUsername-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setUserTemplateFormats(List&lt;TwirlTemplateFormat&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
<Anchor>setUserTemplateFormats-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setUserTemplateFormats(List&lt;TwirlTemplateFormat&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>setUserTemplateFormats-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setValue(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/ManifestMergeDetails.html</Path>
<Anchor>setValue-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setValue(T)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/OptionLessJavadocOptionFileOption.html</Path>
<Anchor>setValue-T-</Anchor></Token>
<Token><TokenIdentifier><Name>setValue(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>setValue-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setValue(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/rules/JacocoLimit.html</Path>
<Anchor>setValue-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVcs(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setVcs-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVcs(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>setVcs-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVendor(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setVendor-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVerbose(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setVerbose-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setVerbose(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/GroovyCompileOptions.html</Path>
<Anchor>setVerbose-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setVerbose(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Javadoc.html</Path>
<Anchor>setVerbose-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/osgi/OsgiManifest.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>setVersion-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPublication.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/AbstractArchiveTask.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setVersion-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/coffeescript/CoffeeScriptExtension.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/EnvJsExtension.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/jshint/JsHintExtension.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/rhino/RhinoExtension.html</Path>
<Anchor>setVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setVisible(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>setVisible-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setVisitors(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugs.html</Path>
<Anchor>setVisitors-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setVisitors(Collection&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsExtension.html</Path>
<Anchor>setVisitors-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>setVisualStudioProject(VisualStudioProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateFiltersFileTask.html</Path>
<Anchor>setVisualStudioProject-org.gradle.ide.visualstudio.VisualStudioProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setVisualStudioProject(VisualStudioProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateProjectFileTask.html</Path>
<Anchor>setVisualStudioProject-org.gradle.ide.visualstudio.VisualStudioProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setVisualStudioSolution(VisualStudioSolution)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/tasks/GenerateSolutionFileTask.html</Path>
<Anchor>setVisualStudioSolution-org.gradle.ide.visualstudio.VisualStudioSolution-</Anchor></Token>
<Token><TokenIdentifier><Name>setWarn(TestLogging)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>setWarn-org.gradle.api.tasks.testing.logging.TestLogging-</Anchor></Token>
<Token><TokenIdentifier><Name>setWarningMode(WarningMode)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/LoggingConfiguration.html</Path>
<Anchor>setWarningMode-org.gradle.api.logging.configuration.WarningMode-</Anchor></Token>
<Token><TokenIdentifier><Name>setWarningMode(WarningMode)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setWarningMode-org.gradle.api.logging.configuration.WarningMode-</Anchor></Token>
<Token><TokenIdentifier><Name>setWarnings(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/compile/CompileOptions.html</Path>
<Anchor>setWarnings-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setWbModuleEntries(List&lt;WbModuleEntry&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>setWbModuleEntries-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>setWebAppDirName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPluginConvention.html</Path>
<Anchor>setWebAppDirName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setWebXml(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>setWebXml-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setWhenMerged(MutableActionSet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>setWhenMerged-org.gradle.internal.MutableActionSet-</Anchor></Token>
<Token><TokenIdentifier><Name>setWildcards(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaProject.html</Path>
<Anchor>setWildcards-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setWildcards(Set&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>setWildcards-java.util.Set-</Anchor></Token>
<Token><TokenIdentifier><Name>setWindowsSdkDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCpp.html</Path>
<Anchor>setWindowsSdkDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setWindowsStartScriptGenerator(ScriptGenerator)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/tasks/CreateStartScripts.html</Path>
<Anchor>setWindowsStartScriptGenerator-org.gradle.jvm.application.scripts.ScriptGenerator-</Anchor></Token>
<Token><TokenIdentifier><Name>setWindowTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/javadoc/Groovydoc.html</Path>
<Anchor>setWindowTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setWindowTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaDocOptions.html</Path>
<Anchor>setWindowTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setWindowTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>setWindowTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setWindowTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>setWindowTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>setWithMessages(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/FindBugsXmlReport.html</Path>
<Anchor>setWithMessages-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setWorkingDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>setWorkingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setWorkingDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>setWorkingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setWorkingDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>setWorkingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>setWorkingDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>setWorkingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkspace(IdeaWorkspace)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/GenerateIdeaWorkspace.html</Path>
<Anchor>setWorkspace-org.gradle.plugins.ide.idea.model.IdeaWorkspace-</Anchor></Token>
<Token><TokenIdentifier><Name>setWorkspace(IdeaWorkspace)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>setWorkspace-org.gradle.plugins.ide.idea.model.IdeaWorkspace-</Anchor></Token>
<Token><TokenIdentifier><Name>setWriteDependencyLocks(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>setWriteDependencyLocks-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>setWtp(EclipseWtp)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>setWtp-org.gradle.plugins.ide.eclipse.model.EclipseWtp-</Anchor></Token>
<Token><TokenIdentifier><Name>setXcodeProject(XcodeProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
<Anchor>setXcodeProject-org.gradle.ide.xcode.XcodeProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setXcodeProject(XcodeProject)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeProjectFileTask.html</Path>
<Anchor>setXcodeProject-org.gradle.ide.xcode.XcodeProject-</Anchor></Token>
<Token><TokenIdentifier><Name>setXcodeProjectLocations(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateXcodeWorkspaceFileTask.html</Path>
<Anchor>setXcodeProjectLocations-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setXmlTransformer(XmlTransformer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlFileContentMerger.html</Path>
<Anchor>setXmlTransformer-org.gradle.internal.xml.XmlTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>setZincClasspath(FileCollection)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/scala/ScalaCompile.html</Path>
<Anchor>setZincClasspath-org.gradle.api.file.FileCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>setZip64(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>setZip64-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>SharedLibraryBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>SharedLibraryBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>SharedLibraryBinarySpec.TasksCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/SharedLibraryBinarySpec.TasksCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>shouldRunAfter(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>shouldRunAfter-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>showAll()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>showAll--</Anchor></Token>
<Token><TokenIdentifier><Name>showAll()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>showAll--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromPackage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>showFromPackage--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromPackage()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>showFromPackage--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromPrivate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>showFromPrivate--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromPrivate()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>showFromPrivate--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromProtected()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>showFromProtected--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromProtected()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>showFromProtected--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromPublic()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>showFromPublic--</Anchor></Token>
<Token><TokenIdentifier><Name>showFromPublic()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>showFromPublic--</Anchor></Token>
<Token><TokenIdentifier><Name>ShowStacktrace</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/ShowStacktrace.html</Path>
</Token>
<Token><TokenIdentifier><Name>Sign</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
</Token>
<Token><TokenIdentifier><Name>Sign()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>Sign--</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Task...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>sign-org.gradle.api.Task...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(PublishArtifact...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>sign-org.gradle.api.artifacts.PublishArtifact...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>sign-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(String, File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>sign-java.lang.String-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Configuration...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>sign-org.gradle.api.artifacts.Configuration...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Publication...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>sign-org.gradle.api.publish.Publication...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(InputStream, OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpSignatory.html</Path>
<Anchor>sign-java.io.InputStream-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(InputStream, OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/Signatory.html</Path>
<Anchor>sign-java.io.InputStream-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/Signatory.html</Path>
<Anchor>sign-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(InputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/SignatorySupport.html</Path>
<Anchor>sign-java.io.InputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Task...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-org.gradle.api.Task...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Configuration...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-org.gradle.api.artifacts.Configuration...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Publication...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-org.gradle.api.publish.Publication...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(DomainObjectCollection&lt;Publication&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-org.gradle.api.DomainObjectCollection-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(PublishArtifact...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-org.gradle.api.artifacts.PublishArtifact...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(String, File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-java.lang.String-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>sign-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(PublishArtifact...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>sign-org.gradle.api.artifacts.PublishArtifact...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>sign-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(String, File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>sign-java.lang.String-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Signatory, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureType.html</Path>
<Anchor>sign-org.gradle.plugins.signing.signatory.Signatory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Signatory, InputStream, OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/AbstractSignatureType.html</Path>
<Anchor>sign-org.gradle.plugins.signing.signatory.Signatory-java.io.InputStream-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Signatory, InputStream, OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/pgp/ArmoredSignatureType.html</Path>
<Anchor>sign-org.gradle.plugins.signing.signatory.Signatory-java.io.InputStream-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Signatory, File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureType.html</Path>
<Anchor>sign-org.gradle.plugins.signing.signatory.Signatory-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>sign(Signatory, InputStream, OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureType.html</Path>
<Anchor>sign-org.gradle.plugins.signing.signatory.Signatory-java.io.InputStream-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>signatories(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>signatories-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>signatory(Signatory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Sign.html</Path>
<Anchor>signatory-org.gradle.plugins.signing.signatory.Signatory-</Anchor></Token>
<Token><TokenIdentifier><Name>Signatory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/Signatory.html</Path>
</Token>
<Token><TokenIdentifier><Name>signatory(Signatory)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>signatory-org.gradle.plugins.signing.signatory.Signatory-</Anchor></Token>
<Token><TokenIdentifier><Name>SignatoryProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/SignatoryProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>SignatorySupport</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/SignatorySupport.html</Path>
</Token>
<Token><TokenIdentifier><Name>SignatorySupport()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/SignatorySupport.html</Path>
<Anchor>SignatorySupport--</Anchor></Token>
<Token><TokenIdentifier><Name>Signature</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
</Token>
<Token><TokenIdentifier><Name>Signature(PublishArtifact, SignatureSpec, Object...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>Signature-org.gradle.api.artifacts.PublishArtifact-org.gradle.plugins.signing.SignatureSpec-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>Signature(File, SignatureSpec, Object...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>Signature-java.io.File-org.gradle.plugins.signing.SignatureSpec-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>Signature(File, String, SignatureSpec, Object...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>Signature-java.io.File-java.lang.String-org.gradle.plugins.signing.SignatureSpec-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>Signature(Closure&lt;File&gt;, Closure&lt;String&gt;, SignatureSpec, Object...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>Signature-groovy.lang.Closure-groovy.lang.Closure-org.gradle.plugins.signing.SignatureSpec-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>Signature(Callable&lt;File&gt;, Callable&lt;String&gt;, SignatureSpec, Object...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/Signature.html</Path>
<Anchor>Signature-java.util.concurrent.Callable-java.util.concurrent.Callable-org.gradle.plugins.signing.SignatureSpec-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>SignatureSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignatureSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>signatureType(SignatureType)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>signatureType-org.gradle.plugins.signing.type.SignatureType-</Anchor></Token>
<Token><TokenIdentifier><Name>SignatureType</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureType.html</Path>
</Token>
<Token><TokenIdentifier><Name>SignatureTypeProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/type/SignatureTypeProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>SigningExtension</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>SigningExtension(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>SigningExtension-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>SigningPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>SigningPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningPlugin.html</Path>
<Anchor>SigningPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>SignOperation</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
</Token>
<Token><TokenIdentifier><Name>SignOperation()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>SignOperation--</Anchor></Token>
<Token><TokenIdentifier><Name>signPom(MavenDeployment, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>signPom-org.gradle.api.artifacts.maven.MavenDeployment-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>signPom(MavenDeployment)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>signPom-org.gradle.api.artifacts.maven.MavenDeployment-</Anchor></Token>
<Token><TokenIdentifier><Name>SimpleHttpFileServer</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServer.html</Path>
</Token>
<Token><TokenIdentifier><Name>SimpleHttpFileServer(File, int, Stoppable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServer.html</Path>
<Anchor>SimpleHttpFileServer-java.io.File-int-org.gradle.internal.concurrent.Stoppable-</Anchor></Token>
<Token><TokenIdentifier><Name>SimpleHttpFileServerFactory</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServerFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>SimpleHttpFileServerFactory()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServerFactory.html</Path>
<Anchor>SimpleHttpFileServerFactory--</Anchor></Token>
<Token><TokenIdentifier><Name>SingleEntryModuleLibrary</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>SingleEntryModuleLibrary(FilePath, Set&lt;FilePath&gt;, Set&lt;FilePath&gt;, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>SingleEntryModuleLibrary-org.gradle.plugins.ide.idea.model.FilePath-java.util.Set-java.util.Set-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>SingleEntryModuleLibrary(FilePath, FilePath, FilePath, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>SingleEntryModuleLibrary-org.gradle.plugins.ide.idea.model.FilePath-org.gradle.plugins.ide.idea.model.FilePath-org.gradle.plugins.ide.idea.model.FilePath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>SingleEntryModuleLibrary(FilePath, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/SingleEntryModuleLibrary.html</Path>
<Anchor>SingleEntryModuleLibrary-org.gradle.plugins.ide.idea.model.FilePath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>SingleFileReport</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/SingleFileReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>size()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>size--</Anchor></Token>
<Token><TokenIdentifier><Name>SkippedResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/SkippedResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>SkipWhenEmpty</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SkipWhenEmpty.html</Path>
</Token>
<Token><TokenIdentifier><Name>skipWhenEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>skipWhenEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>skipWhenEmpty(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>skipWhenEmpty-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>SoftwareComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/SoftwareComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>SoftwareComponentContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/component/SoftwareComponentContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>solution(Action&lt;? super VisualStudioSolution&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioRootExtension.html</Path>
<Anchor>solution-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>sortArtifacts(ResolutionStrategy.SortOrder)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.html</Path>
<Anchor>sortArtifacts-org.gradle.api.artifacts.ResolutionStrategy.SortOrder-</Anchor></Token>
<Token><TokenIdentifier><Name>source(SourceDirectorySet)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>source-org.gradle.api.file.SourceDirectorySet-</Anchor></Token>
<Token><TokenIdentifier><Name>source</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>source</Anchor></Token>
<Token><TokenIdentifier><Name>source(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>source-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>source(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>source-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>source(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>source-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/assembler/tasks/Assemble.html</Path>
<Anchor>source-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Action&lt;? super ConfigurableFileCollection&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/cpp/CppComponent.html</Path>
<Anchor>source-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/nativeplatform/tasks/AbstractNativeCompileTask.html</Path>
<Anchor>source-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>source-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Action&lt;? super ConfigurableFileCollection&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
<Anchor>source-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/AbstractLinkTask.html</Path>
<Anchor>source-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/CreateStaticLibrary.html</Path>
<Anchor>source-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>source(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/ObjectFilesToBinary.html</Path>
<Anchor>source-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>SOURCE_COMPATIBILITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
<Anchor>SOURCE_COMPATIBILITY</Anchor></Token>
<Token><TokenIdentifier><Name>sourceBuild(Action&lt;GradleBuildInvocationSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>sourceBuild-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>SourceComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/SourceComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>sourceControl(Action&lt;? super SourceControl&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/Settings.html</Path>
<Anchor>sourceControl-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>SourceControl</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/SourceControl.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceDirectory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/SourceDirectory.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceDirectorySet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
</Token>
<Token><TokenIdentifier><Name>sourceDirectorySetFactory</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/sources/BaseLanguageSourceSet.html</Path>
<Anchor>sourceDirectorySetFactory</Anchor></Token>
<Token><TokenIdentifier><Name>SourceFolder</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceFolder(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>SourceFolder-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>SourceFolder(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>SourceFolder-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>sourceNames(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>sourceNames-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>sourceNames(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>sourceNames-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>SourcesArtifact</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/artifact/SourcesArtifact.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceSetContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceSetOutput</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSetOutput.html</Path>
</Token>
<Token><TokenIdentifier><Name>sourceSets(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPluginConvention.html</Path>
<Anchor>sourceSets-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>sourceSets(SourceSet...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoReportBase.html</Path>
<Anchor>sourceSets-org.gradle.api.tasks.SourceSet...-</Anchor></Token>
<Token><TokenIdentifier><Name>SourceTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceTask.html</Path>
<Anchor>SourceTask--</Anchor></Token>
<Token><TokenIdentifier><Name>SourceTransformationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/SourceTransformationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>SourceTransformationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/base/SourceTransformationException.html</Path>
<Anchor>SourceTransformationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>Spec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Spec.html</Path>
</Token>
<Token><TokenIdentifier><Name>Specs</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
</Token>
<Token><TokenIdentifier><Name>Specs()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>Specs--</Anchor></Token>
<Token><TokenIdentifier><Name>splitIndex(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>splitIndex-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>splitIndex()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>splitIndex--</Anchor></Token>
<Token><TokenIdentifier><Name>srcDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>srcDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>srcDirs(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/SourceDirectorySet.html</Path>
<Anchor>srcDirs-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>stackTraceFilters(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
<Anchor>stackTraceFilters-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>STAGE_LIFECYCLE_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayDistributionPlugin.html</Path>
<Anchor>STAGE_LIFECYCLE_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>StandardJavadocDocletOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>StandardJavadocDocletOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>StandardJavadocDocletOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>StandardJavadocDocletOptions(JavadocOptionFile)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>StandardJavadocDocletOptions-org.gradle.external.javadoc.internal.JavadocOptionFile-</Anchor></Token>
<Token><TokenIdentifier><Name>StandardJavadocDocletOptions(StandardJavadocDocletOptions)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>StandardJavadocDocletOptions-org.gradle.external.javadoc.StandardJavadocDocletOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>StandardJavadocDocletOptions(StandardJavadocDocletOptions, JavadocOptionFile)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>StandardJavadocDocletOptions-org.gradle.external.javadoc.StandardJavadocDocletOptions-org.gradle.external.javadoc.internal.JavadocOptionFile-</Anchor></Token>
<Token><TokenIdentifier><Name>StandardJavadocDocletOptions(MinimalJavadocOptions)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>StandardJavadocDocletOptions-org.gradle.external.javadoc.MinimalJavadocOptions-</Anchor></Token>
<Token><TokenIdentifier><Name>StandardOutputListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/StandardOutputListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>start(File, int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/HttpFileServerFactory.html</Path>
<Anchor>start-java.io.File-int-</Anchor></Token>
<Token><TokenIdentifier><Name>start(File, int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServerFactory.html</Path>
<Anchor>start-java.io.File-int-</Anchor></Token>
<Token><TokenIdentifier><Name>StartEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/StartEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>StartParameter</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
</Token>
<Token><TokenIdentifier><Name>StartParameter()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>StartParameter--</Anchor></Token>
<Token><TokenIdentifier><Name>StaticLibraryBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>StaticLibraryBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>StaticLibraryBinarySpec.TasksCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/StaticLibraryBinarySpec.TasksCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>statusChanged(ProgressEvent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/ProgressListener.html</Path>
<Anchor>statusChanged-org.gradle.tooling.events.ProgressEvent-</Anchor></Token>
<Token><TokenIdentifier><Name>statusChanged(ProgressEvent)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ProgressListener.html</Path>
<Anchor>statusChanged-org.gradle.tooling.ProgressEvent-</Anchor></Token>
<Token><TokenIdentifier><Name>StatusEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/StatusEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>stdOutIsAttachedToTerminal()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>stdOutIsAttachedToTerminal--</Anchor></Token>
<Token><TokenIdentifier><Name>stop()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/HttpFileServer.html</Path>
<Anchor>stop--</Anchor></Token>
<Token><TokenIdentifier><Name>stop()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/javascript/envjs/http/simple/SimpleHttpFileServer.html</Path>
<Anchor>stop--</Anchor></Token>
<Token><TokenIdentifier><Name>StopActionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/StopActionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>StopActionException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/StopActionException.html</Path>
<Anchor>StopActionException--</Anchor></Token>
<Token><TokenIdentifier><Name>StopActionException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/StopActionException.html</Path>
<Anchor>StopActionException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>StopExecutionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/StopExecutionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>StopExecutionException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/StopExecutionException.html</Path>
<Anchor>StopExecutionException--</Anchor></Token>
<Token><TokenIdentifier><Name>StopExecutionException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/StopExecutionException.html</Path>
<Anchor>StopExecutionException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>stopExecutionIfEmpty()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.html</Path>
<Anchor>stopExecutionIfEmpty--</Anchor></Token>
<Token><TokenIdentifier><Name>stopVisiting()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileVisitDetails.html</Path>
<Anchor>stopVisiting--</Anchor></Token>
<Token><TokenIdentifier><Name>store(BuildCacheKey, BuildCacheEntryWriter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheService.html</Path>
<Anchor>store-org.gradle.caching.BuildCacheKey-org.gradle.caching.BuildCacheEntryWriter-</Anchor></Token>
<Token><TokenIdentifier><Name>store(BuildCacheKey, BuildCacheEntryWriter)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/MapBasedBuildCacheService.html</Path>
<Anchor>store-org.gradle.caching.BuildCacheKey-org.gradle.caching.BuildCacheEntryWriter-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>store-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Properties)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Jdt.html</Path>
<Anchor>store-java.util.Properties-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>store-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>store-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>store-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>store-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Project.html</Path>
<Anchor>store-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>store(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Workspace.html</Path>
<Anchor>store-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>strictly(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/MutableVersionConstraint.html</Path>
<Anchor>strictly-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>StripSymbols</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/StripSymbols.html</Path>
</Token>
<Token><TokenIdentifier><Name>StripSymbols()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/StripSymbols.html</Path>
<Anchor>StripSymbols--</Anchor></Token>
<Token><TokenIdentifier><Name>stripSymbols()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/tasks/StripSymbols.html</Path>
<Anchor>stripSymbols--</Anchor></Token>
<Token><TokenIdentifier><Name>stylesheetFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>stylesheetFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>submit(Class&lt;? extends Runnable&gt;, Action&lt;? super WorkerConfiguration&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerExecutor.html</Path>
<Anchor>submit-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>subprojects(Action&lt;? super Project&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>subprojects-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>subprojects(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>subprojects-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>subSequence(int, int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>subSequence-int-int-</Anchor></Token>
<Token><TokenIdentifier><Name>substitute(ComponentSelector)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.html</Path>
<Anchor>substitute-org.gradle.api.artifacts.component.ComponentSelector-</Anchor></Token>
<Token><TokenIdentifier><Name>SuccessResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/SuccessResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>suites(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>suites-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>suites(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>suites-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>suiteXmlBuilder()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>suiteXmlBuilder--</Anchor></Token>
<Token><TokenIdentifier><Name>SWIFT_API</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>SWIFT_API</Anchor></Token>
<Token><TokenIdentifier><Name>SwiftApplication</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftApplication.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftApplicationPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftApplicationPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftApplicationPlugin(NativeComponentFactory, ToolChainSelector, ImmutableAttributesFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftApplicationPlugin.html</Path>
<Anchor>SwiftApplicationPlugin-org.gradle.language.internal.NativeComponentFactory-org.gradle.language.nativeplatform.internal.toolchains.ToolChainSelector-org.gradle.api.internal.attributes.ImmutableAttributesFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>SwiftBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftBasePlugin(ProjectPublicationRegistry, MacOSSdkPathLocator)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftBasePlugin.html</Path>
<Anchor>SwiftBasePlugin-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectPublicationRegistry-org.gradle.nativeplatform.toolchain.internal.xcode.MacOSSdkPathLocator-</Anchor></Token>
<Token><TokenIdentifier><Name>SwiftBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>Swiftc</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/Swiftc.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftCompile(CompilerOutputFileNamingSchemeFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/SwiftCompile.html</Path>
<Anchor>SwiftCompile-org.gradle.nativeplatform.internal.CompilerOutputFileNamingSchemeFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>SwiftCompilerPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/SwiftCompilerPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftCompilerPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/plugins/SwiftCompilerPlugin.html</Path>
<Anchor>SwiftCompilerPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>SwiftComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftcPlatformToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/SwiftcPlatformToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftExecutable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftLibraryPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftLibraryPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftLibraryPlugin(NativeComponentFactory, ToolChainSelector, ImmutableAttributesFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/plugins/SwiftLibraryPlugin.html</Path>
<Anchor>SwiftLibraryPlugin-org.gradle.language.internal.NativeComponentFactory-org.gradle.language.nativeplatform.internal.toolchains.ToolChainSelector-org.gradle.api.internal.attributes.ImmutableAttributesFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>SwiftPackageManagerExportPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/plugins/SwiftPackageManagerExportPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftPackageManagerExportPlugin(VcsResolver, VersionSelectorScheme, ProjectDependencyPublicationResolver, VersionParser)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/swiftpm/plugins/SwiftPackageManagerExportPlugin.html</Path>
<Anchor>SwiftPackageManagerExportPlugin-org.gradle.vcs.internal.VcsResolver-org.gradle.api.internal.artifacts.ivyservice.ivyresolve.strategy.VersionSelectorScheme-org.gradle.api.internal.artifacts.ivyservice.projectmodule.ProjectDependencyPublicationResolver-org.gradle.api.internal.artifacts.ivyservice.ivyresolve.strategy.VersionParser-</Anchor></Token>
<Token><TokenIdentifier><Name>SwiftPlatform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftPlatform.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftSharedLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftSharedLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftStaticLibrary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftStaticLibrary.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftVersion</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftVersion.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftXCTestBinary</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBinary.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftXCTestBundle</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestBundle.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftXCTestExecutable</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestExecutable.html</Path>
</Token>
<Token><TokenIdentifier><Name>SwiftXCTestSuite</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/SwiftXCTestSuite.html</Path>
</Token>
<Token><TokenIdentifier><Name>sync(Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>sync-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Sync</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
</Token>
<Token><TokenIdentifier><Name>Sync()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Sync.html</Path>
<Anchor>Sync--</Anchor></Token>
<Token><TokenIdentifier><Name>SYSTEM_PROP_PREFIX</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>SYSTEM_PROP_PREFIX</Anchor></Token>
<Token><TokenIdentifier><Name>systemProperties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>systemProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>systemProperties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>systemProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>systemProperties(Map&lt;String, ?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>systemProperties-java.util.Map-</Anchor></Token>
<Token><TokenIdentifier><Name>systemProperty(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>systemProperty-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>systemProperty(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>systemProperty-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>systemProperty(String, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/JavaForkOptions.html</Path>
<Anchor>systemProperty-java.lang.String-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>tagletPath(List&lt;File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>tagletPath-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>tagletPath(File...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>tagletPath-java.io.File...-</Anchor></Token>
<Token><TokenIdentifier><Name>taglets(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>taglets-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>taglets(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>taglets-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>tags(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>tags-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>tags(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>tags-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>tagsFile(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>tagsFile-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>Tar</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Tar.html</Path>
</Token>
<Token><TokenIdentifier><Name>Tar()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Tar.html</Path>
<Anchor>Tar--</Anchor></Token>
<Token><TokenIdentifier><Name>target(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCompatibleToolChain.html</Path>
<Anchor>target-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>target(String, Action&lt;? super GccPlatformToolChain&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/GccCompatibleToolChain.html</Path>
<Anchor>target-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>TARGET_COMPATIBILITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/IdeaPlugin.html</Path>
<Anchor>TARGET_COMPATIBILITY</Anchor></Token>
<Token><TokenIdentifier><Name>targetBuild(Action&lt;GradleBuildInvocationSpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/buildcomparison/gradle/CompareGradleBuilds.html</Path>
<Anchor>targetBuild-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>targetBuildTypes(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/TargetedNativeComponent.html</Path>
<Anchor>targetBuildTypes-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>TargetedNativeComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/TargetedNativeComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>targetFlavors(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/TargetedNativeComponent.html</Path>
<Anchor>targetFlavors-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>TargetJdk</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/TargetJdk.html</Path>
</Token>
<Token><TokenIdentifier><Name>targetPlatform(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/PlatformAwareComponentSpec.html</Path>
<Anchor>targetPlatform-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>tarTree(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>tarTree-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>tarTree(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>tarTree-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>task(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/initialization/IncludedBuild.html</Path>
<Anchor>task-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>task(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>task-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>task(Map&lt;String, ?&gt;, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>task-java.util.Map-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>task(Map&lt;String, ?&gt;, String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>task-java.util.Map-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>task(String, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>task-java.lang.String-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>Task</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
</Token>
<Token><TokenIdentifier><Name>task(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildResult.html</Path>
<Anchor>task-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Task</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/Task.html</Path>
</Token>
<Token><TokenIdentifier><Name>Task.Namer</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.Namer.html</Path>
</Token>
<Token><TokenIdentifier><Name>TASK_ACTION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_ACTION</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_CONSTRUCTOR_ARGS</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_CONSTRUCTOR_ARGS</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_DEPENDS_ON</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_DEPENDS_ON</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_DESCRIPTION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_DESCRIPTION</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_DIST_TAR_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>TASK_DIST_TAR_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_DIST_ZIP_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>TASK_DIST_ZIP_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_EXTENSION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoPluginExtension.html</Path>
<Anchor>TASK_EXTENSION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_INSTALL_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/distribution/plugins/DistributionPlugin.html</Path>
<Anchor>TASK_INSTALL_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/BuildEnvironmentReportTask.html</Path>
<Anchor>TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_OVERWRITE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_OVERWRITE</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_REPORT</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ProjectReportsPlugin.html</Path>
<Anchor>TASK_REPORT</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_RUN_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>TASK_RUN_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_START_SCRIPTS_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ApplicationPlugin.html</Path>
<Anchor>TASK_START_SCRIPTS_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TASK_TYPE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Task.html</Path>
<Anchor>TASK_TYPE</Anchor></Token>
<Token><TokenIdentifier><Name>TaskAction</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskAction.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskActionListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskActionListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskDestroyables</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskDestroyables.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskExecutionAdapter</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionAdapter.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskExecutionAdapter()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionAdapter.html</Path>
<Anchor>TaskExecutionAdapter--</Anchor></Token>
<Token><TokenIdentifier><Name>TaskExecutionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskExecutionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskExecutionException(Task, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskExecutionException.html</Path>
<Anchor>TaskExecutionException-org.gradle.api.Task-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>TaskExecutionGraph</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskExecutionGraphListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraphListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskExecutionListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskExecutionRequest</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/TaskExecutionRequest.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskFailureResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskFailureResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskFilePropertyBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskFilePropertyBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskFinishEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskFinishEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskInputFilePropertyBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskInputPropertyBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputPropertyBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskInputs</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputs.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskInstantiationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInstantiationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskInstantiationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInstantiationException.html</Path>
<Anchor>TaskInstantiationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>TaskInstantiationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInstantiationException.html</Path>
<Anchor>TaskInstantiationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>TaskLocalState</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskLocalState.html</Path>
</Token>
<Token><TokenIdentifier><Name>taskName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryTasksCollection.html</Path>
<Anchor>taskName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>taskName(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/BinaryTasksCollection.html</Path>
<Anchor>taskName-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>TaskOperationDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskOperationDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskOperationResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskOperationResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskOutcome</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/TaskOutcome.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskOutputFilePropertyBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskOutputs</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
</Token>
<Token><TokenIdentifier><Name>taskPaths(TaskOutcome)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildResult.html</Path>
<Anchor>taskPaths-org.gradle.testkit.runner.TaskOutcome-</Anchor></Token>
<Token><TokenIdentifier><Name>TaskProgressEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskProgressEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskPropertyBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskPropertyBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskReference</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskReference.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskReportTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskReportTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/diagnostics/TaskReportTask.html</Path>
<Anchor>TaskReportTask--</Anchor></Token>
<Token><TokenIdentifier><Name>tasks(TaskOutcome)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/BuildResult.html</Path>
<Anchor>tasks-org.gradle.testkit.runner.TaskOutcome-</Anchor></Token>
<Token><TokenIdentifier><Name>TaskSelector</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/TaskSelector.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskSkippedResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskSkippedResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskStartEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskStartEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskState</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskState.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskSuccessResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/task/TaskSuccessResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskValidationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskValidationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>TaskValidationException(String, List&lt;InvalidUserDataException&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskValidationException.html</Path>
<Anchor>TaskValidationException-java.lang.String-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>TemplateBasedScriptGenerator</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/jvm/application/scripts/TemplateBasedScriptGenerator.html</Path>
</Token>
<Token><TokenIdentifier><Name>TEST</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</Path>
<Anchor>TEST</Anchor></Token>
<Token><TokenIdentifier><Name>Test</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
</Token>
<Token><TokenIdentifier><Name>Test()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>Test--</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_ANNOTATION_PROCESSOR_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_ANNOTATION_PROCESSOR_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_CLASSES_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_CLASSES_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_COMPILE_CLASSPATH_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_COMPILE_CLASSPATH_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_COMPILE_CONFIGURATION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/plugins/PlayPluginConfigurations.html</Path>
<Anchor>TEST_COMPILE_CONFIGURATION</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_COMPILE_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_COMPILE_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_COMPILE_ONLY_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_COMPILE_ONLY_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_COMPILE_PRIORITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>TEST_COMPILE_PRIORITY</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_IMPLEMENTATION_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_IMPLEMENTATION_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_RESULTS_DIR_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingBasePlugin.html</Path>
<Anchor>TEST_RESULTS_DIR_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_RUNTIME_CLASSPATH_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_RUNTIME_CLASSPATH_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_RUNTIME_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_RUNTIME_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_RUNTIME_ONLY_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_RUNTIME_ONLY_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_RUNTIME_PRIORITY</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/MavenPlugin.html</Path>
<Anchor>TEST_RUNTIME_PRIORITY</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_SOURCE_SET_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/SourceSet.html</Path>
<Anchor>TEST_SOURCE_SET_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TEST_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaPlugin.html</Path>
<Anchor>TEST_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TestComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/TestComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestExceptionFormat</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestExceptionFormat.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestExecutionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestExecutionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestExecutionException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestExecutionException.html</Path>
<Anchor>TestExecutionException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>TestExecutionException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestExecutionException.html</Path>
<Anchor>TestExecutionException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>TestExecutionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestExecutionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestExecutionException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestExecutionException.html</Path>
<Anchor>TestExecutionException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>TestExecutionException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestExecutionException.html</Path>
<Anchor>TestExecutionException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>TestFailureResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestFailureResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestFilter</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFilter.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestFinishEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestFinishEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>testFramework(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>testFramework-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>TestFrameworkOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFrameworkOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestFrameworkOptions()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestFrameworkOptions.html</Path>
<Anchor>TestFrameworkOptions--</Anchor></Token>
<Token><TokenIdentifier><Name>testing(ComponentSpec)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteSpec.html</Path>
<Anchor>testing-org.gradle.platform.base.ComponentSpec-</Anchor></Token>
<Token><TokenIdentifier><Name>TestingBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestingBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingBasePlugin.html</Path>
<Anchor>TestingBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>TestingModelBasePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingModelBasePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestingModelBasePlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingModelBasePlugin.html</Path>
<Anchor>TestingModelBasePlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>TestLauncher</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestLogEvent</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>testLogging(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>testLogging-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>testLogging(Action&lt;? super TestLoggingContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/AbstractTestTask.html</Path>
<Anchor>testLogging-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>TestLogging</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogging.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestLoggingContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestNGOptions</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestNGOptions(File)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>TestNGOptions-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>TestOperationDescriptor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestOperationDescriptor.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestOperationResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestOperationResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestOutputEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestOutputEvent.Destination</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputEvent.Destination.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestOutputListener</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputListener.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestProgressEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestProgressEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestReport</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestReport()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestReport.html</Path>
<Anchor>TestReport--</Anchor></Token>
<Token><TokenIdentifier><Name>TestResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestResult.ResultType</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.ResultType.html</Path>
</Token>
<Token><TokenIdentifier><Name>TESTS_DIR_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/plugins/TestingBasePlugin.html</Path>
<Anchor>TESTS_DIR_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>TestSkippedResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestSkippedResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>testSourceSets(SourceSet...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/GradlePluginDevelopmentExtension.html</Path>
<Anchor>testSourceSets-org.gradle.api.tasks.SourceSet...-</Anchor></Token>
<Token><TokenIdentifier><Name>TestStackTraceFilter</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestStackTraceFilter.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestStartEvent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestStartEvent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestSuccessResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/TestSuccessResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestSuiteBinarySpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteBinarySpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestSuiteComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/TestSuiteComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestSuiteContainer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteContainer.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestSuiteSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestSuiteTaskCollection</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/base/TestSuiteTaskCollection.html</Path>
</Token>
<Token><TokenIdentifier><Name>TestTaskReports</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestTaskReports.html</Path>
</Token>
<Token><TokenIdentifier><Name>TextConfigFile</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/TextConfigFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>TextProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/TextProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>TextResource</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResource.html</Path>
</Token>
<Token><TokenIdentifier><Name>TextResourceFactory</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/resources/TextResourceFactory.html</Path>
</Token>
<Token><TokenIdentifier><Name>to(Object...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ObjectConfigurationAction.html</Path>
<Anchor>to-java.lang.Object...-</Anchor></Token>
<Token><TokenIdentifier><Name>toHex(long)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>toHex-long-</Anchor></Token>
<Token><TokenIdentifier><Name>token()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/CancellationTokenSource.html</Path>
<Anchor>token--</Anchor></Token>
<Token><TokenIdentifier><Name>toLong(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>toLong-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>Tool</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Tool.html</Path>
</Token>
<Token><TokenIdentifier><Name>ToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>ToolChainRegistry</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ToolChainRegistry.html</Path>
</Token>
<Token><TokenIdentifier><Name>ToolingModelBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ToolingModelBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>ToolingModelBuilderRegistry</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/ToolingModelBuilderRegistry.html</Path>
</Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Attribute.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/RelativePath.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/TargetJdk.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractLibrary.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AccessRule.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/BuildCommand.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Classpath.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Container.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Library.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Link.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Output.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Project.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ProjectDependency.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Variable.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/JarDirectory.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Jdk.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Module.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleDependency.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/ModuleLibrary.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Path.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/signatory/pgp/PgpKeyId.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SignOperation.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toString()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>toString--</Anchor></Token>
<Token><TokenIdentifier><Name>toVersion(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>toVersion-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>toVersion(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/TargetJdk.html</Path>
<Anchor>toVersion-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>toXmlNode(Node, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/EarModule.html</Path>
<Anchor>toXmlNode-groovy.util.Node-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>transform(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/ArtifactTransform.html</Path>
<Anchor>transform-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>transform(IN)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Transformer.html</Path>
<Anchor>transform-IN-</Anchor></Token>
<Token><TokenIdentifier><Name>TransformationFileType</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/TransformationFileType.html</Path>
</Token>
<Token><TokenIdentifier><Name>Transformer</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Transformer.html</Path>
</Token>
<Token><TokenIdentifier><Name>trim()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>trim--</Anchor></Token>
<Token><TokenIdentifier><Name>trim(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/SourceFolder.html</Path>
<Anchor>trim-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>TwirlCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>TwirlCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/play/tasks/TwirlCompile.html</Path>
<Anchor>TwirlCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>TwirlImports</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlImports.html</Path>
</Token>
<Token><TokenIdentifier><Name>TwirlSourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlSourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>TwirlTemplateFormat</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlTemplateFormat.html</Path>
</Token>
<Token><TokenIdentifier><Name>type(Class&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ObjectConfigurationAction.html</Path>
<Anchor>type-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>type(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheServiceFactory.Describer.html</Path>
<Anchor>type-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>TypeBuilder</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/TypeBuilder.html</Path>
</Token>
<Token><TokenIdentifier><Name>TypeOf</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
</Token>
<Token><TokenIdentifier><Name>TypeOf()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>TypeOf--</Anchor></Token>
<Token><TokenIdentifier><Name>typeOf(Class&lt;T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>typeOf-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>typeOf(Type)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reflect/TypeOf.html</Path>
<Anchor>typeOf-java.lang.reflect.Type-</Anchor></Token>
<Token><TokenIdentifier><Name>UnableToDeleteFileException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/UnableToDeleteFileException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnableToDeleteFileException(File)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/UnableToDeleteFileException.html</Path>
<Anchor>UnableToDeleteFileException-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>UncheckedIOException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UncheckedIOException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UncheckedIOException()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UncheckedIOException.html</Path>
<Anchor>UncheckedIOException--</Anchor></Token>
<Token><TokenIdentifier><Name>UncheckedIOException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UncheckedIOException.html</Path>
<Anchor>UncheckedIOException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UncheckedIOException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UncheckedIOException.html</Path>
<Anchor>UncheckedIOException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UncheckedIOException(Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UncheckedIOException.html</Path>
<Anchor>UncheckedIOException-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UnexpectedBuildFailure</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnexpectedBuildFailure.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnexpectedBuildFailure(String, BuildResult)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnexpectedBuildFailure.html</Path>
<Anchor>UnexpectedBuildFailure-java.lang.String-org.gradle.testkit.runner.BuildResult-</Anchor></Token>
<Token><TokenIdentifier><Name>UnexpectedBuildResultException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnexpectedBuildResultException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnexpectedBuildSuccess</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnexpectedBuildSuccess.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnexpectedBuildSuccess(String, BuildResult)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnexpectedBuildSuccess.html</Path>
<Anchor>UnexpectedBuildSuccess-java.lang.String-org.gradle.testkit.runner.BuildResult-</Anchor></Token>
<Token><TokenIdentifier><Name>unexport()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/UnexportMainSymbol.html</Path>
<Anchor>unexport--</Anchor></Token>
<Token><TokenIdentifier><Name>UnexportMainSymbol</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/UnexportMainSymbol.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnexportMainSymbol()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/tasks/UnexportMainSymbol.html</Path>
<Anchor>UnexportMainSymbol--</Anchor></Token>
<Token><TokenIdentifier><Name>union(Spec&lt;? super T&gt;...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>union-org.gradle.api.specs.Spec...-</Anchor></Token>
<Token><TokenIdentifier><Name>union(Collection&lt;? extends Spec&lt;? super T&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/specs/Specs.html</Path>
<Anchor>union-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownConfigurationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/UnknownConfigurationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownConfigurationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/UnknownConfigurationException.html</Path>
<Anchor>UnknownConfigurationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownDomainObjectException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownDomainObjectException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownDomainObjectException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownDomainObjectException.html</Path>
<Anchor>UnknownDomainObjectException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownDomainObjectException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownDomainObjectException.html</Path>
<Anchor>UnknownDomainObjectException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownModelException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/UnknownModelException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownModelException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/provider/model/UnknownModelException.html</Path>
<Anchor>UnknownModelException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownModelException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/UnknownModelException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownModelException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/UnknownModelException.html</Path>
<Anchor>UnknownModelException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownModelException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/UnknownModelException.html</Path>
<Anchor>UnknownModelException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownPluginException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/UnknownPluginException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownPluginException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/UnknownPluginException.html</Path>
<Anchor>UnknownPluginException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownProjectException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownProjectException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownProjectException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownProjectException.html</Path>
<Anchor>UnknownProjectException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownProjectException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownProjectException.html</Path>
<Anchor>UnknownProjectException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownPropertyException(ExtraPropertiesExtension, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/ExtraPropertiesExtension.UnknownPropertyException.html</Path>
<Anchor>UnknownPropertyException-org.gradle.api.plugins.ExtraPropertiesExtension-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownRepositoryException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/UnknownRepositoryException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownRepositoryException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/UnknownRepositoryException.html</Path>
<Anchor>UnknownRepositoryException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownTaskException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownTaskException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnknownTaskException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownTaskException.html</Path>
<Anchor>UnknownTaskException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnknownTaskException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/UnknownTaskException.html</Path>
<Anchor>UnknownTaskException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>Unmanaged</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Unmanaged.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnresolvedArtifactResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedArtifactResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnresolvedComponentResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedComponentResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnresolvedDependency</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/UnresolvedDependency.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnresolvedDependencyResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/UnresolvedDependencyResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnsupportedBuildArgumentException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/exceptions/UnsupportedBuildArgumentException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnsupportedBuildArgumentException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/exceptions/UnsupportedBuildArgumentException.html</Path>
<Anchor>UnsupportedBuildArgumentException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedBuildArgumentException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/exceptions/UnsupportedBuildArgumentException.html</Path>
<Anchor>UnsupportedBuildArgumentException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedFeatureException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnsupportedFeatureException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnsupportedFeatureException(String, GradleVersion, GradleVersion)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnsupportedFeatureException.html</Path>
<Anchor>UnsupportedFeatureException-java.lang.String-org.gradle.util.GradleVersion-org.gradle.util.GradleVersion-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedFeatureException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/UnsupportedFeatureException.html</Path>
<Anchor>UnsupportedFeatureException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedMethodException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/UnsupportedMethodException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnsupportedMethodException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/UnsupportedMethodException.html</Path>
<Anchor>UnsupportedMethodException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedMethodException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/model/UnsupportedMethodException.html</Path>
<Anchor>UnsupportedMethodException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedOperationConfigurationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/exceptions/UnsupportedOperationConfigurationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnsupportedOperationConfigurationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/exceptions/UnsupportedOperationConfigurationException.html</Path>
<Anchor>UnsupportedOperationConfigurationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedOperationConfigurationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/exceptions/UnsupportedOperationConfigurationException.html</Path>
<Anchor>UnsupportedOperationConfigurationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedVersionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/UnsupportedVersionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>UnsupportedVersionException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/UnsupportedVersionException.html</Path>
<Anchor>UnsupportedVersionException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>UnsupportedVersionException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/UnsupportedVersionException.html</Path>
<Anchor>UnsupportedVersionException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>Upload</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
</Token>
<Token><TokenIdentifier><Name>Upload()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>Upload--</Anchor></Token>
<Token><TokenIdentifier><Name>upload()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/Upload.html</Path>
<Anchor>upload--</Anchor></Token>
<Token><TokenIdentifier><Name>UPLOAD_ARCHIVES_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
<Anchor>UPLOAD_ARCHIVES_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>UPLOAD_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/BasePlugin.html</Path>
<Anchor>UPLOAD_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>upToDateWhen(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>upToDateWhen-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>upToDateWhen(Spec&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>upToDateWhen-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>upToDateWhen(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>upToDateWhen-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>upToDateWhen(Spec&lt;? super Task&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputs.html</Path>
<Anchor>upToDateWhen-org.gradle.api.specs.Spec-</Anchor></Token>
<Token><TokenIdentifier><Name>uri(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>uri-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>uri(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>uri-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>Usage</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
</Token>
<Token><TokenIdentifier><Name>USAGE_ATTRIBUTE</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/attributes/Usage.html</Path>
<Anchor>USAGE_ATTRIBUTE</Anchor></Token>
<Token><TokenIdentifier><Name>use(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>use-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>use()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>use--</Anchor></Token>
<Token><TokenIdentifier><Name>useBuildDistribution()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>useBuildDistribution--</Anchor></Token>
<Token><TokenIdentifier><Name>useDefaultListeners()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>useDefaultListeners--</Anchor></Token>
<Token><TokenIdentifier><Name>useDefaultListeners(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/testng/TestNGOptions.html</Path>
<Anchor>useDefaultListeners-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>useDistribution(URI)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>useDistribution-java.net.URI-</Anchor></Token>
<Token><TokenIdentifier><Name>useEmptySettings()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/StartParameter.html</Path>
<Anchor>useEmptySettings--</Anchor></Token>
<Token><TokenIdentifier><Name>useGpgCmd()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/signing/SigningExtension.html</Path>
<Anchor>useGpgCmd--</Anchor></Token>
<Token><TokenIdentifier><Name>useGradleUserHomeDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>useGradleUserHomeDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>useGradleVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>useGradleVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>useInstallation(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/GradleConnector.html</Path>
<Anchor>useInstallation-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>useJUnit()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useJUnit--</Anchor></Token>
<Token><TokenIdentifier><Name>useJUnit(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useJUnit-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>useJUnit(Action&lt;? super JUnitOptions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useJUnit-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>useJUnitPlatform()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useJUnitPlatform--</Anchor></Token>
<Token><TokenIdentifier><Name>useJUnitPlatform(Action&lt;? super JUnitPlatformOptions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useJUnitPlatform-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>useLogger(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/invocation/Gradle.html</Path>
<Anchor>useLogger-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>useModule(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginResolveDetails.html</Path>
<Anchor>useModule-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>useTarget(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolveDetails.html</Path>
<Anchor>useTarget-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>useTarget(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitution.html</Path>
<Anchor>useTarget-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>useTarget(Object, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitution.html</Path>
<Anchor>useTarget-java.lang.Object-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>useTestNG()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useTestNG--</Anchor></Token>
<Token><TokenIdentifier><Name>useTestNG(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useTestNG-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>useTestNG(Action&lt;? super TestFrameworkOptions&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>useTestNG-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>useVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyResolveDetails.html</Path>
<Anchor>useVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>useVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/management/PluginResolveDetails.html</Path>
<Anchor>useVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>VALID_LINKED_RESOURCE_ARGS</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseProject.html</Path>
<Anchor>VALID_LINKED_RESOURCE_ARGS</Anchor></Token>
<Token><TokenIdentifier><Name>validate(int)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/Pmd.html</Path>
<Anchor>validate-int-</Anchor></Token>
<Token><TokenIdentifier><Name>Validate</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/Validate.html</Path>
</Token>
<Token><TokenIdentifier><Name>validateTaskClasses()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>validateTaskClasses--</Anchor></Token>
<Token><TokenIdentifier><Name>ValidateTaskProperties</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
</Token>
<Token><TokenIdentifier><Name>ValidateTaskProperties()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/devel/tasks/ValidateTaskProperties.html</Path>
<Anchor>ValidateTaskProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.AntMessagePriority.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.State.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.SortOrder.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionCause.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DuplicatesStrategy.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.AntType.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/ConsoleOutput.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/ShowStacktrace.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/WarningMode.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LogLevel.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PathValidation.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/TargetJdk.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.Format.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.OutputType.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Compression.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/ZipEntryCompression.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/PathSensitivity.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestExceptionFormat.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogEvent.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestStackTraceFilter.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputEvent.Destination.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.ResultType.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.DistributionType.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.PathBase.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocMemberLevel.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOutputLevel.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftVersion.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlImports.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Linkage.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.FacetType.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterAppliesTo.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterType.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.Output.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/TaskOutcome.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationType.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestKind.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/ForkMode.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>valueOf(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/IsolationMode.html</Path>
<Anchor>valueOf-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/AntBuilder.AntMessagePriority.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.State.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ResolutionStrategy.SortOrder.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/result/ComponentSelectionCause.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/DuplicatesStrategy.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileCollection.AntType.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/JavaVersion.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/ConsoleOutput.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/ShowStacktrace.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/WarningMode.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/LogLevel.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/PathValidation.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/quality/TargetJdk.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/model/ModelReport.Format.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/reporting/Report.OutputType.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Compression.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/ZipEntryCompression.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/PathSensitivity.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestExceptionFormat.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLogEvent.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestStackTraceFilter.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestOutputEvent.Destination.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/TestResult.ResultType.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.DistributionType.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.PathBase.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocMemberLevel.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/JavadocOutputLevel.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/swift/SwiftVersion.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/twirl/TwirlImports.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/Linkage.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Facet.FacetType.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterAppliesTo.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/ResourceFilterType.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/plugins/JacocoTaskExtension.Output.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/TaskOutcome.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/OperationType.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/events/test/JvmTestKind.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/ForkMode.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>values()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/IsolationMode.html</Path>
<Anchor>values--</Anchor></Token>
<Token><TokenIdentifier><Name>Variable</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Variable.html</Path>
</Token>
<Token><TokenIdentifier><Name>Variable(Node, FileReferenceFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Variable.html</Path>
<Anchor>Variable-groovy.util.Node-org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>Variable(FileReference)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/Variable.html</Path>
<Anchor>Variable-org.gradle.plugins.ide.eclipse.model.FileReference-</Anchor></Token>
<Token><TokenIdentifier><Name>Variant</Name><Type>Notation</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/Variant.html</Path>
</Token>
<Token><TokenIdentifier><Name>VariantComponent</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/VariantComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>VariantComponentSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/VariantComponentSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>VariantMetadata</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VariantMetadata.html</Path>
</Token>
<Token><TokenIdentifier><Name>variants(Action&lt;? super NamedDomainObjectContainer&lt;ConfigurationVariant&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ConfigurationPublications.html</Path>
<Anchor>variants-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>VariantTransform</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransform.html</Path>
</Token>
<Token><TokenIdentifier><Name>VariantTransformConfigurationException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransformConfigurationException.html</Path>
</Token>
<Token><TokenIdentifier><Name>VariantTransformConfigurationException(String, Throwable)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransformConfigurationException.html</Path>
<Anchor>VariantTransformConfigurationException-java.lang.String-java.lang.Throwable-</Anchor></Token>
<Token><TokenIdentifier><Name>VariantTransformConfigurationException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/transform/VariantTransformConfigurationException.html</Path>
<Anchor>VariantTransformConfigurationException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>VcsMapping</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VcsMapping.html</Path>
</Token>
<Token><TokenIdentifier><Name>vcsMappings(Action&lt;? super VcsMappings&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/SourceControl.html</Path>
<Anchor>vcsMappings-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>VcsMappings</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VcsMappings.html</Path>
</Token>
<Token><TokenIdentifier><Name>verbose()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>verbose--</Anchor></Token>
<Token><TokenIdentifier><Name>verbose()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>verbose--</Anchor></Token>
<Token><TokenIdentifier><Name>VERIFICATION_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/JavaBasePlugin.html</Path>
<Anchor>VERIFICATION_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>VERIFICATION_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/base/plugins/LifecycleBasePlugin.html</Path>
<Anchor>VERIFICATION_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>VerificationTask</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/VerificationTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>version(Action&lt;? super MutableVersionConstraint&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyConstraint.html</Path>
<Anchor>version-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>version(Action&lt;? super MutableVersionConstraint&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencyMetadata.html</Path>
<Anchor>version-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>version(Action&lt;? super MutableVersionConstraint&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ExternalDependency.html</Path>
<Anchor>version-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>version(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>version-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>version()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>version--</Anchor></Token>
<Token><TokenIdentifier><Name>version(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/platform/base/ModuleDependencySpecBuilder.html</Path>
<Anchor>version-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>version(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginDependencySpec.html</Path>
<Anchor>version-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>VersionConstraint</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VersionConstraint.html</Path>
</Token>
<Token><TokenIdentifier><Name>VersionControlSpec</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VersionControlSpec.html</Path>
</Token>
<Token><TokenIdentifier><Name>violationRules(Action&lt;? super JacocoViolationRulesContainer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testing/jacoco/tasks/JacocoCoverageVerification.html</Path>
<Anchor>violationRules-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>visit(FileVisitor)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>visit-org.gradle.api.file.FileVisitor-</Anchor></Token>
<Token><TokenIdentifier><Name>visit(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>visit-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>visit(Action&lt;? super FileVisitDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileTree.html</Path>
<Anchor>visit-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>visitDir(FileVisitDetails)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/EmptyFileVisitor.html</Path>
<Anchor>visitDir-org.gradle.api.file.FileVisitDetails-</Anchor></Token>
<Token><TokenIdentifier><Name>visitDir(FileVisitDetails)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileVisitor.html</Path>
<Anchor>visitDir-org.gradle.api.file.FileVisitDetails-</Anchor></Token>
<Token><TokenIdentifier><Name>visitFile(FileVisitDetails)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/EmptyFileVisitor.html</Path>
<Anchor>visitFile-org.gradle.api.file.FileVisitDetails-</Anchor></Token>
<Token><TokenIdentifier><Name>visitFile(FileVisitDetails)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/FileVisitor.html</Path>
<Anchor>visitFile-org.gradle.api.file.FileVisitDetails-</Anchor></Token>
<Token><TokenIdentifier><Name>VisualCpp</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCpp.html</Path>
</Token>
<Token><TokenIdentifier><Name>VisualCppPlatformToolChain</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/VisualCppPlatformToolChain.html</Path>
</Token>
<Token><TokenIdentifier><Name>VisualStudioExtension</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>VisualStudioPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/plugins/VisualStudioPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>VisualStudioPlugin(Instantiator, FileResolver, IdeArtifactRegistry)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/plugins/VisualStudioPlugin.html</Path>
<Anchor>VisualStudioPlugin-org.gradle.internal.reflect.Instantiator-org.gradle.api.internal.file.FileResolver-org.gradle.plugins.ide.internal.IdeArtifactRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>VisualStudioProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>VisualStudioRootExtension</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioRootExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>VisualStudioSolution</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/VisualStudioSolution.html</Path>
</Token>
<Token><TokenIdentifier><Name>War</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
</Token>
<Token><TokenIdentifier><Name>War()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>War--</Anchor></Token>
<Token><TokenIdentifier><Name>WAR_EXTENSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>WAR_EXTENSION</Anchor></Token>
<Token><TokenIdentifier><Name>WAR_TASK_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
<Anchor>WAR_TASK_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>warn(Action&lt;TestLogging&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/logging/TestLoggingContainer.html</Path>
<Anchor>warn-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>WarningMode</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/logging/configuration/WarningMode.html</Path>
</Token>
<Token><TokenIdentifier><Name>WarPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>WarPlugin(ObjectFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
<Anchor>WarPlugin-org.gradle.api.model.ObjectFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>WarPluginConvention</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPluginConvention.html</Path>
</Token>
<Token><TokenIdentifier><Name>WarPluginConvention(Project)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPluginConvention.html</Path>
<Anchor>WarPluginConvention-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>WbDependentModule</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
</Token>
<Token><TokenIdentifier><Name>WbDependentModule(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>WbDependentModule-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>WbDependentModule(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbDependentModule.html</Path>
<Anchor>WbDependentModule-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>WbModuleEntry</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbModuleEntry.html</Path>
</Token>
<Token><TokenIdentifier><Name>WbProperty</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
</Token>
<Token><TokenIdentifier><Name>WbProperty(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>WbProperty-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>WbProperty(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbProperty.html</Path>
<Anchor>WbProperty-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>WbResource</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
</Token>
<Token><TokenIdentifier><Name>WbResource(Node)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>WbResource-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>WbResource(String, String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WbResource.html</Path>
<Anchor>WbResource-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>WEB_APP_GROUP</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/WarPlugin.html</Path>
<Anchor>WEB_APP_GROUP</Anchor></Token>
<Token><TokenIdentifier><Name>WEB_LIBS_CONTAINER</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/EclipseWtpPlugin.html</Path>
<Anchor>WEB_LIBS_CONTAINER</Anchor></Token>
<Token><TokenIdentifier><Name>webInf(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>webInf-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>webInf(Action&lt;? super CopySpec&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/War.html</Path>
<Anchor>webInf-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>webModule(String, String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>webModule-java.lang.String-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>whenConfigured(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>whenConfigured-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>whenConfigured(Action&lt;MavenPom&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>whenConfigured-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenElementFinalized(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>whenElementFinalized-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenElementFinalized(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>whenElementFinalized-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenElementKnown(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>whenElementKnown-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenElementKnown(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryCollection.html</Path>
<Anchor>whenElementKnown-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenFinalized(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/BinaryProvider.html</Path>
<Anchor>whenFinalized-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenMerged(Action&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>whenMerged-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenMerged(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/FileContentMerger.html</Path>
<Anchor>whenMerged-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>whenObjectAdded(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>whenObjectAdded-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenObjectAdded(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>whenObjectAdded-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>whenObjectRemoved(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>whenObjectRemoved-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenObjectRemoved(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>whenObjectRemoved-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>whenPluginAdded(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>whenPluginAdded-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenPluginAdded(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>whenPluginAdded-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>whenReady(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>whenReady-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>whenReady(Action&lt;TaskExecutionGraph&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/execution/TaskExecutionGraph.html</Path>
<Anchor>whenReady-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenTaskAdded(Action&lt;? super T&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>whenTaskAdded-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>whenTaskAdded(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>whenTaskAdded-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>WINDOWS</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/OperatingSystemFamily.html</Path>
<Anchor>WINDOWS</Anchor></Token>
<Token><TokenIdentifier><Name>WindowsResourceCompile</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
</Token>
<Token><TokenIdentifier><Name>WindowsResourceCompile()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/tasks/WindowsResourceCompile.html</Path>
<Anchor>WindowsResourceCompile--</Anchor></Token>
<Token><TokenIdentifier><Name>WindowsResourceScriptPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/plugins/WindowsResourceScriptPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>WindowsResourceScriptPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/plugins/WindowsResourceScriptPlugin.html</Path>
<Anchor>WindowsResourceScriptPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>WindowsResourceSet</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/WindowsResourceSet.html</Path>
</Token>
<Token><TokenIdentifier><Name>WindowsResourcesPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/plugins/WindowsResourcesPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>WindowsResourcesPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/language/rc/plugins/WindowsResourcesPlugin.html</Path>
<Anchor>WindowsResourcesPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>windowTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>windowTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>windowTitle(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/StandardJavadocDocletOptions.html</Path>
<Anchor>windowTitle-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>with(ComponentSelector)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/DependencySubstitutions.Substitution.html</Path>
<Anchor>with-org.gradle.api.artifacts.component.ComponentSelector-</Anchor></Token>
<Token><TokenIdentifier><Name>with(CopySpec...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/file/CopySpec.html</Path>
<Anchor>with-org.gradle.api.file.CopySpec...-</Anchor></Token>
<Token><TokenIdentifier><Name>with(CopySpec...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractCopyTask.html</Path>
<Anchor>with-org.gradle.api.file.CopySpec...-</Anchor></Token>
<Token><TokenIdentifier><Name>withArguments(Action&lt;? super List&lt;String&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/toolchain/CommandLineToolConfiguration.html</Path>
<Anchor>withArguments-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withArguments(List&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withArguments-java.util.List-</Anchor></Token>
<Token><TokenIdentifier><Name>withArguments(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withArguments-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>withArguments(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>withArguments-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>withArguments(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>withArguments-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>withArguments(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>withArguments-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>withArguments(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>withArguments-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>withArtifacts(Class&lt;? extends Component&gt;, Class&lt;? extends Artifact&gt;...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/ArtifactResolutionQuery.html</Path>
<Anchor>withArtifacts-java.lang.Class-java.lang.Class...-</Anchor></Token>
<Token><TokenIdentifier><Name>withArtifacts(Class&lt;? extends Component&gt;, Collection&lt;Class&lt;? extends Artifact&gt;&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/query/ArtifactResolutionQuery.html</Path>
<Anchor>withArtifacts-java.lang.Class-java.util.Collection-</Anchor></Token>
<Token><TokenIdentifier><Name>withCancellationToken(CancellationToken)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/ConfigurableLauncher.html</Path>
<Anchor>withCancellationToken-org.gradle.tooling.CancellationToken-</Anchor></Token>
<Token><TokenIdentifier><Name>withCancellationToken(CancellationToken)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/LongRunningOperation.html</Path>
<Anchor>withCancellationToken-org.gradle.tooling.CancellationToken-</Anchor></Token>
<Token><TokenIdentifier><Name>withCapabilities(Action&lt;? super MutableCapabilitiesMetadata&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VariantMetadata.html</Path>
<Anchor>withCapabilities-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withContent(Action&lt;? super TextProvider&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/TextConfigFile.html</Path>
<Anchor>withContent-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withDebug(boolean)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withDebug-boolean-</Anchor></Token>
<Token><TokenIdentifier><Name>withDependencies(Action&lt;? super DependencySet&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/Configuration.html</Path>
<Anchor>withDependencies-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withDependencies(Action&lt;? super DirectDependenciesMetadata&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VariantMetadata.html</Path>
<Anchor>withDependencies-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withDependencyConstraints(Action&lt;? super DependencyConstraintsMetadata&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/VariantMetadata.html</Path>
<Anchor>withDependencyConstraints-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withGradleDistribution(URI)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withGradleDistribution-java.net.URI-</Anchor></Token>
<Token><TokenIdentifier><Name>withGradleInstallation(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withGradleInstallation-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>withGradleUserHomeDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
<Anchor>withGradleUserHomeDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>withGradleVersion(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withGradleVersion-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>withId(String, Action&lt;? super Plugin&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginContainer.html</Path>
<Anchor>withId-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withJvmTestClasses(String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>withJvmTestClasses-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>withJvmTestClasses(Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>withJvmTestClasses-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>withJvmTestMethods(String, String...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>withJvmTestMethods-java.lang.String-java.lang.String...-</Anchor></Token>
<Token><TokenIdentifier><Name>withJvmTestMethods(String, Iterable&lt;String&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>withJvmTestMethods-java.lang.String-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>withModule(Object, Action&lt;? super ComponentSelection&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelectionRules.html</Path>
<Anchor>withModule-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withModule(Object, Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelectionRules.html</Path>
<Anchor>withModule-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>withModule(Object, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentSelectionRules.html</Path>
<Anchor>withModule-java.lang.Object-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>withModule(Object, Action&lt;? super ComponentMetadataDetails&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentMetadataHandler.html</Path>
<Anchor>withModule-java.lang.Object-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withModule(Object, Closure&lt;?&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentMetadataHandler.html</Path>
<Anchor>withModule-java.lang.Object-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>withModule(Object, Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/dsl/ComponentMetadataHandler.html</Path>
<Anchor>withModule-java.lang.Object-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>withModule(String, Action&lt;? super VcsMapping&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/vcs/VcsMappings.html</Path>
<Anchor>withModule-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
<Anchor>withName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>withNamespace(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugin/use/PluginId.html</Path>
<Anchor>withNamespace-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>withNormalizer(Class&lt;? extends FileNormalizer&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>withNormalizer-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withParent(Project)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
<Anchor>withParent-org.gradle.api.Project-</Anchor></Token>
<Token><TokenIdentifier><Name>withPathSensitivity(PathSensitivity)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>withPathSensitivity-org.gradle.api.tasks.PathSensitivity-</Anchor></Token>
<Token><TokenIdentifier><Name>withPlugin(String, Action&lt;? super AppliedPlugin&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginManager.html</Path>
<Anchor>withPlugin-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withPluginClasspath()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withPluginClasspath--</Anchor></Token>
<Token><TokenIdentifier><Name>withPluginClasspath(Iterable&lt;? extends File&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withPluginClasspath-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>withProjectDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testfixtures/ProjectBuilder.html</Path>
<Anchor>withProjectDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>withProjectDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withProjectDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>withProjectPath(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/NativeLibraryRequirement.html</Path>
<Anchor>withProjectPath-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>withProperties(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesFileContentMerger.html</Path>
<Anchor>withProperties-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>withProperties(Action&lt;Properties&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/PropertiesFileContentMerger.html</Path>
<Anchor>withProperties-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withPropertyName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskFilePropertyBuilder.html</Path>
<Anchor>withPropertyName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>withPropertyName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskInputFilePropertyBuilder.html</Path>
<Anchor>withPropertyName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>withPropertyName(String)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskOutputFilePropertyBuilder.html</Path>
<Anchor>withPropertyName-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>withResource(String, Action&lt;? super InputStream&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/repositories/RepositoryResourceAccessor.html</Path>
<Anchor>withResource-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withTestKitDir(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/testkit/runner/GradleRunner.html</Path>
<Anchor>withTestKitDir-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>withTests(TestOperationDescriptor...)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>withTests-org.gradle.tooling.events.test.TestOperationDescriptor...-</Anchor></Token>
<Token><TokenIdentifier><Name>withTests(Iterable&lt;? extends TestOperationDescriptor&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/tooling/TestLauncher.html</Path>
<Anchor>withTests-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>withType-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;, Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectCollection.html</Path>
<Anchor>withType-java.lang.Class-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/DomainObjectSet.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectCollection.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectList.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/NamedDomainObjectSet.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/PluginCollection.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/TaskCollection.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>withType-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;, Action&lt;? super S&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>withType-java.lang.Class-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withType(Class&lt;S&gt;, Class&lt;? extends RuleSource&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/ModelMap.html</Path>
<Anchor>withType-java.lang.Class-java.lang.Class-</Anchor></Token>
<Token><TokenIdentifier><Name>withVariant(String, Action&lt;? super VariantMetadata&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/ComponentMetadataDetails.html</Path>
<Anchor>withVariant-java.lang.String-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>withXml-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Action&lt;XmlProvider&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>withXml-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Action&lt;? super XmlProvider&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/ivy/IvyModuleDescriptorSpec.html</Path>
<Anchor>withXml-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Action&lt;? super XmlProvider&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/publish/maven/MavenPom.html</Path>
<Anchor>withXml-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Action&lt;? super XmlProvider&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/XmlConfigFile.html</Path>
<Anchor>withXml-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>withXml-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Action&lt;? super XmlProvider&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>withXml-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlFileContentMerger.html</Path>
<Anchor>withXml-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>withXml(Action&lt;? super XmlProvider&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlFileContentMerger.html</Path>
<Anchor>withXml-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>WorkerConfiguration</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerConfiguration.html</Path>
</Token>
<Token><TokenIdentifier><Name>WorkerExecutionException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerExecutionException.html</Path>
</Token>
<Token><TokenIdentifier><Name>WorkerExecutionException(String)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerExecutionException.html</Path>
<Anchor>WorkerExecutionException-java.lang.String-</Anchor></Token>
<Token><TokenIdentifier><Name>WorkerExecutionException(String, Throwable...)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerExecutionException.html</Path>
<Anchor>WorkerExecutionException-java.lang.String-java.lang.Throwable...-</Anchor></Token>
<Token><TokenIdentifier><Name>WorkerExecutionException(String, Iterable&lt;? extends Throwable&gt;)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerExecutionException.html</Path>
<Anchor>WorkerExecutionException-java.lang.String-java.lang.Iterable-</Anchor></Token>
<Token><TokenIdentifier><Name>WorkerExecutor</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/workers/WorkerExecutor.html</Path>
</Token>
<Token><TokenIdentifier><Name>workingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/AbstractExecTask.html</Path>
<Anchor>workingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>workingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/JavaExec.html</Path>
<Anchor>workingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>workingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/testing/Test.html</Path>
<Anchor>workingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>workingDir(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/process/ProcessForkOptions.html</Path>
<Anchor>workingDir-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>WorkResult</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WorkResult.html</Path>
</Token>
<Token><TokenIdentifier><Name>WorkResults</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WorkResults.html</Path>
</Token>
<Token><TokenIdentifier><Name>workspace(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>workspace-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>workspace(Action&lt;? super IdeaWorkspace&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/IdeaModel.html</Path>
<Anchor>workspace-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>Workspace</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Workspace.html</Path>
</Token>
<Token><TokenIdentifier><Name>Workspace(XmlTransformer)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/idea/model/Workspace.html</Path>
<Anchor>Workspace-org.gradle.internal.xml.XmlTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>Wrapper</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
</Token>
<Token><TokenIdentifier><Name>Wrapper()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.html</Path>
<Anchor>Wrapper--</Anchor></Token>
<Token><TokenIdentifier><Name>Wrapper.DistributionType</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.DistributionType.html</Path>
</Token>
<Token><TokenIdentifier><Name>Wrapper.PathBase</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/wrapper/Wrapper.PathBase.html</Path>
</Token>
<Token><TokenIdentifier><Name>WrapperPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/plugins/WrapperPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>WrapperPlugin()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/buildinit/plugins/WrapperPlugin.html</Path>
<Anchor>WrapperPlugin--</Anchor></Token>
<Token><TokenIdentifier><Name>write(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/CoreJavadocOptions.html</Path>
<Anchor>write-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>write(File)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/MinimalJavadocOptions.html</Path>
<Anchor>write-java.io.File-</Anchor></Token>
<Token><TokenIdentifier><Name>write(JavadocOptionFileWriterContext)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/external/javadoc/OptionLessJavadocOptionFileOption.html</Path>
<Anchor>write-org.gradle.external.javadoc.internal.JavadocOptionFileWriterContext-</Anchor></Token>
<Token><TokenIdentifier><Name>writeEntryAttributes(Node)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/AbstractClasspathEntry.html</Path>
<Anchor>writeEntryAttributes-groovy.util.Node-</Anchor></Token>
<Token><TokenIdentifier><Name>WriteOnlyModelViewException</Name><Type>Exception</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/WriteOnlyModelViewException.html</Path>
</Token>
<Token><TokenIdentifier><Name>WriteOnlyModelViewException(String, ModelPath, ModelType&lt;?&gt;, ModelRuleDescriptor)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/model/WriteOnlyModelViewException.html</Path>
<Anchor>WriteOnlyModelViewException-java.lang.String-org.gradle.model.internal.core.ModelPath-org.gradle.model.internal.type.ModelType-org.gradle.model.internal.core.rule.describe.ModelRuleDescriptor-</Anchor></Token>
<Token><TokenIdentifier><Name>WriteProperties</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
</Token>
<Token><TokenIdentifier><Name>WriteProperties()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>WriteProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>writeProperties()</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/WriteProperties.html</Path>
<Anchor>writeProperties--</Anchor></Token>
<Token><TokenIdentifier><Name>writeTo(Writer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>writeTo-java.io.Writer-</Anchor></Token>
<Token><TokenIdentifier><Name>writeTo(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/artifacts/maven/MavenPom.html</Path>
<Anchor>writeTo-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>writeTo(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/java/archives/Manifest.html</Path>
<Anchor>writeTo-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>writeTo(OutputStream)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/caching/BuildCacheEntryWriter.html</Path>
<Anchor>writeTo-java.io.OutputStream-</Anchor></Token>
<Token><TokenIdentifier><Name>writeTo(Writer)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>writeTo-java.io.Writer-</Anchor></Token>
<Token><TokenIdentifier><Name>writeTo(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ear/descriptor/DeploymentDescriptor.html</Path>
<Anchor>writeTo-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>wtp(Closure)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>wtp-groovy.lang.Closure-</Anchor></Token>
<Token><TokenIdentifier><Name>wtp(Action&lt;? super EclipseWtp&gt;)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/EclipseModel.html</Path>
<Anchor>wtp-org.gradle.api.Action-</Anchor></Token>
<Token><TokenIdentifier><Name>WtpComponent</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
</Token>
<Token><TokenIdentifier><Name>WtpComponent(XmlTransformer)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpComponent.html</Path>
<Anchor>WtpComponent-org.gradle.internal.xml.XmlTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>WtpFacet</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
</Token>
<Token><TokenIdentifier><Name>WtpFacet(XmlTransformer)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/eclipse/model/WtpFacet.html</Path>
<Anchor>WtpFacet-org.gradle.internal.xml.XmlTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>XcodeExtension</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/XcodeExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>XcodePlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/plugins/XcodePlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>XcodePlugin(GidGenerator, ObjectFactory, IdeArtifactRegistry)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/plugins/XcodePlugin.html</Path>
<Anchor>XcodePlugin-org.gradle.ide.xcode.internal.xcodeproj.GidGenerator-org.gradle.api.model.ObjectFactory-org.gradle.plugins.ide.internal.IdeArtifactRegistry-</Anchor></Token>
<Token><TokenIdentifier><Name>xcodeProject</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/tasks/GenerateSchemeFileTask.html</Path>
<Anchor>xcodeProject</Anchor></Token>
<Token><TokenIdentifier><Name>XcodeProject</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/XcodeProject.html</Path>
</Token>
<Token><TokenIdentifier><Name>XcodeRootExtension</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/XcodeRootExtension.html</Path>
</Token>
<Token><TokenIdentifier><Name>XcodeWorkspace</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/xcode/XcodeWorkspace.html</Path>
</Token>
<Token><TokenIdentifier><Name>XCTest</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
</Token>
<Token><TokenIdentifier><Name>XCTest()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/tasks/XCTest.html</Path>
<Anchor>XCTest--</Anchor></Token>
<Token><TokenIdentifier><Name>XCTestConventionPlugin</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/plugins/XCTestConventionPlugin.html</Path>
</Token>
<Token><TokenIdentifier><Name>XCTestConventionPlugin(MacOSSdkPlatformPathLocator, ToolChainSelector, NativeComponentFactory, ObjectFactory, ImmutableAttributesFactory)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/nativeplatform/test/xctest/plugins/XCTestConventionPlugin.html</Path>
<Anchor>XCTestConventionPlugin-org.gradle.nativeplatform.toolchain.internal.xcode.MacOSSdkPlatformPathLocator-org.gradle.language.nativeplatform.internal.toolchains.ToolChainSelector-org.gradle.language.internal.NativeComponentFactory-org.gradle.api.model.ObjectFactory-org.gradle.api.internal.attributes.ImmutableAttributesFactory-</Anchor></Token>
<Token><TokenIdentifier><Name>XmlConfigFile</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/ide/visualstudio/XmlConfigFile.html</Path>
</Token>
<Token><TokenIdentifier><Name>XmlFileContentMerger</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlFileContentMerger.html</Path>
</Token>
<Token><TokenIdentifier><Name>XmlFileContentMerger(XmlTransformer)</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlFileContentMerger.html</Path>
<Anchor>XmlFileContentMerger-org.gradle.internal.xml.XmlTransformer-</Anchor></Token>
<Token><TokenIdentifier><Name>XmlGeneratorTask</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlGeneratorTask.html</Path>
</Token>
<Token><TokenIdentifier><Name>XmlGeneratorTask()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/plugins/ide/api/XmlGeneratorTask.html</Path>
<Anchor>XmlGeneratorTask--</Anchor></Token>
<Token><TokenIdentifier><Name>XmlProvider</Name><Type>Interface</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/XmlProvider.html</Path>
</Token>
<Token><TokenIdentifier><Name>ZINC_CONFIGURATION_NAME</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/plugins/scala/ScalaBasePlugin.html</Path>
<Anchor>ZINC_CONFIGURATION_NAME</Anchor></Token>
<Token><TokenIdentifier><Name>Zip</Name><Type>Class</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
</Token>
<Token><TokenIdentifier><Name>Zip()</Name><Type>Constructor</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>Zip--</Anchor></Token>
<Token><TokenIdentifier><Name>ZIP_EXTENSION</Name><Type>Field</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/Zip.html</Path>
<Anchor>ZIP_EXTENSION</Anchor></Token>
<Token><TokenIdentifier><Name>ZipEntryCompression</Name><Type>Enum</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/tasks/bundling/ZipEntryCompression.html</Path>
</Token>
<Token><TokenIdentifier><Name>zipTree(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Project.html</Path>
<Anchor>zipTree-java.lang.Object-</Anchor></Token>
<Token><TokenIdentifier><Name>zipTree(Object)</Name><Type>Method</Type><APILanguage>cpp</APILanguage></TokenIdentifier><Path>org/gradle/api/Script.html</Path>
<Anchor>zipTree-java.lang.Object-</Anchor></Token>
</Tokens>