{"entries":[{"name":"Constructors","isHeader":true},{"name":"InvocationWriter(WriterController)","path":"InvocationWriter(org.codehaus.groovy.classgen.asm.WriterController)","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"castNonPrimitiveToBool(ClassNode)","path":"castNonPrimitiveToBool(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"castToNonPrimitiveIfNecessary(ClassNode, ClassNode)","path":"castToNonPrimitiveIfNecessary(org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"coerce(ClassNode, ClassNode)","path":"coerce(org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"finnishConstructorCall(ConstructorNode, String, int)","path":"finnishConstructorCall(org.codehaus.groovy.ast.ConstructorNode,%20java.lang.String,%20int)","entryType":"Method"},{"name":"getMethodName(Expression)","path":"getMethodName(org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"loadArguments(List, Parameter[])","path":"loadArguments(java.util.List,%20org.codehaus.groovy.ast.Parameter%5B%5D)","entryType":"Method"},{"name":"makeArgumentList(Expression)","path":"makeArgumentList(org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"makeCachedCall(Expression, ClassExpression, Expression, Expression, Expression, MethodCallerMultiAdapter, boolean, boolean, boolean, boolean)","path":"makeCachedCall(org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.ClassExpression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter,%20boolean,%20boolean,%20boolean,%20boolean)","entryType":"Method"},{"name":"makeCall(Expression, ClassExpression, Expression, Expression, Expression, MethodCallerMultiAdapter, boolean, boolean, boolean)","path":"makeCall(org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.ClassExpression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter,%20boolean,%20boolean,%20boolean)","entryType":"Method"},{"name":"makeCall(Expression, Expression, Expression, Expression, MethodCallerMultiAdapter, boolean, boolean, boolean)","path":"makeCall(org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter,%20boolean,%20boolean,%20boolean)","entryType":"Method"},{"name":"makeClassForNameCall(Expression, Expression, Expression, Expression)","path":"makeClassForNameCall(org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"makeDirectCall(Expression, Expression, Expression, Expression, MethodCallerMultiAdapter, boolean, boolean)","path":"makeDirectCall(org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter,%20boolean,%20boolean)","entryType":"Method"},{"name":"makeSingleArgumentCall(Expression, String, Expression)","path":"makeSingleArgumentCall(org.codehaus.groovy.ast.expr.Expression,%20java.lang.String,%20org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"makeUncachedCall(Expression, ClassExpression, Expression, Expression, Expression, MethodCallerMultiAdapter, boolean, boolean, boolean, boolean)","path":"makeUncachedCall(org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.ClassExpression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.classgen.asm.MethodCallerMultiAdapter,%20boolean,%20boolean,%20boolean,%20boolean)","entryType":"Method"},{"name":"prepareConstructorCall(ConstructorNode)","path":"prepareConstructorCall(org.codehaus.groovy.ast.ConstructorNode)","entryType":"Method"},{"name":"writeAICCall(ConstructorCallExpression)","path":"writeAICCall(org.codehaus.groovy.ast.expr.ConstructorCallExpression)","entryType":"Method"},{"name":"writeDirectMethodCall(MethodNode, boolean, Expression, TupleExpression)","path":"writeDirectMethodCall(org.codehaus.groovy.ast.MethodNode,%20boolean,%20org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.ast.expr.TupleExpression)","entryType":"Method"},{"name":"writeInvokeConstructor(ConstructorCallExpression)","path":"writeInvokeConstructor(org.codehaus.groovy.ast.expr.ConstructorCallExpression)","entryType":"Method"},{"name":"writeInvokeMethod(MethodCallExpression)","path":"writeInvokeMethod(org.codehaus.groovy.ast.expr.MethodCallExpression)","entryType":"Method"},{"name":"writeInvokeStaticMethod(StaticMethodCallExpression)","path":"writeInvokeStaticMethod(org.codehaus.groovy.ast.expr.StaticMethodCallExpression)","entryType":"Method"},{"name":"writeNormalConstructorCall(ConstructorCallExpression)","path":"writeNormalConstructorCall(org.codehaus.groovy.ast.expr.ConstructorCallExpression)","entryType":"Method"},{"name":"writeSpecialConstructorCall(ConstructorCallExpression)","path":"writeSpecialConstructorCall(org.codehaus.groovy.ast.expr.ConstructorCallExpression)","entryType":"Method"},{"name":"Fields","isHeader":true},{"name":"castToVargsArray","path":"castToVargsArray","entryType":"Field"},{"name":"invokeClosureMethod","path":"invokeClosureMethod","entryType":"Field"},{"name":"invokeMethod","path":"invokeMethod","entryType":"Field"},{"name":"invokeMethodOnCurrent","path":"invokeMethodOnCurrent","entryType":"Field"},{"name":"invokeMethodOnSuper","path":"invokeMethodOnSuper","entryType":"Field"},{"name":"invokeStaticMethod","path":"invokeStaticMethod","entryType":"Field"}]}