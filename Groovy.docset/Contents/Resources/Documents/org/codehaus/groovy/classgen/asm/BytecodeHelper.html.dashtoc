{"entries":[{"name":"Constructors","isHeader":true},{"name":"BytecodeHelper()","path":"BytecodeHelper()","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"box(MethodVisitor, Class)","path":"box(org.objectweb.asm.MethodVisitor,%20java.lang.Class)","entryType":"Method"},{"name":"box(MethodVisitor, ClassNode)","path":"box(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"doCast(MethodVisitor, Class)","path":"doCast(org.objectweb.asm.MethodVisitor,%20java.lang.Class)","entryType":"Method"},{"name":"doCast(MethodVisitor, ClassNode)","path":"doCast(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"doCastToPrimitive(MethodVisitor, ClassNode, ClassNode)","path":"doCastToPrimitive(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"doCastToWrappedType(MethodVisitor, ClassNode, ClassNode)","path":"doCastToWrappedType(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"doReturn(MethodVisitor, ClassNode)","path":"doReturn(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"formatNameForClassLoading(String)","path":"formatNameForClassLoading(java.lang.String)","entryType":"Method"},{"name":"getClassInternalName(Class)","path":"getClassInternalName(java.lang.Class)","entryType":"Method"},{"name":"getClassInternalName(ClassNode)","path":"getClassInternalName(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"getClassInternalName(String)","path":"getClassInternalName(java.lang.String)","entryType":"Method"},{"name":"getClassInternalNames(ClassNode[])","path":"getClassInternalNames(org.codehaus.groovy.ast.ClassNode%5B%5D)","entryType":"Method"},{"name":"getClassLoadingTypeDescription(ClassNode)","path":"getClassLoadingTypeDescription(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"getGenericsBounds(ClassNode)","path":"getGenericsBounds(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"getGenericsMethodSignature(MethodNode)","path":"getGenericsMethodSignature(org.codehaus.groovy.ast.MethodNode)","entryType":"Method"},{"name":"getGenericsSignature(ClassNode)","path":"getGenericsSignature(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"getMethodDescriptor(Class, Class[])","path":"getMethodDescriptor(java.lang.Class,%20java.lang.Class%5B%5D)","entryType":"Method"},{"name":"getMethodDescriptor(ClassNode, Parameter[])","path":"getMethodDescriptor(org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.Parameter%5B%5D)","entryType":"Method"},{"name":"getMethodDescriptor(MethodNode)","path":"getMethodDescriptor(org.codehaus.groovy.ast.MethodNode)","entryType":"Method"},{"name":"getTypeDescription(Class)","path":"getTypeDescription(java.lang.Class)","entryType":"Method"},{"name":"getTypeDescription(ClassNode)","path":"getTypeDescription(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"hashCode(String)","path":"hashCode(java.lang.String)","entryType":"Method"},{"name":"isClassLiteralPossible(ClassNode)","path":"isClassLiteralPossible(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"isSameCompilationUnit(ClassNode, ClassNode)","path":"isSameCompilationUnit(org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"load(MethodVisitor, ClassNode, int)","path":"load(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode,%20int)","entryType":"Method"},{"name":"negateBoolean(MethodVisitor)","path":"negateBoolean(org.objectweb.asm.MethodVisitor)","entryType":"Method"},{"name":"pushConstant(MethodVisitor, int)","path":"pushConstant(org.objectweb.asm.MethodVisitor,%20int)","entryType":"Method"},{"name":"unbox(MethodVisitor, Class)","path":"unbox(org.objectweb.asm.MethodVisitor,%20java.lang.Class)","entryType":"Method"},{"name":"unbox(MethodVisitor, ClassNode)","path":"unbox(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"visitClassLiteral(MethodVisitor, ClassNode)","path":"visitClassLiteral(org.objectweb.asm.MethodVisitor,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"}]}