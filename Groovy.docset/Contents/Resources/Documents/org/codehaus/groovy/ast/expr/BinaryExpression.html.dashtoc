{"entries":[{"name":"Constructors","isHeader":true},{"name":"BinaryExpression(Expression, Token, Expression)","path":"BinaryExpression(org.codehaus.groovy.ast.expr.Expression,%20org.codehaus.groovy.syntax.Token,%20org.codehaus.groovy.ast.expr.Expression)","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"getLeftExpression()","path":"getLeftExpression()","entryType":"Method"},{"name":"getOperation()","path":"getOperation()","entryType":"Method"},{"name":"getRightExpression()","path":"getRightExpression()","entryType":"Method"},{"name":"getText()","path":"getText()","entryType":"Method"},{"name":"newAssignmentExpression(Variable, Expression)","path":"newAssignmentExpression(org.codehaus.groovy.ast.Variable,%20org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"newInitializationExpression(String, ClassNode, Expression)","path":"newInitializationExpression(java.lang.String,%20org.codehaus.groovy.ast.ClassNode,%20org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"setLeftExpression(Expression)","path":"setLeftExpression(org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"setRightExpression(Expression)","path":"setRightExpression(org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"toString()","path":"toString()","entryType":"Method"},{"name":"transformExpression(ExpressionTransformer)","path":"transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)","entryType":"Method"},{"name":"visit(GroovyCodeVisitor)","path":"visit(org.codehaus.groovy.ast.GroovyCodeVisitor)","entryType":"Method"}]}