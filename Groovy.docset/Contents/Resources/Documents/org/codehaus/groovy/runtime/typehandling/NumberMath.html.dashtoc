{"entries":[{"name":"Constructors","isHeader":true},{"name":"NumberMath()","path":"NumberMath()","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"abs(Number)","path":"abs(java.lang.Number)","entryType":"Method"},{"name":"absImpl(Number)","path":"absImpl(java.lang.Number)","entryType":"Method"},{"name":"add(Number, Number)","path":"add(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"addImpl(Number, Number)","path":"addImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"and(Number, Number)","path":"and(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"andImpl(Number, Number)","path":"andImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"bitwiseNegate(Number)","path":"bitwiseNegate(java.lang.Number)","entryType":"Method"},{"name":"bitwiseNegateImpl(Number)","path":"bitwiseNegateImpl(java.lang.Number)","entryType":"Method"},{"name":"compareTo(Number, Number)","path":"compareTo(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"compareToImpl(Number, Number)","path":"compareToImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"createUnsupportedException(String, Number)","path":"createUnsupportedException(java.lang.String,%20java.lang.Number)","entryType":"Method"},{"name":"divide(Number, Number)","path":"divide(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"divideImpl(Number, Number)","path":"divideImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"getMath(Number, Number)","path":"getMath(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"intdiv(Number, Number)","path":"intdiv(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"intdivImpl(Number, Number)","path":"intdivImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"isBigDecimal(Number)","path":"isBigDecimal(java.lang.Number)","entryType":"Method"},{"name":"isBigInteger(Number)","path":"isBigInteger(java.lang.Number)","entryType":"Method"},{"name":"isFloatingPoint(Number)","path":"isFloatingPoint(java.lang.Number)","entryType":"Method"},{"name":"isInteger(Number)","path":"isInteger(java.lang.Number)","entryType":"Method"},{"name":"isLong(Number)","path":"isLong(java.lang.Number)","entryType":"Method"},{"name":"leftShift(Number, Number)","path":"leftShift(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"leftShiftImpl(Number, Number)","path":"leftShiftImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"mod(Number, Number)","path":"mod(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"modImpl(Number, Number)","path":"modImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"multiply(Number, Number)","path":"multiply(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"multiplyImpl(Number, Number)","path":"multiplyImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"or(Number, Number)","path":"or(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"orImpl(Number, Number)","path":"orImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"rightShift(Number, Number)","path":"rightShift(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"rightShiftImpl(Number, Number)","path":"rightShiftImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"rightShiftUnsigned(Number, Number)","path":"rightShiftUnsigned(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"rightShiftUnsignedImpl(Number, Number)","path":"rightShiftUnsignedImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"subtract(Number, Number)","path":"subtract(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"subtractImpl(Number, Number)","path":"subtractImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"toBigDecimal(Number)","path":"toBigDecimal(java.lang.Number)","entryType":"Method"},{"name":"toBigInteger(Number)","path":"toBigInteger(java.lang.Number)","entryType":"Method"},{"name":"unaryMinus(Number)","path":"unaryMinus(java.lang.Number)","entryType":"Method"},{"name":"unaryMinusImpl(Number)","path":"unaryMinusImpl(java.lang.Number)","entryType":"Method"},{"name":"unaryPlus(Number)","path":"unaryPlus(java.lang.Number)","entryType":"Method"},{"name":"unaryPlusImpl(Number)","path":"unaryPlusImpl(java.lang.Number)","entryType":"Method"},{"name":"xor(Number, Number)","path":"xor(java.lang.Number,%20java.lang.Number)","entryType":"Method"},{"name":"xorImpl(Number, Number)","path":"xorImpl(java.lang.Number,%20java.lang.Number)","entryType":"Method"}]}