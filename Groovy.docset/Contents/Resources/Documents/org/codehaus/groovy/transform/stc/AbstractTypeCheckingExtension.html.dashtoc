{"entries":[{"name":"Constructors","isHeader":true},{"name":"AbstractTypeCheckingExtension(StaticTypeCheckingVisitor)","path":"AbstractTypeCheckingExtension(org.codehaus.groovy.transform.stc.StaticTypeCheckingVisitor)","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"argTypeMatches(ClassNode[], int, Class)","path":"argTypeMatches(org.codehaus.groovy.ast.ClassNode%5B%5D,%20int,%20java.lang.Class)","entryType":"Method"},{"name":"argTypeMatches(MethodCall, int, Class)","path":"argTypeMatches(org.codehaus.groovy.ast.expr.MethodCall,%20int,%20java.lang.Class)","entryType":"Method"},{"name":"argTypesMatches(ClassNode[], Class...)","path":"argTypesMatches(org.codehaus.groovy.ast.ClassNode%5B%5D,%20java.lang.Class...)","entryType":"Method"},{"name":"argTypesMatches(MethodCall, Class...)","path":"argTypesMatches(org.codehaus.groovy.ast.expr.MethodCall,%20java.lang.Class...)","entryType":"Method"},{"name":"delegatesTo(ClassNode)","path":"delegatesTo(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"delegatesTo(ClassNode, int)","path":"delegatesTo(org.codehaus.groovy.ast.ClassNode,%20int)","entryType":"Method"},{"name":"delegatesTo(ClassNode, int, DelegationMetadata)","path":"delegatesTo(org.codehaus.groovy.ast.ClassNode,%20int,%20org.codehaus.groovy.transform.stc.DelegationMetadata)","entryType":"Method"},{"name":"firstArgTypesMatches(ClassNode[], Class...)","path":"firstArgTypesMatches(org.codehaus.groovy.ast.ClassNode%5B%5D,%20java.lang.Class...)","entryType":"Method"},{"name":"firstArgTypesMatches(MethodCall, Class...)","path":"firstArgTypesMatches(org.codehaus.groovy.ast.expr.MethodCall,%20java.lang.Class...)","entryType":"Method"},{"name":"getArguments(MethodCall)","path":"getArguments(org.codehaus.groovy.ast.expr.MethodCall)","entryType":"Method"},{"name":"getCurrentScope()","path":"getCurrentScope()","entryType":"Method"},{"name":"getEnclosingBinaryExpression()","path":"getEnclosingBinaryExpression()","entryType":"Method"},{"name":"getEnclosingBinaryExpressionStack()","path":"getEnclosingBinaryExpressionStack()","entryType":"Method"},{"name":"getEnclosingClassNode()","path":"getEnclosingClassNode()","entryType":"Method"},{"name":"getEnclosingClassNodes()","path":"getEnclosingClassNodes()","entryType":"Method"},{"name":"getEnclosingClosure()","path":"getEnclosingClosure()","entryType":"Method"},{"name":"getEnclosingClosureStack()","path":"getEnclosingClosureStack()","entryType":"Method"},{"name":"getEnclosingMethod()","path":"getEnclosingMethod()","entryType":"Method"},{"name":"getEnclosingMethodCall()","path":"getEnclosingMethodCall()","entryType":"Method"},{"name":"getEnclosingMethodCalls()","path":"getEnclosingMethodCalls()","entryType":"Method"},{"name":"getEnclosingMethods()","path":"getEnclosingMethods()","entryType":"Method"},{"name":"getGeneratedMethods()","path":"getGeneratedMethods()","entryType":"Method"},{"name":"isAnnotatedBy(ASTNode, Class)","path":"isAnnotatedBy(org.codehaus.groovy.ast.ASTNode,%20java.lang.Class)","entryType":"Method"},{"name":"isAnnotatedBy(ASTNode, ClassNode)","path":"isAnnotatedBy(org.codehaus.groovy.ast.ASTNode,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"isDynamic(VariableExpression)","path":"isDynamic(org.codehaus.groovy.ast.expr.VariableExpression)","entryType":"Method"},{"name":"isExtensionMethod(MethodNode)","path":"isExtensionMethod(org.codehaus.groovy.ast.MethodNode)","entryType":"Method"},{"name":"isGenerated(MethodNode)","path":"isGenerated(org.codehaus.groovy.ast.MethodNode)","entryType":"Method"},{"name":"isMethodCall(Object)","path":"isMethodCall(java.lang.Object)","entryType":"Method"},{"name":"log(String)","path":"log(java.lang.String)","entryType":"Method"},{"name":"makeDynamic(MethodCall)","path":"makeDynamic(org.codehaus.groovy.ast.expr.MethodCall)","entryType":"Method"},{"name":"makeDynamic(MethodCall, ClassNode)","path":"makeDynamic(org.codehaus.groovy.ast.expr.MethodCall,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"makeDynamic(PropertyExpression)","path":"makeDynamic(org.codehaus.groovy.ast.expr.PropertyExpression)","entryType":"Method"},{"name":"makeDynamic(PropertyExpression, ClassNode)","path":"makeDynamic(org.codehaus.groovy.ast.expr.PropertyExpression,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"makeDynamic(VariableExpression)","path":"makeDynamic(org.codehaus.groovy.ast.expr.VariableExpression)","entryType":"Method"},{"name":"makeDynamic(VariableExpression, ClassNode)","path":"makeDynamic(org.codehaus.groovy.ast.expr.VariableExpression,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"newMethod(String, Callable)","path":"newMethod(java.lang.String,%20java.util.concurrent.Callable)","entryType":"Method"},{"name":"newMethod(String, Class)","path":"newMethod(java.lang.String,%20java.lang.Class)","entryType":"Method"},{"name":"newMethod(String, ClassNode)","path":"newMethod(java.lang.String,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"newScope()","path":"newScope()","entryType":"Method"},{"name":"newScope(Closure)","path":"newScope(groovy.lang.Closure)","entryType":"Method"},{"name":"popEnclosingBinaryExpression()","path":"popEnclosingBinaryExpression()","entryType":"Method"},{"name":"popEnclosingClassNode()","path":"popEnclosingClassNode()","entryType":"Method"},{"name":"popEnclosingClosure()","path":"popEnclosingClosure()","entryType":"Method"},{"name":"popEnclosingMethod()","path":"popEnclosingMethod()","entryType":"Method"},{"name":"popEnclosingMethodCall()","path":"popEnclosingMethodCall()","entryType":"Method"},{"name":"popTemporaryTypeInfo()","path":"popTemporaryTypeInfo()","entryType":"Method"},{"name":"pushEnclosingBinaryExpression(BinaryExpression)","path":"pushEnclosingBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)","entryType":"Method"},{"name":"pushEnclosingClassNode(ClassNode)","path":"pushEnclosingClassNode(org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"pushEnclosingClosureExpression(ClosureExpression)","path":"pushEnclosingClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)","entryType":"Method"},{"name":"pushEnclosingMethod(MethodNode)","path":"pushEnclosingMethod(org.codehaus.groovy.ast.MethodNode)","entryType":"Method"},{"name":"pushEnclosingMethodCall(Expression)","path":"pushEnclosingMethodCall(org.codehaus.groovy.ast.expr.Expression)","entryType":"Method"},{"name":"pushTemporaryTypeInfo()","path":"pushTemporaryTypeInfo()","entryType":"Method"},{"name":"safeCall(Closure, Object...)","path":"safeCall(groovy.lang.Closure,%20java.lang.Object...)","entryType":"Method"},{"name":"scopeExit()","path":"scopeExit()","entryType":"Method"},{"name":"scopeExit(Closure)","path":"scopeExit(groovy.lang.Closure)","entryType":"Method"},{"name":"setHandled(boolean)","path":"setHandled(boolean)","entryType":"Method"},{"name":"unique(MethodNode)","path":"unique(org.codehaus.groovy.ast.MethodNode)","entryType":"Method"},{"name":"withTypeChecker(Closure)","path":"withTypeChecker(groovy.lang.Closure)","entryType":"Method"},{"name":"Fields","isHeader":true},{"name":"context","path":"context","entryType":"Field"},{"name":"debug","path":"debug","entryType":"Field"},{"name":"handled","path":"handled","entryType":"Field"}]}