{"entries":[{"name":"Constructors","isHeader":true},{"name":"CompileStack(WriterController)","path":"CompileStack(org.codehaus.groovy.classgen.asm.WriterController)","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"addExceptionBlock(Label, Label, Label, String)","path":"addExceptionBlock(org.objectweb.asm.Label,%20org.objectweb.asm.Label,%20org.objectweb.asm.Label,%20java.lang.String)","entryType":"Method"},{"name":"applyBlockRecorder()","path":"applyBlockRecorder()","entryType":"Method"},{"name":"applyFinallyBlocks(Label, boolean)","path":"applyFinallyBlocks(org.objectweb.asm.Label,%20boolean)","entryType":"Method"},{"name":"clear()","path":"clear()","entryType":"Method"},{"name":"containsVariable(String)","path":"containsVariable(java.lang.String)","entryType":"Method"},{"name":"createLocalLabel(String)","path":"createLocalLabel(java.lang.String)","entryType":"Method"},{"name":"defineTemporaryVariable(String, boolean)","path":"defineTemporaryVariable(java.lang.String,%20boolean)","entryType":"Method"},{"name":"defineTemporaryVariable(String, ClassNode, boolean)","path":"defineTemporaryVariable(java.lang.String,%20org.codehaus.groovy.ast.ClassNode,%20boolean)","entryType":"Method"},{"name":"defineTemporaryVariable(Variable, boolean)","path":"defineTemporaryVariable(org.codehaus.groovy.ast.Variable,%20boolean)","entryType":"Method"},{"name":"defineVariable(Variable, boolean)","path":"defineVariable(org.codehaus.groovy.ast.Variable,%20boolean)","entryType":"Method"},{"name":"defineVariable(Variable, ClassNode, boolean)","path":"defineVariable(org.codehaus.groovy.ast.Variable,%20org.codehaus.groovy.ast.ClassNode,%20boolean)","entryType":"Method"},{"name":"getBreakLabel()","path":"getBreakLabel()","entryType":"Method"},{"name":"getContinueLabel()","path":"getContinueLabel()","entryType":"Method"},{"name":"getLabel(String)","path":"getLabel(java.lang.String)","entryType":"Method"},{"name":"getNamedBreakLabel(String)","path":"getNamedBreakLabel(java.lang.String)","entryType":"Method"},{"name":"getNamedContinueLabel(String)","path":"getNamedContinueLabel(java.lang.String)","entryType":"Method"},{"name":"getScope()","path":"getScope()","entryType":"Method"},{"name":"getVariable(String)","path":"getVariable(java.lang.String)","entryType":"Method"},{"name":"getVariable(String, boolean)","path":"getVariable(java.lang.String,%20boolean)","entryType":"Method"},{"name":"hasBlockRecorder()","path":"hasBlockRecorder()","entryType":"Method"},{"name":"init(VariableScope, Parameter[])","path":"init(org.codehaus.groovy.ast.VariableScope,%20org.codehaus.groovy.ast.Parameter%5B%5D)","entryType":"Method"},{"name":"isImplicitThis()","path":"isImplicitThis()","entryType":"Method"},{"name":"isInSpecialConstructorCall()","path":"isInSpecialConstructorCall()","entryType":"Method"},{"name":"isLHS()","path":"isLHS()","entryType":"Method"},{"name":"pop()","path":"pop()","entryType":"Method"},{"name":"popBlockRecorderVisit(BlockRecorder)","path":"popBlockRecorderVisit(org.codehaus.groovy.classgen.asm.CompileStack.BlockRecorder)","entryType":"Method"},{"name":"popImplicitThis()","path":"popImplicitThis()","entryType":"Method"},{"name":"popLHS()","path":"popLHS()","entryType":"Method"},{"name":"pushBlockRecorder(BlockRecorder)","path":"pushBlockRecorder(org.codehaus.groovy.classgen.asm.CompileStack.BlockRecorder)","entryType":"Method"},{"name":"pushBlockRecorderVisit(BlockRecorder)","path":"pushBlockRecorderVisit(org.codehaus.groovy.classgen.asm.CompileStack.BlockRecorder)","entryType":"Method"},{"name":"pushBooleanExpression()","path":"pushBooleanExpression()","entryType":"Method"},{"name":"pushImplicitThis(boolean)","path":"pushImplicitThis(boolean)","entryType":"Method"},{"name":"pushInSpecialConstructorCall()","path":"pushInSpecialConstructorCall()","entryType":"Method"},{"name":"pushLHS(boolean)","path":"pushLHS(boolean)","entryType":"Method"},{"name":"pushLoop(List)","path":"pushLoop(java.util.List)","entryType":"Method"},{"name":"pushLoop(String)","path":"pushLoop(java.lang.String)","entryType":"Method"},{"name":"pushLoop(VariableScope, List)","path":"pushLoop(org.codehaus.groovy.ast.VariableScope,%20java.util.List)","entryType":"Method"},{"name":"pushLoop(VariableScope, String)","path":"pushLoop(org.codehaus.groovy.ast.VariableScope,%20java.lang.String)","entryType":"Method"},{"name":"pushState()","path":"pushState()","entryType":"Method"},{"name":"pushSwitch()","path":"pushSwitch()","entryType":"Method"},{"name":"pushVariableScope(VariableScope)","path":"pushVariableScope(org.codehaus.groovy.ast.VariableScope)","entryType":"Method"},{"name":"removeVar(int)","path":"removeVar(int)","entryType":"Method"},{"name":"writeExceptionTable(BlockRecorder, Label, String)","path":"writeExceptionTable(org.codehaus.groovy.classgen.asm.CompileStack.BlockRecorder,%20org.objectweb.asm.Label,%20java.lang.String)","entryType":"Method"}]}