{"entries":[{"name":"Constructors","isHeader":true},{"name":"AntlrParserPlugin()","path":"AntlrParserPlugin()","entryType":"Constructor"},{"name":"Methods","isHeader":true},{"name":"addArgumentExpression(AST, List)","path":"addArgumentExpression(antlr.collections.AST,%20java.util.List)","entryType":"Method"},{"name":"annotation(AST)","path":"annotation(antlr.collections.AST)","entryType":"Method"},{"name":"annotationDef(AST)","path":"annotationDef(antlr.collections.AST)","entryType":"Method"},{"name":"anonymousInnerClassDef(AST)","path":"anonymousInnerClassDef(antlr.collections.AST)","entryType":"Method"},{"name":"arguments(AST)","path":"arguments(antlr.collections.AST)","entryType":"Method"},{"name":"arraySizeExpression(AST)","path":"arraySizeExpression(antlr.collections.AST)","entryType":"Method"},{"name":"asExpression(AST)","path":"asExpression(antlr.collections.AST)","entryType":"Method"},{"name":"assertNodeType(int, AST)","path":"assertNodeType(int,%20antlr.collections.AST)","entryType":"Method"},{"name":"assertStatement(AST)","path":"assertStatement(antlr.collections.AST)","entryType":"Method"},{"name":"assertTypeNotNull(ClassNode, AST)","path":"assertTypeNotNull(org.codehaus.groovy.ast.ClassNode,%20antlr.collections.AST)","entryType":"Method"},{"name":"binaryExpression(int, AST)","path":"binaryExpression(int,%20antlr.collections.AST)","entryType":"Method"},{"name":"blockExpression(AST)","path":"blockExpression(antlr.collections.AST)","entryType":"Method"},{"name":"booleanExpression(AST)","path":"booleanExpression(antlr.collections.AST)","entryType":"Method"},{"name":"breakStatement(AST)","path":"breakStatement(antlr.collections.AST)","entryType":"Method"},{"name":"buildAST(SourceUnit, ClassLoader, Reduction)","path":"buildAST(org.codehaus.groovy.control.SourceUnit,%20java.lang.ClassLoader,%20org.codehaus.groovy.syntax.Reduction)","entryType":"Method"},{"name":"buildName(AST)","path":"buildName(antlr.collections.AST)","entryType":"Method"},{"name":"caseStatements(AST, List)","path":"caseStatements(antlr.collections.AST,%20java.util.List)","entryType":"Method"},{"name":"castExpression(AST)","path":"castExpression(antlr.collections.AST)","entryType":"Method"},{"name":"catchStatement(AST)","path":"catchStatement(antlr.collections.AST)","entryType":"Method"},{"name":"classDef(AST)","path":"classDef(antlr.collections.AST)","entryType":"Method"},{"name":"closureExpression(AST)","path":"closureExpression(antlr.collections.AST)","entryType":"Method"},{"name":"configureAST(ASTNode, AST)","path":"configureAST(org.codehaus.groovy.ast.ASTNode,%20antlr.collections.AST)","entryType":"Method"},{"name":"constructorCallExpression(AST)","path":"constructorCallExpression(antlr.collections.AST)","entryType":"Method"},{"name":"constructorDef(AST)","path":"constructorDef(antlr.collections.AST)","entryType":"Method"},{"name":"continueStatement(AST)","path":"continueStatement(antlr.collections.AST)","entryType":"Method"},{"name":"convertGroovy(AST)","path":"convertGroovy(antlr.collections.AST)","entryType":"Method"},{"name":"decimalExpression(AST)","path":"decimalExpression(antlr.collections.AST)","entryType":"Method"},{"name":"declarationExpression(AST)","path":"declarationExpression(antlr.collections.AST)","entryType":"Method"},{"name":"dotExpression(AST)","path":"dotExpression(antlr.collections.AST)","entryType":"Method"},{"name":"dump(AST)","path":"dump(antlr.collections.AST)","entryType":"Method"},{"name":"dumpTree(AST)","path":"dumpTree(antlr.collections.AST)","entryType":"Method"},{"name":"dynamicMemberExpression(AST)","path":"dynamicMemberExpression(antlr.collections.AST)","entryType":"Method"},{"name":"enumArguments(AST)","path":"enumArguments(antlr.collections.AST)","entryType":"Method"},{"name":"enumConstantDef(AST)","path":"enumConstantDef(antlr.collections.AST)","entryType":"Method"},{"name":"enumDef(AST)","path":"enumDef(antlr.collections.AST)","entryType":"Method"},{"name":"expression(AST)","path":"expression(antlr.collections.AST)","entryType":"Method"},{"name":"expression(AST, boolean)","path":"expression(antlr.collections.AST,%20boolean)","entryType":"Method"},{"name":"expressionList(AST)","path":"expressionList(antlr.collections.AST)","entryType":"Method"},{"name":"expressionSwitch(AST)","path":"expressionSwitch(antlr.collections.AST)","entryType":"Method"},{"name":"fieldDef(AST)","path":"fieldDef(antlr.collections.AST)","entryType":"Method"},{"name":"forStatement(AST)","path":"forStatement(antlr.collections.AST)","entryType":"Method"},{"name":"getFirstChildText(AST)","path":"getFirstChildText(antlr.collections.AST)","entryType":"Method"},{"name":"gstring(AST)","path":"gstring(antlr.collections.AST)","entryType":"Method"},{"name":"hasVisibility(int)","path":"hasVisibility(int)","entryType":"Method"},{"name":"identifier(AST)","path":"identifier(antlr.collections.AST)","entryType":"Method"},{"name":"ifStatement(AST)","path":"ifStatement(antlr.collections.AST)","entryType":"Method"},{"name":"importDef(AST)","path":"importDef(antlr.collections.AST)","entryType":"Method"},{"name":"indexExpression(AST)","path":"indexExpression(antlr.collections.AST)","entryType":"Method"},{"name":"innerClassDef(AST)","path":"innerClassDef(antlr.collections.AST)","entryType":"Method"},{"name":"innerInterfaceDef(AST)","path":"innerInterfaceDef(antlr.collections.AST)","entryType":"Method"},{"name":"instanceofExpression(AST)","path":"instanceofExpression(antlr.collections.AST)","entryType":"Method"},{"name":"integerExpression(AST)","path":"integerExpression(antlr.collections.AST)","entryType":"Method"},{"name":"interfaceDef(AST)","path":"interfaceDef(antlr.collections.AST)","entryType":"Method"},{"name":"interfaces(AST)","path":"interfaces(antlr.collections.AST)","entryType":"Method"},{"name":"isPrimitiveTypeLiteral(AST)","path":"isPrimitiveTypeLiteral(antlr.collections.AST)","entryType":"Method"},{"name":"isType(int, AST)","path":"isType(int,%20antlr.collections.AST)","entryType":"Method"},{"name":"label(AST)","path":"label(antlr.collections.AST)","entryType":"Method"},{"name":"labelledStatement(AST)","path":"labelledStatement(antlr.collections.AST)","entryType":"Method"},{"name":"listExpression(AST)","path":"listExpression(antlr.collections.AST)","entryType":"Method"},{"name":"literalExpression(AST, Object)","path":"literalExpression(antlr.collections.AST,%20java.lang.Object)","entryType":"Method"},{"name":"makeGenericsType(AST)","path":"makeGenericsType(antlr.collections.AST)","entryType":"Method"},{"name":"makeToken(int, AST)","path":"makeToken(int,%20antlr.collections.AST)","entryType":"Method"},{"name":"makeType(AST)","path":"makeType(antlr.collections.AST)","entryType":"Method"},{"name":"makeTypeWithArguments(AST)","path":"makeTypeWithArguments(antlr.collections.AST)","entryType":"Method"},{"name":"mapEntryExpression(AST)","path":"mapEntryExpression(antlr.collections.AST)","entryType":"Method"},{"name":"mapExpression(AST)","path":"mapExpression(antlr.collections.AST)","entryType":"Method"},{"name":"methodCall(AST)","path":"methodCall(antlr.collections.AST)","entryType":"Method"},{"name":"methodCallExpression(AST)","path":"methodCallExpression(antlr.collections.AST)","entryType":"Method"},{"name":"methodDef(AST)","path":"methodDef(antlr.collections.AST)","entryType":"Method"},{"name":"methodPointerExpression(AST)","path":"methodPointerExpression(antlr.collections.AST)","entryType":"Method"},{"name":"modifiers(AST, List, int)","path":"modifiers(antlr.collections.AST,%20java.util.List,%20int)","entryType":"Method"},{"name":"notImplementedYet(AST)","path":"notImplementedYet(antlr.collections.AST)","entryType":"Method"},{"name":"objectBlock(AST)","path":"objectBlock(antlr.collections.AST)","entryType":"Method"},{"name":"objectInit(AST)","path":"objectInit(antlr.collections.AST)","entryType":"Method"},{"name":"outputAST(SourceUnit, SourceBuffer)","path":"outputAST(org.codehaus.groovy.control.SourceUnit,%20org.codehaus.groovy.antlr.SourceBuffer)","entryType":"Method"},{"name":"packageDef(AST)","path":"packageDef(antlr.collections.AST)","entryType":"Method"},{"name":"parameter(AST)","path":"parameter(antlr.collections.AST)","entryType":"Method"},{"name":"parameters(AST)","path":"parameters(antlr.collections.AST)","entryType":"Method"},{"name":"parseCST(SourceUnit, Reader)","path":"parseCST(org.codehaus.groovy.control.SourceUnit,%20java.io.Reader)","entryType":"Method"},{"name":"postfixExpression(AST, int)","path":"postfixExpression(antlr.collections.AST,%20int)","entryType":"Method"},{"name":"prefixExpression(AST, int)","path":"prefixExpression(antlr.collections.AST,%20int)","entryType":"Method"},{"name":"processAST()","path":"processAST()","entryType":"Method"},{"name":"qualifiedName(AST)","path":"qualifiedName(antlr.collections.AST)","entryType":"Method"},{"name":"rangeExpression(AST, boolean)","path":"rangeExpression(antlr.collections.AST,%20boolean)","entryType":"Method"},{"name":"returnStatement(AST)","path":"returnStatement(antlr.collections.AST)","entryType":"Method"},{"name":"setAccessTrue(AST, boolean)","path":"setAccessTrue(antlr.collections.AST,%20boolean)","entryType":"Method"},{"name":"setModifierBit(AST, int, int)","path":"setModifierBit(antlr.collections.AST,%20int,%20int)","entryType":"Method"},{"name":"specialConstructorCallExpression(AST, ClassNode)","path":"specialConstructorCallExpression(antlr.collections.AST,%20org.codehaus.groovy.ast.ClassNode)","entryType":"Method"},{"name":"spreadExpression(AST)","path":"spreadExpression(antlr.collections.AST)","entryType":"Method"},{"name":"spreadMapExpression(AST)","path":"spreadMapExpression(antlr.collections.AST)","entryType":"Method"},{"name":"statement(AST)","path":"statement(antlr.collections.AST)","entryType":"Method"},{"name":"statementList(AST)","path":"statementList(antlr.collections.AST)","entryType":"Method"},{"name":"statementListNoChild(AST, AST)","path":"statementListNoChild(antlr.collections.AST,%20antlr.collections.AST)","entryType":"Method"},{"name":"staticInit(AST)","path":"staticInit(antlr.collections.AST)","entryType":"Method"},{"name":"switchStatement(AST)","path":"switchStatement(antlr.collections.AST)","entryType":"Method"},{"name":"synchronizedStatement(AST)","path":"synchronizedStatement(antlr.collections.AST)","entryType":"Method"},{"name":"ternaryExpression(AST)","path":"ternaryExpression(antlr.collections.AST)","entryType":"Method"},{"name":"throwsList(AST, List)","path":"throwsList(antlr.collections.AST,%20java.util.List)","entryType":"Method"},{"name":"throwStatement(AST)","path":"throwStatement(antlr.collections.AST)","entryType":"Method"},{"name":"transformCSTIntoAST(SourceUnit, Reader, SourceBuffer)","path":"transformCSTIntoAST(org.codehaus.groovy.control.SourceUnit,%20java.io.Reader,%20org.codehaus.groovy.antlr.SourceBuffer)","entryType":"Method"},{"name":"tryStatement(AST)","path":"tryStatement(antlr.collections.AST)","entryType":"Method"},{"name":"type(AST)","path":"type(antlr.collections.AST)","entryType":"Method"},{"name":"unaryMinusExpression(AST)","path":"unaryMinusExpression(antlr.collections.AST)","entryType":"Method"},{"name":"unaryPlusExpression(AST)","path":"unaryPlusExpression(antlr.collections.AST)","entryType":"Method"},{"name":"unknownAST(AST)","path":"unknownAST(antlr.collections.AST)","entryType":"Method"},{"name":"variableDef(AST)","path":"variableDef(antlr.collections.AST)","entryType":"Method"},{"name":"variableExpression(AST)","path":"variableExpression(antlr.collections.AST)","entryType":"Method"},{"name":"whileStatement(AST)","path":"whileStatement(antlr.collections.AST)","entryType":"Method"},{"name":"Fields","isHeader":true},{"name":"ast","path":"ast","entryType":"Field"}]}